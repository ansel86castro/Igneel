  Igneel.Design.Controls.AngleControl.resources - Embedded, ContainedInManifestFile, 
  Igneel.Design.Controls.AttitudePicker.resources - Embedded, ContainedInManifestFile, 
  Igneel.Design.Controls.ColorPicker.resources - Embedded, ContainedInManifestFile, 
  Igneel.Design.Controls.DirectionPicker.resources - Embedded, ContainedInManifestFile, 
  Igneel.Design.Controls.EulerEditor.resources - Embedded, ContainedInManifestFile, 
  Igneel.Design.Controls.NumericStep.resources - Embedded, ContainedInManifestFile, 
  Igneel.Design.Controls.Vector3Editor.resources - Embedded, ContainedInManifestFile, 
  Igneel.Design.Forms.AttitudePickerForm.resources - Embedded, ContainedInManifestFile, 
  Igneel.Design.Forms.TypeProviderForm.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly Igneel, Version=1.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly ClrPlatformLib, Version=0.0.*, Culture=Invariant Language (Invariant Country): 
	hash=None, flags=None
Assembly Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Struct Igneel.Animations.PlayingState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Animations.PlayingState Stoped = 0 : Public, Static, Literal, HasDefault
    Igneel.Animations.PlayingState Playing = 1 : Public, Static, Literal, HasDefault
Interface Igneel.INameable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Assets.IAssetProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CreateAsset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Animations.Animation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Igneel.Animations.AnimationManager, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.Animations.AnimationManager Manager 'get ' : 
    Igneel.Collections.ObservedDictionary`2[System.String,Igneel.Animations.AnimationNode] Nodes 'get ' : 
    System.String Name 'get set' : 
    Single LastKeyValue 'get set' : 
    Int32 NbCursors 'get ' : 
  Events:
    System.Action`1[Igneel.Animations.Animation] AnimationStepEnd: 
  Methods:
    add_AnimationStepEnd(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_AnimationStepEnd(Action`1): PrivateScope, Public, HideBySig, SpecialName
    get_Manager(): PrivateScope, Public, HideBySig, SpecialName
    get_Nodes(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LastKeyValue(): PrivateScope, Public, HideBySig, SpecialName
    IsAnimationFinalized(Int32): PrivateScope, Public, HideBySig
    GetCursor(Int32): PrivateScope, Public, HideBySig
    get_NbCursors(): PrivateScope, Public, HideBySig, SpecialName
    CreateCursor(): PrivateScope, Public, HideBySig
    Update(Single, Cursor(Optional, HasDefault), Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Update(Single, Int32, Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Sample(Single, Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Assets.IProviderActivator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Initialize(IAssetProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInstance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Animations.Animation+Cursor: AutoLayout, AnsiClass, Class, NestedPublic, Serializable, BeforeFieldInit
    Void .ctor(Igneel.Animations.Animation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean TimeRestart 'get ' : 
    Igneel.Animations.Animation Animation 'get set' : 
    Single Time 'get set' : 
    Single PlayVelocity 'get set' : 
    Single PlayDirection 'get set' : 
    Igneel.Animations.AnimationLooping Looping 'get set' : 
    Single StartTime 'get set' : 
    Single EndTime 'get set' : 
    Boolean Stoped 'get ' : 
    Boolean IsAnimationBlended 'get set' : 
  Events:
    System.Action`2[Igneel.Animations.Animation,Igneel.Animations.Animation+Cursor] AnimationEnd: 
  Methods:
    add_AnimationEnd(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_AnimationEnd(Action`2): PrivateScope, Public, HideBySig, SpecialName
    Create(Animation): PrivateScope, Public, Static, HideBySig
    get_TimeRestart(): PrivateScope, Public, HideBySig, SpecialName
    get_Animation(): PrivateScope, Public, HideBySig, SpecialName
    get_Time(): PrivateScope, Public, HideBySig, SpecialName
    set_Time(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PlayVelocity(): PrivateScope, Public, HideBySig, SpecialName
    set_PlayVelocity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PlayDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_PlayDirection(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Looping(): PrivateScope, Public, HideBySig, SpecialName
    set_Looping(AnimationLooping): PrivateScope, Public, HideBySig, SpecialName
    get_StartTime(): PrivateScope, Public, HideBySig, SpecialName
    set_StartTime(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EndTime(): PrivateScope, Public, HideBySig, SpecialName
    set_EndTime(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Stoped(): PrivateScope, Public, HideBySig, SpecialName
    OnAnimationEnd(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateTime(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateTime(): PrivateScope, Public, HideBySig
    get_IsAnimationBlended(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAnimationBlended(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct Igneel.Animations.AnimationLooping: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Animations.AnimationLooping None = 0 : Public, Static, Literal, HasDefault
    Igneel.Animations.AnimationLooping Secuential = 1 : Public, Static, Literal, HasDefault
    Igneel.Animations.AnimationLooping PinPon = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Animations.InterpolationMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Animations.InterpolationMethod LINEAR = 0 : Public, Static, Literal, HasDefault
    Igneel.Animations.InterpolationMethod BEZIER = 1 : Public, Static, Literal, HasDefault
    Igneel.Animations.InterpolationMethod CARDINAL = 2 : Public, Static, Literal, HasDefault
    Igneel.Animations.InterpolationMethod HERMITE = 3 : Public, Static, Literal, HasDefault
    Igneel.Animations.InterpolationMethod BSPLINE = 4 : Public, Static, Literal, HasDefault
    Igneel.Animations.InterpolationMethod STEP = 5 : Public, Static, Literal, HasDefault
    Igneel.Animations.InterpolationMethod QUATSLERP = 6 : Public, Static, Literal, HasDefault
    Igneel.Animations.InterpolationMethod QUATSLERPX = 7 : Public, Static, Literal, HasDefault
    Igneel.Animations.InterpolationMethod QUATSLERPY = 8 : Public, Static, Literal, HasDefault
    Igneel.Animations.InterpolationMethod QUATSLERPZ = 9 : Public, Static, Literal, HasDefault
Class Igneel.Animations.AnimationCurve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
    Igneel.Assets.IAssetProvider
  Properties:
    System.String Name 'get set' : 
    Igneel.Animations.ICurveOutput CurveOutput 'get set' : 
    Single[] Output 'get set' : 
    Int32 OutputDim 'get set' : 
    Single[] In_tangent 'get set' : 
    Single[] Out_tangent 'get set' : 
    Igneel.Animations.InterpolationMethod InterpolationType 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurveOutput(): PrivateScope, Public, HideBySig, SpecialName
    set_CurveOutput(ICurveOutput): PrivateScope, Public, HideBySig, SpecialName
    get_Output(): PrivateScope, Public, HideBySig, SpecialName
    set_Output(Single[]): PrivateScope, Public, HideBySig, SpecialName
    get_OutputDim(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputDim(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_In_tangent(): PrivateScope, Public, HideBySig, SpecialName
    set_In_tangent(Single[]): PrivateScope, Public, HideBySig, SpecialName
    get_Out_tangent(): PrivateScope, Public, HideBySig, SpecialName
    set_Out_tangent(Single[]): PrivateScope, Public, HideBySig, SpecialName
    get_InterpolationType(): PrivateScope, Public, HideBySig, SpecialName
    set_InterpolationType(InterpolationMethod): PrivateScope, Public, HideBySig, SpecialName
    Sample(Single, Int32, Int32, Single[], IAnimContext): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Animations.AnimationManager: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Collections.ObservedDictionary`2[System.String,Igneel.Animations.Animation] Animations 'get ' : 
  Methods:
    get_Animations(): PrivateScope, Public, HideBySig, SpecialName
    GetContext(Object): PrivateScope, Public, Static, HideBySig
    RemoveContext(Object): PrivateScope, Public, Static, HideBySig
    ContainsContext(Object): PrivateScope, Public, Static, HideBySig
    SetContext(IAnimContext): PrivateScope, Public, Static, HideBySig
Class Igneel.Animations.AnimationNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
    Igneel.Assets.IAssetProvider
  Properties:
    System.String Name 'get set' : 
    Igneel.Animations.Animation Animation 'get set' : 
    Igneel.Animations.AnimationCurve[] Curves 'get set' : 
    Single[][] CurveKeys 'get set' : 
    Int32[] KeysIndices 'get set' : 
    Single LastKeyValue 'get ' : 
    Igneel.Animations.IAnimContext Context 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Animation(): PrivateScope, Public, HideBySig, SpecialName
    set_Animation(Animation): PrivateScope, Public, HideBySig, SpecialName
    get_Curves(): PrivateScope, Public, HideBySig, SpecialName
    set_Curves(AnimationCurve[]): PrivateScope, Public, HideBySig, SpecialName
    get_CurveKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_CurveKeys(Single[][]): PrivateScope, Public, HideBySig, SpecialName
    get_KeysIndices(): PrivateScope, Public, HideBySig, SpecialName
    set_KeysIndices(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_LastKeyValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
    set_Context(IAnimContext): PrivateScope, Public, HideBySig, SpecialName
    Sample(Single, Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetMaxKeyValue(): PrivateScope, Public, HideBySig
    GetMinKeyValue(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Igneel.IDynamic: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Update(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Animations.SecuenceStateMachine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[Igneel.Animations.SecuenceNode]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IDynamic
  Properties:
    Igneel.Collections.ObservedDictionary`2[System.String,Igneel.Animations.SecuenceNode] Nodes 'get ' : 
  Methods:
    get_Nodes(): PrivateScope, Public, HideBySig, SpecialName
    WithState(String, Action`1): PrivateScope, Public, HideBySig
    WithState(SecuenceNode): PrivateScope, Public, HideBySig
    WithTransition(String, String, SecuenceTransition): PrivateScope, Public, HideBySig
    Update(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.BoneInfo: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    AddSkin(SceneNode, SkinDeformer): PrivateScope, Public, Static, HideBySig
    RemoveSkin(SceneNode, SkinDeformer): PrivateScope, Public, Static, HideBySig
    GetSkins(SceneNode): PrivateScope, Public, Static, HideBySig
    GetRootBone(SceneNode): PrivateScope, Public, Static, HideBySig
    EnumerateVertexes(SceneNode): PrivateScope, Public, Static, HideBySig
    GetVertexes(SceneNode): PrivateScope, Public, Static, HideBySig
Interface Igneel.IResourceAllocator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Boolean Disposed 'get ' : 
  Methods:
    get_Disposed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.ResourceAllocator: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IResourceAllocator
    System.IDisposable
  Properties:
    Boolean Disposed 'get set' : 
  Events:
    System.EventHandler Disposing: 
  Methods:
    add_Disposing(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposing(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Disposed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Animations.Deformer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.IDynamic
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.SceneNode Node 'get set' : 
  Events:
    Igneel.UpdateEventHandler UpdateEvent: 
  Methods:
    add_UpdateEvent(UpdateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_UpdateEvent(UpdateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Node(): PrivateScope, Public, HideBySig, SpecialName
    set_Node(SceneNode): PrivateScope, Public, HideBySig, SpecialName
    Update(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateAsset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnAssetDestroyed(AssetReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Animations.SkinDeformer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Animations.Deformer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Mesh): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.SceneNode BoneRoot 'get ' : 
    Int32[][] LayerBonesLookup 'get set' : 
    Igneel.Mesh Mesh 'get set' : 
    Int32 MaxVertexInfluences 'get set' : 
    Igneel.SceneNode[] Bones 'get set' : 
    Igneel.Matrix[] BoneBindingMatrices 'get set' : 
    Igneel.Matrix BindShapePose 'get set' : 
    Boolean HasBonesPerLayer 'get ' : 
  Methods:
    get_BoneRoot(): PrivateScope, Public, HideBySig, SpecialName
    get_LayerBonesLookup(): PrivateScope, Public, HideBySig, SpecialName
    set_LayerBonesLookup(Int32[][]): PrivateScope, Public, HideBySig, SpecialName
    get_Mesh(): PrivateScope, Public, HideBySig, SpecialName
    set_Mesh(Mesh): PrivateScope, Public, HideBySig, SpecialName
    get_MaxVertexInfluences(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxVertexInfluences(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Bones(): PrivateScope, Public, HideBySig, SpecialName
    set_Bones(SceneNode[]): PrivateScope, Public, HideBySig, SpecialName
    get_BoneBindingMatrices(): PrivateScope, Public, HideBySig, SpecialName
    set_BoneBindingMatrices(Matrix[]): PrivateScope, Public, HideBySig, SpecialName
    get_BindShapePose(): PrivateScope, Public, HideBySig, SpecialName
    set_BindShapePose(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_HasBonesPerLayer(): PrivateScope, Public, HideBySig, SpecialName
    ComputeBoneBindingMatrices(): PrivateScope, Public, HideBySig
    GetLayerBones(MeshPart): PrivateScope, Public, HideBySig
    GetLayerBones(Int32): PrivateScope, Public, HideBySig
    SetBonesMapping(Int32, Int32[]): PrivateScope, Public, HideBySig
    GetVertexAttrib(Int32, IASemantic, Int32): PrivateScope, Public, HideBySig
    ReSkinMesh(Int32): PrivateScope, Public, HideBySig
Interface Igneel.Assets.IStoreConverter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.Animations.IAnimContext: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.Animations.IAnimContext Next 'get set' : 
    System.Object Target 'get set' : 
  Methods:
    get_Next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Next(IAnimContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Target(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Target(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    OnSample(Boolean, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CaptureTargetState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RestoreTargetState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.Animations.ITargetNamedContext: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Animations.IAnimContext
    Igneel.Assets.IAssetProvider
  Properties:
    System.String TargetName 'get set' : 
  Methods:
    get_TargetName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TargetName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Animations.IAnimContext`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Interfaces:
    Igneel.Animations.IAnimContext
    Igneel.Assets.IAssetProvider
  Properties:
    T Data     'get ' : 
    Igneel.Animations.IAnimContext`1[T] Next 'get set' : 
  Methods:
    get_Data(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Next(IAnimContext`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Animations.ICurveOutput: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Assets.IAssetProvider
  Methods:
    SetOutput(IntPtr, IAnimContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Animations.CurveOutput`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Action`2[T,System.IntPtr]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Animations.ICurveOutput
    Igneel.Assets.IAssetProvider
  Properties:
    System.Action`2[T,System.IntPtr] OutputAction 'get set' : 
  Methods:
    get_OutputAction(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputAction(Action`2): PrivateScope, Public, HideBySig, SpecialName
    SetOutput(IntPtr, IAnimContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Animations.SceneNodeTransforms: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Vector3 Traslation 'get set' : 
    Single TraslationX 'get set' : 
    Single TraslationY 'get set' : 
    Single TraslationZ 'get set' : 
    Igneel.Vector3 Scale 'get set' : 
    Single ScalingX 'get set' : 
    Single ScalingY 'get set' : 
    Single ScalingZ 'get set' : 
    Igneel.Matrix Pose 'get set' : 
  Methods:
    ApplyRotation(Matrix, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ApplyRotation(Quaternion, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Traslation(): PrivateScope, Public, HideBySig, SpecialName
    set_Traslation(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_TraslationX(): PrivateScope, Public, HideBySig, SpecialName
    set_TraslationX(Single): PrivateScope, Public, HideBySig, SpecialName
    get_TraslationY(): PrivateScope, Public, HideBySig, SpecialName
    set_TraslationY(Single): PrivateScope, Public, HideBySig, SpecialName
    get_TraslationZ(): PrivateScope, Public, HideBySig, SpecialName
    set_TraslationZ(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_ScalingX(): PrivateScope, Public, HideBySig, SpecialName
    set_ScalingX(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ScalingY(): PrivateScope, Public, HideBySig, SpecialName
    set_ScalingY(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ScalingZ(): PrivateScope, Public, HideBySig, SpecialName
    set_ScalingZ(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Pose(): PrivateScope, Public, HideBySig, SpecialName
    set_Pose(Matrix): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
Class Igneel.Animations.SceneNodeAnimContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.SceneNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Animations.IAnimContext`1[Igneel.Animations.SceneNodeTransforms]
    Igneel.Animations.IAnimContext
    Igneel.Assets.IAssetProvider
    Igneel.Animations.ITargetNamedContext
  Properties:
    System.String TargetName 'get set' : 
    Igneel.Animations.SceneNodeAnimContext Next 'get set' : 
    Igneel.SceneNode Target 'get set' : 
    Igneel.Animations.SceneNodeTransforms Data 'get ' : 
  Methods:
    get_TargetName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TargetName(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Next(): PrivateScope, Public, HideBySig, SpecialName
    set_Next(SceneNodeAnimContext): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(SceneNode): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CaptureTargetState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RestoreTargetState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnSample(Boolean, Single(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Igneel.Animations.IAnimationTargetResetter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Animations.SceneNodePoseResetter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.SceneNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Animations.IAnimationTargetResetter
  Methods:
    Init(SceneNode): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Animations.SecuenceNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Int32, System.Collections.Generic.IEnumerable`1[Igneel.Animations.AnimationBlend]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, Igneel.Animations.AnimationBlend[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Igneel.Animations.Animation, Single, Single, Igneel.Animations.AnimationLooping, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
  Properties:
    System.Collections.Generic.List`1[Igneel.Animations.AnimationBlend] Animations 'get ' : 
    System.String Name 'get set' : 
    Int32 Id   'get set' : 
    Igneel.Animations.SecuenceTransition CurrentTransition 'get ' : 
    Single PlayDirection 'get set' : 
    Single PlayVelocity 'get set' : 
    Igneel.Animations.AnimationLooping Looping 'get set' : 
  Events:
    System.Action`2[Igneel.Animations.SecuenceNode,System.Single] UpdateBegin: 
    System.Action`2[Igneel.Animations.SecuenceNode,System.Single] UpdateEnd: 
    System.Action`1[Igneel.Animations.SecuenceNode] Enter: 
    System.Action`1[Igneel.Animations.SecuenceNode] Leave: 
  Methods:
    add_UpdateBegin(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_UpdateBegin(Action`2): PrivateScope, Public, HideBySig, SpecialName
    add_UpdateEnd(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_UpdateEnd(Action`2): PrivateScope, Public, HideBySig, SpecialName
    add_Enter(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Enter(Action`1): PrivateScope, Public, HideBySig, SpecialName
    add_Leave(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Leave(Action`1): PrivateScope, Public, HideBySig, SpecialName
    get_Animations(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentTransition(): PrivateScope, Public, HideBySig, SpecialName
    AddTransition(SecuenceTransition): PrivateScope, Public, HideBySig
    RemoveTransition(SecuenceTransition): PrivateScope, Public, HideBySig
    RemoveTransitions(SecuenceNode): PrivateScope, Public, HideBySig
    TransitionTo(SecuenceTransition): PrivateScope, Public, HideBySig
    BeforeUpdate(Action`2): PrivateScope, Public, HideBySig
    AfterUpdate(Action`2): PrivateScope, Public, HideBySig
    Activating(Action`1): PrivateScope, Public, HideBySig
    Deactivating(Action`1): PrivateScope, Public, HideBySig
    OnBeforeUpdate(Single): PrivateScope, Public, HideBySig
    OnAfterUpdate(Single): PrivateScope, Public, HideBySig
    OnActivating(): PrivateScope, Public, HideBySig
    OnDeactivating(): PrivateScope, Public, HideBySig
    UpdateAnimations(Single, Single, Single): PrivateScope, Public, HideBySig
    Update(Single): PrivateScope, Public, HideBySig
    Playing(Animation, Cursor(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Playing(Animation, Single, Single, AnimationLooping, Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    get_PlayDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_PlayDirection(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PlayVelocity(): PrivateScope, Public, HideBySig, SpecialName
    set_PlayVelocity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Looping(): PrivateScope, Public, HideBySig, SpecialName
    set_Looping(AnimationLooping): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Animations.AnimationBlend: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Igneel.Animations.Animation, Cursor, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Animations.Animation Animation : Public
    Cursor Cursor : Public
    Single Blend : Public
    Single Velocity : Public
Class Igneel.Animations.SecuenceTransition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Animations.SecuenceNode, Igneel.Animations.SecuenceNode, Single, System.Func`2[Igneel.Animations.SecuenceTransition,System.Boolean]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Animations.SecuenceNode, Single, System.Func`2[Igneel.Animations.SecuenceTransition,System.Boolean]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
  Fields:
    Igneel.Animations.BlendingParams SourceBlend : Public
    Igneel.Animations.BlendingParams DestBlend : Public
  Properties:
    System.String Name 'get set' : 
    System.Func`2[Igneel.Animations.SecuenceTransition,System.Boolean] Trigger 'get set' : 
    Igneel.Animations.SecuenceNode SourceNode 'get set' : 
    Igneel.Animations.SecuenceNode DestNode 'get set' : 
    Single Duration 'get set' : 
    Boolean IsBlending 'get ' : 
  Events:
    System.Action`2[Igneel.Animations.SecuenceTransition,System.Single] Blended: 
    System.Action`1[Igneel.Animations.SecuenceTransition] Leaved: 
  Methods:
    add_Blended(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_Blended(Action`2): PrivateScope, Public, HideBySig, SpecialName
    add_Leaved(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Leaved(Action`1): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Trigger(): PrivateScope, Public, HideBySig, SpecialName
    set_Trigger(Func`2): PrivateScope, Public, HideBySig, SpecialName
    get_SourceNode(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceNode(SecuenceNode): PrivateScope, Public, HideBySig, SpecialName
    get_DestNode(): PrivateScope, Public, HideBySig, SpecialName
    set_DestNode(SecuenceNode): PrivateScope, Public, HideBySig, SpecialName
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    set_Duration(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsBlending(): PrivateScope, Public, HideBySig, SpecialName
    IsTriggered(): PrivateScope, Public, HideBySig
    OnBlended(Single): PrivateScope, Public, HideBySig
    OnLeaved(): PrivateScope, Public, HideBySig
    Blend(Single): PrivateScope, Public, HideBySig
    BlendSourceWith(BlendingParams): PrivateScope, Public, HideBySig
    BlendDestinationWith(BlendingParams): PrivateScope, Public, HideBySig
    WithBlendings(BlendingParams, BlendingParams): PrivateScope, Public, HideBySig
    FiredWhen(Func`2): PrivateScope, Public, HideBySig
    DuringTime(Single): PrivateScope, Public, HideBySig
    WhenBlending(Action`2): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Animations.BlendingParams: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Blend : Public
    Single Velocity : Public
    Single StartBlend : Public
    Single EndBlend : Public
    Single StartVelocity : Public
    Single EndVelocity : Public
  Methods:
    In(): PrivateScope, Public, Static, HideBySig
    Out(): PrivateScope, Public, Static, HideBySig
    UpdateBlendings(Single): PrivateScope, Public, HideBySig
Class Igneel.SerializableBase: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
Class Igneel.Assets.Asset: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :Igneel.SerializableBase
    Void .ctor(Igneel.Assets.IAssetProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Assets.IAssetProvider, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Assets.AssetManager Manager 'get ' : 
    Int32 Id   'get set' : 
    System.String Name 'get set' : 
    System.String Extension 'get set' : 
    Igneel.Assets.AssetType AssetType 'get set' : 
  Methods:
    get_Manager(): PrivateScope, Public, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    CreateProviderInstance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Extension(): PrivateScope, Public, HideBySig, SpecialName
    get_AssetType(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetProperties(Dictionary`2, Object): PrivateScope, Public, HideBySig
    SetProperties(Dictionary`2, Object): PrivateScope, Public, HideBySig
    GetMembers(IAssetProvider, Type): PrivateScope, Public, HideBySig
    SetMembers(IAssetProvider, Type): PrivateScope, Public, HideBySig
    Delete(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Create(IAssetProvider, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class Igneel.Assets.ApplicationStateAsset: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :Igneel.Assets.Asset
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Assets.EngineAsset: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Igneel.Assets.ApplicationStateAsset
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProviderInstance(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Assets.StoreType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Assets.StoreType None = 0 : Public, Static, Literal, HasDefault
    Igneel.Assets.StoreType Reference = 1 : Public, Static, Literal, HasDefault
    Igneel.Assets.StoreType Asset = 2 : Public, Static, Literal, HasDefault
Class Igneel.Assets.AssetAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(Igneel.Assets.AssetType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Extension 'get set' : 
    Igneel.Assets.AssetType AssetType 'get set' : 
  Methods:
    get_Extension(): PrivateScope, Public, HideBySig, SpecialName
    set_Extension(String): PrivateScope, Public, HideBySig, SpecialName
    get_AssetType(): PrivateScope, Public, HideBySig, SpecialName
    set_AssetType(AssetType): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Assets.AutoAsset: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Igneel.Assets.Asset
    Void .ctor(Igneel.Assets.IAssetProvider, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProviderInstance(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Assets.AssetStorage: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :Igneel.Assets.Asset
    Void .ctor(Igneel.Assets.IAssetProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Assets.IAssetProvider, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    ContainsAsset(Int32): PrivateScope, Public, HideBySig
    ContainsAsset(InternalARef): PrivateScope, Public, HideBySig
    AddAsset(Asset): PrivateScope, Public, HideBySig
    RemoveAsset(Int32): PrivateScope, Public, HideBySig
    RemoveAsset(InternalARef): PrivateScope, Public, HideBySig
    ClearAssets(): PrivateScope, Public, HideBySig
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    GetAsset(Int32): PrivateScope, Public, HideBySig
    GetAsset(InternalARef): PrivateScope, Public, HideBySig
    Delete(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Assets.AutoAssetStore: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Igneel.Assets.AssetStorage
    Void .ctor(Igneel.Assets.IAssetProvider, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProviderInstance(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Assets.StaticAsset: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Igneel.Assets.Asset
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProviderInstance(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Assets.StaticStoreAsset: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Igneel.Assets.AssetStorage
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProviderInstance(): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Services.IFactory`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Covariant
  Methods:
    CreateInstance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.Assets.IAssetContext: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Assets.AssetStorage Storage 'get set' : 
  Methods:
    ContainsProvider(AssetReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ContainsReference(IAssetProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAsset(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryGetProvider(AssetReference, IAssetProvider&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryGetReference(IAssetProvider, AssetReference&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsRegister(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterAsset(Asset): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterProvider(IAssetProvider, AssetReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Storage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Storage(AssetStorage): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Assets.AssetContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IAssetContext
  Properties:
    Igneel.Assets.AssetStorage Storage 'get set' : 
    System.Collections.Generic.ICollection`1[System.Int32] AssetIds 'get ' : 
    System.Collections.Generic.ICollection`1[Igneel.Assets.Asset] Assets 'get ' : 
    System.Collections.Generic.Dictionary`2[System.Type,System.Object] Objects 'get ' : 
  Methods:
    get_Storage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Storage(AssetStorage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RegisterProvider(IAssetProvider, AssetReference): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsReference(IAssetProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsProvider(AssetReference): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsProvider(InternalARef): PrivateScope, Public, HideBySig
    GetReference(IAssetProvider): PrivateScope, Public, HideBySig
    TryGetReference(IAssetProvider, AssetReference&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetProvider(AssetReference): PrivateScope, Public, HideBySig
    TryGetProvider(AssetReference, IAssetProvider&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RegisterAsset(Asset): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsRegister(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetAsset(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AssetIds(): PrivateScope, Public, HideBySig, SpecialName
    get_Assets(): PrivateScope, Public, HideBySig, SpecialName
    get_Objects(): PrivateScope, Public, HideBySig, SpecialName
    GetGlobal(): PrivateScope, Public, Static, HideBySig
    SetGlobal(T): PrivateScope, Public, Static, HideBySig
Struct Igneel.Assets.AssetType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Assets.AssetType None = -1 : Public, Static, Literal, HasDefault
    Igneel.Assets.AssetType Mesh = 0 : Public, Static, Literal, HasDefault
    Igneel.Assets.AssetType Scene = 1 : Public, Static, Literal, HasDefault
    Igneel.Assets.AssetType Shader = 2 : Public, Static, Literal, HasDefault
    Igneel.Assets.AssetType Texture = 3 : Public, Static, Literal, HasDefault
    Igneel.Assets.AssetType Template = 4 : Public, Static, Literal, HasDefault
    Igneel.Assets.AssetType Settings = 5 : Public, Static, Literal, HasDefault
    Igneel.Assets.AssetType Animation = 6 : Public, Static, Literal, HasDefault
Class Igneel.Assets.AssetManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    System.Action`1[Igneel.Assets.AssetContext] ContextInitializer 'get set' : 
    Igneel.Assets.AssetManager Instance 'get ' : 
    Igneel.Assets.AssetContext LoadContext 'get ' : 
    Igneel.Assets.AssetContext SaveContext 'get ' : 
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ContextInitializer(): PrivateScope, Public, HideBySig, SpecialName
    set_ContextInitializer(Action`1): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LoadContext(): PrivateScope, Public, HideBySig, SpecialName
    get_SaveContext(): PrivateScope, Public, HideBySig, SpecialName
    GetAssetReference(IAssetProvider): PrivateScope, Public, HideBySig
    CreateAsset(IAssetProvider): PrivateScope, Public, HideBySig
    SaveAppState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegisterProvider(IAssetProvider, AssetReference): PrivateScope, Public, HideBySig
    GetAsset(AssetReference): PrivateScope, Public, HideBySig
    GetAssetProvider(AssetReference): PrivateScope, Public, HideBySig
    GetAssetProvider(Asset): PrivateScope, Public, HideBySig
    LoadProvider(ExternalARef): PrivateScope, Public, HideBySig
    LoadProvider(ExternalARef, Action`1): PrivateScope, Public, HideBySig
    LoadAppState(): PrivateScope, Public, HideBySig
    DeleteFromContent(AssetReference): PrivateScope, Public, HideBySig
    DeleteFromContent(ExternalARef): PrivateScope, Public, HideBySig
    RemoveAssetReference(IAssetProvider): PrivateScope, Public, HideBySig
    RemoveAssetReference(AssetReference): PrivateScope, Public, HideBySig
    Log(String): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearProviderCache(): PrivateScope, Public, HideBySig
    OnApplicationStart(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateContext(): PrivateScope, Public, HideBySig
Class Igneel.Assets.AssetManagerFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Services.IFactory`1[Igneel.Assets.AssetManager]
  Methods:
    CreateInstance(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Assets.AssetReference: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :Igneel.SerializableBase
  Properties:
    Boolean IsDirt 'get set' : 
  Methods:
    get_IsDirt(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDirt(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreateReference(Int32): PrivateScope, Public, Static, HideBySig
    CreateReference(): PrivateScope, Public, Static, HideBySig
    CreateReference(String): PrivateScope, Public, Static, HideBySig
    op_Explicit(Asset): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
Class Igneel.Assets.InternalARef: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Igneel.Assets.AssetReference
  Interfaces:
    System.IEquatable`1[Igneel.Assets.InternalARef]
  Properties:
    Int32 Id   'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(InternalARef): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Assets.ExternalARef: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Igneel.Assets.AssetReference
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Assets.ExternalARef]
  Properties:
    System.String Location 'get ' : 
  Methods:
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(ExternalARef): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Igneel.Assets.IAssetStoreProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
Class Igneel.Assets.ContentPackage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IAssetProvider
    Igneel.Assets.IAssetStoreProvider
  Properties:
    System.String Name 'get set' : 
    System.Collections.Generic.List`1[Igneel.Assets.IAssetProvider] Providers 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Providers(): PrivateScope, Public, HideBySig, SpecialName
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnAssetDestroyed(AssetReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(IAssetProvider): PrivateScope, Public, HideBySig
    Remove(IAssetProvider): PrivateScope, Public, HideBySig
Class Igneel.Assets.ActionConverter`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IStoreConverter
  Methods:
    GetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Assets.ActionConverter`2[T1,T2]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IStoreConverter
  Methods:
    GetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Assets.DelegateConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IStoreConverter
  Methods:
    GetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Assets.AssetProvider`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, Igneel.Assets.Asset
  :Igneel.SerializableBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IAssetProvider
  Methods:
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnAssetDestroyed(AssetReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Igneel.Assets.IAssetProviderNotificator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    OnSavingBegin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnSavingEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.Assets.IAssetRepository: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CreateReference(Asset): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SaveAsset(Asset): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadAsset(ExternalARef): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteAsset(ExternalARef): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAssets(AssetType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAssets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetReferences(AssetType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetReferences(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.Assets.IEngineSetting: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    SetSettings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Assets.LocalAssetRepository: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IAssetRepository
  Properties:
    System.String ContentDir 'get set' : 
  Methods:
    get_ContentDir(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentDir(String): PrivateScope, Public, HideBySig, SpecialName
    SaveAsset(Asset): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadAsset(ExternalARef): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DeleteAsset(ExternalARef): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetAssets(AssetType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetAssets(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetReferences(AssetType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetReferences(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateReference(Asset): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Assets.AssetMemberAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Assets.StoreType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ConverterType 'get set' : 
    Igneel.Assets.StoreType StoreAs 'get set' : 
    Igneel.Assets.IStoreConverter Converter 'get ' : 
  Methods:
    get_ConverterType(): PrivateScope, Public, HideBySig, SpecialName
    set_ConverterType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_StoreAs(): PrivateScope, Public, HideBySig, SpecialName
    set_StoreAs(StoreType): PrivateScope, Public, HideBySig, SpecialName
    get_Converter(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Assets.ProviderActivatorAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ActivatorType 'get set' : 
    Igneel.Assets.IProviderActivator ActivatorInst 'get ' : 
  Methods:
    get_ActivatorType(): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatorType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_ActivatorInst(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Assets.OnCompleteAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String OnComplete 'get set' : 
  Methods:
    get_OnComplete(): PrivateScope, Public, HideBySig, SpecialName
    set_OnComplete(String): PrivateScope, Public, HideBySig, SpecialName
    InvokeComplete(Object): PrivateScope, Public, HideBySig
Interface Igneel.Assets.IStoreConverter`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Interfaces:
    Igneel.Assets.IStoreConverter
Class Igneel.Assets.CollectionStoreConverter`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IStoreConverter`1[T]
    Igneel.Assets.IStoreConverter
  Methods:
    GetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Assets.ArrayStoreConverter`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T,  ReferenceType
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IStoreConverter`1[T]
    Igneel.Assets.IStoreConverter
  Methods:
    GetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Assets.StateStore: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Capture(Object): PrivateScope, Public, HideBySig
    Restore(Object): PrivateScope, Public, HideBySig
    Restore(Object, Type): PrivateScope, Public, HideBySig
Class Igneel.Assets.StateStoreConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IStoreConverter
  Methods:
    GetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetStorage(IAssetProvider, Object, PropertyInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Igneel.INodeComponent: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    OnNodeAttach(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnNodeDetach(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.IBoundable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Sphere GlobalSphere 'get ' : 
    Igneel.OrientedBox GlobalBox 'get ' : 
  Methods:
    get_GlobalSphere(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalBox(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.INodeObject: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.INodeComponent
    Igneel.IBoundable
    Igneel.IResourceAllocator
    System.IDisposable
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.Scene Scene 'get ' : 
  Methods:
    get_Scene(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetGraphicObjects(SceneNode, ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.NodeObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INodeObject
    Igneel.INodeComponent
    Igneel.IBoundable
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.Sphere GlobalSphere 'get set' : 
    Igneel.OrientedBox GlobalBox 'get set' : 
    Igneel.Scene Scene 'get ' : 
  Events:
    System.Action`2[Igneel.NodeObject,Igneel.SceneNode] NodeAttached: 
    System.Action`2[Igneel.NodeObject,Igneel.SceneNode] NodeDettached: 
  Methods:
    add_NodeAttached(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_NodeAttached(Action`2): PrivateScope, Public, HideBySig, SpecialName
    add_NodeDettached(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_NodeDettached(Action`2): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalSphere(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_GlobalSphere(Sphere): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalBox(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_GlobalBox(OrientedBox): PrivateScope, Public, HideBySig, SpecialName
    get_Scene(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    OnNodeAttach(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnNodeDetach(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateAsset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGraphicObjects(SceneNode, ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Igneel.IRenderable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Render(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.IGraphicObject: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IRenderable
  Properties:
    Boolean IsTransparent 'get ' : 
    Boolean Visible 'get set' : 
    Igneel.Graphics.RenderBinder RenderParam 'get set' : 
  Methods:
    get_IsTransparent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Visible(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RenderParam(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_RenderParam(RenderBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetRender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Render(SceneNode, PixelClipping(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.GraphicObject`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T,  ReferenceType
  :Igneel.NodeObject
  Interfaces:
    Igneel.IGraphicObject
    Igneel.IRenderable
  Properties:
    Boolean IsTransparent 'get set' : 
    Boolean Visible 'get set' : 
    Boolean CastShadow 'get set' : 
    Boolean CastReflection 'get set' : 
    Boolean CastRefraction 'get set' : 
    Igneel.Graphics.RenderBinder RenderParam 'get set' : 
  Methods:
    RegisterRenders(): PrivateScope, Public, Static, HideBySig
    get_IsTransparent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Visible(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Visible(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CastShadow(): PrivateScope, Public, HideBySig, SpecialName
    set_CastShadow(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CastReflection(): PrivateScope, Public, HideBySig, SpecialName
    set_CastReflection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CastRefraction(): PrivateScope, Public, HideBySig, SpecialName
    set_CastRefraction(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RenderParam(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RenderParam(RenderBinder): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRender(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Render(SceneNode, PixelClipping(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Render(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetGraphicObjects(SceneNode, ICollection`1): PrivateScope, Public, Virtual, HideBySig
Class Igneel.BillBoard: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.GraphicObject`1[Igneel.BillBoard]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Graphics.Texture2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Igneel.Graphics.Texture2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.Texture2D Texture 'get set' : 
    Single Width 'get set' : 
    Single Height 'get set' : 
    Igneel.Vector4 Color 'get set' : 
  Methods:
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    set_Texture(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Vector4): PrivateScope, Public, HideBySig, SpecialName
    GetBillboardMatrix(Camera, Vector3, Vector3): PrivateScope, Public, HideBySig
    GetBillBoardMatrix(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.ProjectionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.ProjectionType Perspective = 0 : Public, Static, Literal, HasDefault
    Igneel.ProjectionType Orthographic = 1 : Public, Static, Literal, HasDefault
Interface Igneel.IDeferreable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CommitChanges(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Camera: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.NodeObject
    Void .ctor(Igneel.Scene, System.String, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, System.String, Igneel.Vector3, Igneel.Vector3, Igneel.Vector3, Igneel.Vector3, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
    Igneel.IDeferreable
  Properties:
    Igneel.Matrix LocalFrame 'get set' : 
    Boolean Active 'get set' : 
    Igneel.Matrix View 'get set' : 
    Igneel.Matrix Projection 'get set' : 
    Igneel.Matrix ViewProj 'get ' : 
    Igneel.Matrix InvViewProjection 'get ' : 
    Igneel.Vector3 Right 'get set' : 
    Igneel.Vector3 Front 'get set' : 
    Igneel.Vector3 Up 'get set' : 
    Igneel.Vector3 Position 'get set' : 
    Single ZNear 'get set' : 
    Single ZFar 'get set' : 
    Igneel.Frustum ViewFrustum 'get ' : 
    Igneel.ProjectionType Type 'get set' : 
    Single FieldOfView 'get set' : 
    Single AspectRatio 'get set' : 
    Single OrthoWidth 'get set' : 
    Single OrthoHeight 'get set' : 
    System.String Name 'get set' : 
  Methods:
    FromLookAt(Scene, String, Vector3, Vector3, Vector3, Single, Single): PrivateScope, Public, Static, HideBySig
    FromOrientation(Scene, String, Vector3(Optional, HasDefault), Euler(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SetPerspective(Single, Single): PrivateScope, Public, HideBySig
    SetOrthographic(Single, Single): PrivateScope, Public, HideBySig
    get_LocalFrame(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalFrame(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_Active(): PrivateScope, Public, HideBySig, SpecialName
    set_Active(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_View(): PrivateScope, Public, HideBySig, SpecialName
    set_View(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_Projection(): PrivateScope, Public, HideBySig, SpecialName
    set_Projection(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_ViewProj(): PrivateScope, Public, HideBySig, SpecialName
    get_InvViewProjection(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Front(): PrivateScope, Public, HideBySig, SpecialName
    set_Front(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, HideBySig, SpecialName
    set_Up(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_ZNear(): PrivateScope, Public, HideBySig, SpecialName
    set_ZNear(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ZFar(): PrivateScope, Public, HideBySig, SpecialName
    set_ZFar(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ViewFrustum(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(ProjectionType): PrivateScope, Public, HideBySig, SpecialName
    get_FieldOfView(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldOfView(Single): PrivateScope, Public, HideBySig, SpecialName
    get_AspectRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_AspectRatio(Single): PrivateScope, Public, HideBySig, SpecialName
    get_OrthoWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_OrthoWidth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_OrthoHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_OrthoHeight(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveFromScene(): PrivateScope, Public, HideBySig
    Distance(IBoundable): PrivateScope, Public, HideBySig
    Transform(Matrix): PrivateScope, Public, HideBySig
    OnNodeAttach(SceneNode): PrivateScope, Public, Virtual, HideBySig
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
    OnNodeDetach(SceneNode): PrivateScope, Public, Virtual, HideBySig
    CommitChanges(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Igneel.IInstanceContainer`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Interfaces:
    Igneel.INodeObject
    Igneel.INodeComponent
    Igneel.IBoundable
    Igneel.IResourceAllocator
    System.IDisposable
    Igneel.Assets.IAssetProvider
  Properties:
    T Instance 'get ' : 
    Igneel.SceneNode Node 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.GlobalLigth: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Vector3 SkyColor 'get set' : 
    Igneel.Vector3 GroundColor 'get set' : 
    Igneel.Vector3 GlobalAmbient 'get set' : 
    Igneel.Vector3 NorthPole 'get set' : 
    Single GlobalAmbientIntensity 'get set' : 
  Methods:
    get_SkyColor(): PrivateScope, Public, HideBySig, SpecialName
    set_SkyColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_GroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_GroundColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalAmbient(): PrivateScope, Public, HideBySig, SpecialName
    set_GlobalAmbient(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_NorthPole(): PrivateScope, Public, HideBySig, SpecialName
    set_NorthPole(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalAmbientIntensity(): PrivateScope, Public, HideBySig, SpecialName
    set_GlobalAmbientIntensity(Single): PrivateScope, Public, HideBySig, SpecialName
Struct Igneel.LightType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.LightType Directional = 0 : Public, Static, Literal, HasDefault
    Igneel.LightType Point = 1 : Public, Static, Literal, HasDefault
    Igneel.LightType Spot = 2 : Public, Static, Literal, HasDefault
Interface Igneel.IEnabletable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Boolean Enable 'get set' : 
  Methods:
    get_Enable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Enable(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Light: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IAssetProvider
    Igneel.IEnabletable
    Igneel.INameable
  Properties:
    Int32 ShaderRegister 'get set' : 
    Igneel.GlobalLigth Ambient 'get set' : 
    System.String Name 'get set' : 
    Single Intensity 'get set' : 
    Igneel.Vector3 Diffuse 'get set' : 
    Igneel.Vector3 Specular 'get set' : 
    Boolean Enable 'get set' : 
    Igneel.LightType Type 'get set' : 
    Single SpotPower 'get set' : 
    Single Attenuation0 'get set' : 
    Single Attenuation1 'get set' : 
    Single Attenuation2 'get set' : 
    Single EffectiveRange 'get set' : 
    Igneel.LightInstance CurrentInstance 'get ' : 
  Events:
    System.Action`1[Igneel.Light] EnableChanged: 
    System.Action`1[Igneel.Light] EffectiveRangeChanged: 
  Methods:
    add_EnableChanged(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_EnableChanged(Action`1): PrivateScope, Public, HideBySig, SpecialName
    add_EffectiveRangeChanged(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_EffectiveRangeChanged(Action`1): PrivateScope, Public, HideBySig, SpecialName
    get_ShaderRegister(): PrivateScope, Public, HideBySig, SpecialName
    set_ShaderRegister(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Ambient(): PrivateScope, Public, HideBySig, SpecialName
    set_Ambient(GlobalLigth): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Intensity(): PrivateScope, Public, HideBySig, SpecialName
    set_Intensity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Diffuse(): PrivateScope, Public, HideBySig, SpecialName
    set_Diffuse(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Specular(): PrivateScope, Public, HideBySig, SpecialName
    set_Specular(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Enable(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Enable(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(LightType): PrivateScope, Public, HideBySig, SpecialName
    get_SpotPower(): PrivateScope, Public, HideBySig, SpecialName
    set_SpotPower(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Attenuation0(): PrivateScope, Public, HideBySig, SpecialName
    set_Attenuation0(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Attenuation1(): PrivateScope, Public, HideBySig, SpecialName
    set_Attenuation1(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Attenuation2(): PrivateScope, Public, HideBySig, SpecialName
    set_Attenuation2(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EffectiveRange(): PrivateScope, Public, HideBySig, SpecialName
    set_EffectiveRange(Single): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentInstance(): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Light): PrivateScope, Public, Static, HideBySig, SpecialName
    BeginInstance(LightInstance): PrivateScope, Public, Static, HideBySig
    EndInstance(): PrivateScope, Public, Static, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.LightInstance: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.NodeObject
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Igneel.Light): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IInstanceContainer`1[Igneel.Light]
  Properties:
    Boolean IsActive 'get ' : 
    Igneel.Vector3 LocalDirection 'get set' : 
    Igneel.Vector3 LocalPosition 'get set' : 
    Igneel.Vector3 GlobalDirection 'get ' : 
    Igneel.Vector3 GlobalPosition 'get ' : 
    Igneel.Light Instance 'get set' : 
    Igneel.SceneNode Node 'get ' : 
  Methods:
    get_IsActive(): PrivateScope, Public, HideBySig, SpecialName
    get_LocalDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalDirection(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_LocalPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalPosition(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalDirection(): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(Light): PrivateScope, Public, HideBySig, SpecialName
    get_Node(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetShaderLight(): PrivateScope, Public, HideBySig
    OnNodeAttach(SceneNode): PrivateScope, Public, Virtual, HideBySig
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
    GetGraphicObjects(SceneNode, ICollection`1): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.IMaterialContainer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IGraphicObject
    Igneel.IRenderable
  Properties:
    Igneel.Graphics.MeshMaterial[] Materials 'get set' : 
    Int32[] TransparentMaterials 'get ' : 
  Methods:
    get_Materials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Materials(MeshMaterial[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TransparentMaterials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.MaterialContainer`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T,  ReferenceType
  :Igneel.GraphicObject`1[T]
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Igneel.Graphics.MeshMaterial[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IMaterialContainer
  Properties:
    Igneel.Graphics.MeshMaterial[] Materials 'get set' : 
    Int32[] TransparentMaterials 'get ' : 
  Methods:
    get_Materials(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Materials(MeshMaterial[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TransparentMaterials(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    OnNodeAttach(SceneNode): PrivateScope, Public, Virtual, HideBySig
    OnNodeDetach(SceneNode): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.IMeshContainer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IGraphicObject
    Igneel.IRenderable
  Properties:
    Igneel.Mesh Mesh 'get set' : 
  Methods:
    get_Mesh(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Mesh(Mesh): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.MeshContainer`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T,  ReferenceType
  :Igneel.MaterialContainer`1[T]
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IMeshContainer
  Properties:
    Igneel.Mesh Mesh 'get set' : 
  Methods:
    get_Mesh(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Mesh(Mesh): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Igneel.MeshInstance: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.MeshContainer`1[Igneel.MeshInstance]
    Void .ctor(Igneel.Scene, Igneel.Graphics.MeshMaterial[], Igneel.Mesh): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
Class Igneel.NodeObjectColletion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.NodeObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.SceneNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[Igneel.INodeObject]
    System.Collections.Generic.IEnumerable`1[Igneel.INodeObject]
    System.Collections.IEnumerable
  Properties:
    Igneel.INodeObject Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    OnNodeAttach(SceneNode): PrivateScope, Public, Virtual, HideBySig
    OnNodeDetach(SceneNode): PrivateScope, Public, Virtual, HideBySig
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
    GetGraphicObjects(SceneNode, ICollection`1): PrivateScope, Public, Virtual, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Add(INodeObject): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(INodeObject): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(INodeObject[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(INodeObject): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, HideBySig
    CollectionComplete(): PrivateScope, Public, HideBySig
Struct Igneel.EmitterType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.EmitterType None = 0 : Public, Static, Literal, HasDefault
    Igneel.EmitterType Directional = 1 : Public, Static, Literal, HasDefault
    Igneel.EmitterType Spherical = 2 : Public, Static, Literal, HasDefault
    Igneel.EmitterType Box = 3 : Public, Static, Literal, HasDefault
    Igneel.EmitterType Radial = 4 : Public, Static, Literal, HasDefault
Class Igneel.ParticleEmitter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.EmitterType Type 'get set' : 
    Single LinearVelocity 'get set' : 
    Single AngularVelocity 'get set' : 
    Igneel.Spherical EmitDirection 'get set' : 
    Igneel.Spherical EmitRange 'get set' : 
    Igneel.Vector3 EmitBoxExtends 'get set' : 
    Single EmitRadius 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(EmitterType): PrivateScope, Public, HideBySig, SpecialName
    get_LinearVelocity(): PrivateScope, Public, HideBySig, SpecialName
    set_LinearVelocity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_AngularVelocity(): PrivateScope, Public, HideBySig, SpecialName
    set_AngularVelocity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EmitDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_EmitDirection(Spherical): PrivateScope, Public, HideBySig, SpecialName
    get_EmitRange(): PrivateScope, Public, HideBySig, SpecialName
    set_EmitRange(Spherical): PrivateScope, Public, HideBySig, SpecialName
    get_EmitBoxExtends(): PrivateScope, Public, HideBySig, SpecialName
    set_EmitBoxExtends(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_EmitRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_EmitRadius(Single): PrivateScope, Public, HideBySig, SpecialName
    GetRandDirection(Spherical, Spherical): PrivateScope, Public, HideBySig
    GetRandDirection(): PrivateScope, Public, HideBySig
    GetRandPosition(Vector3): PrivateScope, Public, HideBySig
    Emit(Particle*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Emit(Particle): PrivateScope, Public, HideBySig
Struct Igneel.Particle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 GlobalPosition : Public
    Igneel.Vector3 GlobalVelocity : Public
    Single Mass : Public
    Single InvMass : Public
    Single RotationAngle : Public
    Single AngularVelocity : Public
    Single Size : Public
    UInt32 Color : Public
    Single Life : Public
    Single Alpha : Public
Struct Igneel.ParticleVertex: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Vector2 TexCoord : Public
    Igneel.Vector3 PositionPtc : Public
    Single Alpha : Public
    Single Size : Public
    UInt32 Color : Public
Struct Igneel.ParticleBlending: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.ParticleBlending None = 0 : Public, Static, Literal, HasDefault
    Igneel.ParticleBlending Additive = 1 : Public, Static, Literal, HasDefault
    Igneel.ParticleBlending Substractive = 2 : Public, Static, Literal, HasDefault
    Igneel.ParticleBlending Modulative = 3 : Public, Static, Literal, HasDefault
    Igneel.ParticleBlending Transparent = 4 : Public, Static, Literal, HasDefault
Class Igneel.ParticleSystem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.GraphicObject`1[Igneel.ParticleSystem]
    Void .ctor(Igneel.Scene, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, System.String, Single, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
    Igneel.IDynamic
  Properties:
    System.String Name 'get set' : 
    Boolean GenerateParticles 'get set' : 
    Int32 NbAliveParticles 'get set' : 
    Igneel.Vector3 GlobalForce 'get set' : 
    Single Torque 'get set' : 
    Single ParticleSize 'get set' : 
    Single ParticleFadeIn 'get set' : 
    Single ParticleFadeOut 'get set' : 
    Single ParticleLifeSpand 'get set' : 
    Igneel.ParticleEmitter Emitter 'get set' : 
    Igneel.ParticleSystem NextSystem 'get set' : 
    Igneel.Graphics.MeshMaterial Material 'get set' : 
    Igneel.Graphics.BlendOperation BlendOperation 'get set' : 
    Igneel.Graphics.Blend SourceBlend 'get set' : 
    Igneel.Graphics.Blend DestinationBlend 'get set' : 
    Boolean BlendEnable 'get set' : 
    Igneel.Graphics.GraphicBuffer QuadVertexBuffer 'get ' : 
    Igneel.Graphics.GraphicBuffer Indices 'get ' : 
    Igneel.Graphics.VertexDescriptor VertDescriptor 'get ' : 
    Igneel.ParticleBlending Blending 'get set' : 
    Int32 NbQuads 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GenerateParticles(): PrivateScope, Public, HideBySig, SpecialName
    set_GenerateParticles(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NbAliveParticles(): PrivateScope, Public, HideBySig, SpecialName
    set_NbAliveParticles(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalForce(): PrivateScope, Public, HideBySig, SpecialName
    set_GlobalForce(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Torque(): PrivateScope, Public, HideBySig, SpecialName
    set_Torque(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ParticleSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ParticleSize(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ParticleFadeIn(): PrivateScope, Public, HideBySig, SpecialName
    set_ParticleFadeIn(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ParticleFadeOut(): PrivateScope, Public, HideBySig, SpecialName
    set_ParticleFadeOut(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ParticleLifeSpand(): PrivateScope, Public, HideBySig, SpecialName
    set_ParticleLifeSpand(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Emitter(): PrivateScope, Public, HideBySig, SpecialName
    set_Emitter(ParticleEmitter): PrivateScope, Public, HideBySig, SpecialName
    get_NextSystem(): PrivateScope, Public, HideBySig, SpecialName
    set_NextSystem(ParticleSystem): PrivateScope, Public, HideBySig, SpecialName
    get_Material(): PrivateScope, Public, HideBySig, SpecialName
    set_Material(MeshMaterial): PrivateScope, Public, HideBySig, SpecialName
    get_BlendOperation(): PrivateScope, Public, HideBySig, SpecialName
    set_BlendOperation(BlendOperation): PrivateScope, Public, HideBySig, SpecialName
    get_SourceBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_DestinationBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_DestinationBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_BlendEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_BlendEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_QuadVertexBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_Indices(): PrivateScope, Public, HideBySig, SpecialName
    get_VertDescriptor(): PrivateScope, Public, HideBySig, SpecialName
    get_Blending(): PrivateScope, Public, HideBySig, SpecialName
    set_Blending(ParticleBlending): PrivateScope, Public, HideBySig, SpecialName
    get_NbQuads(): PrivateScope, Public, HideBySig, SpecialName
    set_NbQuads(Int32): PrivateScope, Public, HideBySig, SpecialName
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
    Update(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Emit(Particle*): PrivateScope, Public, HideBySig
    UpdateBuffer(): PrivateScope, Public, HideBySig
Class Igneel.ScreenDecal: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.GraphicObject`1[Igneel.ScreenDecal]
    Void .ctor(Igneel.Scene, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.Texture2D Texture 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    set_Texture(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.Render: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.IEnabletable
  Properties:
    Boolean Enable 'get set' : 
    Igneel.Graphics.Effect Effect 'get set' : 
  Methods:
    get_Enable(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Enable(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Effect(): PrivateScope, Public, HideBySig, SpecialName
    Bind(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnBind(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBinding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBinding(IRenderBinding`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBinding(): PrivateScope, Public, HideBySig
    SetBinding(Action`1, Action`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    EndBindings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    BindScene(): PrivateScope, Public, HideBySig
    UnBindScene(): PrivateScope, Public, HideBySig
    DrawNode(SceneNode, IGraphicObject, PixelClipping(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Graphics.Render`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T
  :Igneel.Graphics.Render
  Methods:
    DrawNode(SceneNode, IGraphicObject, PixelClipping(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DrawNode(SceneNode, T, PixelClipping(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Graphics.Render`2[TShader,TObj]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TShader, Igneel.Graphics.Effect
  Type parameter: TObj, Igneel.IGraphicObject
  :Igneel.Graphics.Render`1[TObj]
  Methods:
    Bind(T): PrivateScope, Public, Final, Virtual, HideBySig
    UnBind(T): PrivateScope, Public, Final, Virtual, HideBySig
    GetBinding(): PrivateScope, Public, Final, Virtual, HideBySig
    SetBinding(IRenderBinding`1): PrivateScope, Public, Final, Virtual, HideBySig
    DrawNode(SceneNode, TObj, PixelClipping): PrivateScope, Public, Final, Virtual, HideBySig
    Draw(TObj): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.ScreenDecalRender: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Render`2[Igneel.Graphics.Shaders.Untransformed,Igneel.ScreenDecal]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Draw(ScreenDecal): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.IRenderRegistrator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterInstance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.IRenderRegistrator`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Interfaces:
    Igneel.IRenderRegistrator
Class Igneel.Graphics.Registrator`1[TComp]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TComp,  ReferenceType
  Interfaces:
    Igneel.IRenderRegistrator`1[TComp]
    Igneel.IRenderRegistrator
  Methods:
    Register(): PrivateScope, Public, Static, HideBySig
    Register(Func`1): PrivateScope, Public, Static, HideBySig
    RegisterNullRender(): PrivateScope, Public, Static, HideBySig
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterInstance(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.ScreenDecalRegistrator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Registrator`1[Igneel.ScreenDecal]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.SkinInstance: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.MeshContainer`1[Igneel.SkinInstance]
    Void .ctor(Igneel.Scene, Igneel.Graphics.MeshMaterial[], Igneel.Animations.SkinDeformer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Animations.SkinDeformer Skin 'get set' : 
  Methods:
    get_Skin(): PrivateScope, Public, HideBySig, SpecialName
    set_Skin(SkinDeformer): PrivateScope, Public, HideBySig, SpecialName
    OnNodeDetach(SceneNode): PrivateScope, Public, Virtual, HideBySig
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.IInitializable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.SkyDome: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.GraphicObject`1[Igneel.SkyDome]
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Igneel.Graphics.TextureCube, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IInitializable
  Properties:
    Single LuminanceIntensity 'get set' : 
    Igneel.Graphics.GraphicBuffer VertexBuffer 'get ' : 
    Igneel.Graphics.GraphicBuffer IndexBuffer 'get ' : 
    Int32 VertexCount 'get ' : 
    Int32 IndexCount 'get ' : 
    Igneel.Graphics.TextureCube Texture 'get set' : 
    Int32 SubDivitions 'get set' : 
    Igneel.Graphics.VertexDescriptor VertexDescriptor 'get ' : 
  Methods:
    get_LuminanceIntensity(): PrivateScope, Public, HideBySig, SpecialName
    set_LuminanceIntensity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_VertexBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_IndexBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_VertexCount(): PrivateScope, Public, HideBySig, SpecialName
    get_IndexCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    set_Texture(TextureCube): PrivateScope, Public, HideBySig, SpecialName
    get_SubDivitions(): PrivateScope, Public, HideBySig, SpecialName
    set_SubDivitions(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VertexDescriptor(): PrivateScope, Public, HideBySig, SpecialName
    Initialize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.HeightFieldVertex: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector2 Position : Public
    Igneel.Vector2 TexCoord : Public
    Single Height : Public
    Igneel.Vector3 Normal : Public
    Igneel.Vector2 BlendCoord : Public
Class Igneel.HeightFieldSection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector2 Offset : Public
    Igneel.Graphics.GraphicBuffer NormalHeightVb : Public
    Int32 MaterialIndex : Public
    Igneel.RectangleF BoundRect : Public
    Igneel.Sphere BoundSphere : Public
  Methods:
    ComputeBoundings(RectangleF): PrivateScope, Public, HideBySig
Interface Igneel.ICullTester`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Contravariant
  Methods:
    IsInsideRect(T, RectangleF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsInsideFrustum(T, Camera): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCullState(Camera, Sphere): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.TerrainSectionTester: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.ICullTester`1[Igneel.HeightFieldSection]
  Fields:
    Igneel.Plane[] LocalFrustum : Public
    Igneel.Vector3[] Points : Public
  Methods:
    IsInsideRect(HeightFieldSection, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsInsideFrustum(HeightFieldSection, Camera): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetCullState(Camera, Sphere): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.HeightField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.GraphicObject`1[Igneel.HeightField]
    Void .ctor(Igneel.Scene, Igneel.Graphics.Texture2D, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 SectionVertexCount 'get ' : 
    Int32 SectionPrimitives 'get ' : 
    Igneel.HeightFieldSection[,] Sections 'get ' : 
    Igneel.Graphics.GraphicBuffer PositionUVBuffer 'get ' : 
    Igneel.Graphics.GraphicBuffer StripIndices 'get ' : 
    Igneel.Graphics.VertexDescriptor VertDescriptor 'get ' : 
    Igneel.TerrainMaterial[] Materials 'get set' : 
    System.Collections.Generic.List`1[Igneel.HeightFieldSection] VisibleSections 'get ' : 
    Igneel.Graphics.Texture2D HeightMap 'get ' : 
  Methods:
    get_SectionVertexCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SectionPrimitives(): PrivateScope, Public, HideBySig, SpecialName
    get_Sections(): PrivateScope, Public, HideBySig, SpecialName
    get_PositionUVBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_StripIndices(): PrivateScope, Public, HideBySig, SpecialName
    get_VertDescriptor(): PrivateScope, Public, HideBySig, SpecialName
    get_Materials(): PrivateScope, Public, HideBySig, SpecialName
    set_Materials(TerrainMaterial[]): PrivateScope, Public, HideBySig, SpecialName
    get_VisibleSections(): PrivateScope, Public, HideBySig, SpecialName
    get_HeightMap(): PrivateScope, Public, HideBySig, SpecialName
    UpdateVisibleSections(Camera): PrivateScope, Public, HideBySig
    GetGraphicObjects(SceneNode, ICollection`1): PrivateScope, Public, Virtual, HideBySig
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
    OnNodeAttach(SceneNode): PrivateScope, Public, Virtual, HideBySig
    Smoot(Int32, Int32(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Igneel.Graphics.SurfaceMaterial: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.Graphics.LayerSurface Surface 'get set' : 
    Igneel.Vector3 Diffuse 'get set' : 
    Igneel.Vector3 Specular 'get set' : 
    Single Alpha 'get set' : 
    Single Reflectivity 'get set' : 
    Single Refractitity 'get set' : 
    Single SpecularPower 'get set' : 
    Igneel.Vector3 EmissiveColor 'get set' : 
    Igneel.Graphics.RenderBinder ExtendedArg 'get set' : 
  Methods:
    get_Surface(): PrivateScope, Public, HideBySig, SpecialName
    set_Surface(LayerSurface): PrivateScope, Public, HideBySig, SpecialName
    get_Diffuse(): PrivateScope, Public, HideBySig, SpecialName
    set_Diffuse(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Specular(): PrivateScope, Public, HideBySig, SpecialName
    set_Specular(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Reflectivity(): PrivateScope, Public, HideBySig, SpecialName
    set_Reflectivity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Refractitity(): PrivateScope, Public, HideBySig, SpecialName
    set_Refractitity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SpecularPower(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecularPower(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EmissiveColor(): PrivateScope, Public, HideBySig, SpecialName
    set_EmissiveColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendedArg(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendedArg(RenderBinder): PrivateScope, Public, HideBySig, SpecialName
    CreateAsset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.TerrainMaterial: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.SurfaceMaterial
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
  Properties:
    Igneel.Graphics.Texture2D[] Layers 'get set' : 
    Igneel.Graphics.Texture2D BlendLayer 'get set' : 
    System.String Name 'get set' : 
    Boolean ContainsTrasparency 'get ' : 
  Methods:
    get_Layers(): PrivateScope, Public, HideBySig, SpecialName
    set_Layers(Texture2D[]): PrivateScope, Public, HideBySig, SpecialName
    get_BlendLayer(): PrivateScope, Public, HideBySig, SpecialName
    set_BlendLayer(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ContainsTrasparency(): PrivateScope, Public, HideBySig, SpecialName
    CreateAsset(): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Controllers.INodeController: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.SceneNode Node 'get ' : 
  Methods:
    Initialize(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Update(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Controllers.NodeController: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.IDynamic
    Igneel.Controllers.INodeController
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.SceneNode Node 'get set' : 
  Methods:
    get_Node(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Node(SceneNode): PrivateScope, Public, HideBySig, SpecialName
    Initialize(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Controllers.FPController: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Igneel.Controllers.NodeController
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Behavior ControllerBehavior 'get set' : 
    Single LinearVelocity 'get set' : 
    Single LinearAceleration 'get set' : 
    Single AngularVelocity 'get set' : 
    Single AngularAceleration 'get set' : 
    Single BreakingFactor 'get set' : 
    System.Func`2[Igneel.Controllers.FPController,System.Boolean] UpdateCallback 'get set' : 
  Methods:
    get_ControllerBehavior(): PrivateScope, Public, HideBySig, SpecialName
    set_ControllerBehavior(Behavior): PrivateScope, Public, HideBySig, SpecialName
    get_LinearVelocity(): PrivateScope, Public, HideBySig, SpecialName
    set_LinearVelocity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_LinearAceleration(): PrivateScope, Public, HideBySig, SpecialName
    set_LinearAceleration(Single): PrivateScope, Public, HideBySig, SpecialName
    get_AngularVelocity(): PrivateScope, Public, HideBySig, SpecialName
    set_AngularVelocity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_AngularAceleration(): PrivateScope, Public, HideBySig, SpecialName
    set_AngularAceleration(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BreakingFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_BreakingFactor(Single): PrivateScope, Public, HideBySig, SpecialName
    get_UpdateCallback(): PrivateScope, Public, HideBySig, SpecialName
    set_UpdateCallback(Func`2): PrivateScope, Public, HideBySig, SpecialName
    Initialize(SceneNode): PrivateScope, Public, Virtual, HideBySig
    Advance(Single, Int32): PrivateScope, Public, HideBySig
    Strafe(Single, Int32): PrivateScope, Public, HideBySig
    Elevate(Single, Int32): PrivateScope, Public, HideBySig
    UpdateHeading(Single, Single): PrivateScope, Public, HideBySig
    UpdatePitch(Single, Single): PrivateScope, Public, HideBySig
    Update(Single): PrivateScope, Public, Virtual, HideBySig
    PerformDefaultBehavior(Single): PrivateScope, Public, HideBySig
    PerformOrthographicBehavior(Single): PrivateScope, Public, HideBySig
Struct Igneel.Controllers.FPController+Behavior: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Behavior Default = 0 : Public, Static, Literal, HasDefault
    Behavior Orthographic = 1 : Public, Static, Literal, HasDefault
Class Igneel.Controllers.ControllerAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type MatchType 'get set' : 
    System.String MatchPattern 'get set' : 
  Methods:
    get_MatchType(): PrivateScope, Public, HideBySig, SpecialName
    set_MatchType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_MatchPattern(): PrivateScope, Public, HideBySig, SpecialName
    set_MatchPattern(String): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Controllers.NodeControllerManager: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    LinkControllers(Assembly): PrivateScope, Public, Static, HideBySig
Class Igneel.Controllers.ThirdPersonController: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Igneel.SceneNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetIdleAnimation(Animation, Single, Single, AnimationLooping(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetWalkAnimation(Animation, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Initialize(): PrivateScope, Public, HideBySig
Interface Igneel.Controllers.IVehicleInputMap: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Boolean IsActive 'get ' : 
  Methods:
    get_IsActive(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Controllers.KeyboardInputMap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Igneel.Input.Keys): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Controllers.IVehicleInputMap
  Properties:
    Igneel.Input.Keys MapKey 'get set' : 
    Boolean IsActive 'get ' : 
  Methods:
    get_MapKey(): PrivateScope, Public, HideBySig, SpecialName
    set_MapKey(Keys): PrivateScope, Public, HideBySig, SpecialName
    get_IsActive(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Igneel.Controllers.LinearInterpolationValues: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.Single,System.Single]]
    System.Collections.IEnumerable
    System.Collections.Generic.IEnumerable`1[System.Single]
  Properties:
    Int32 Count 'get ' : 
  Methods:
    Clear(): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    Insert(Single, Single): PrivateScope, Public, HideBySig
    IsValid(Single): PrivateScope, Public, HideBySig
    GetValueAt(Int32): PrivateScope, Public, HideBySig
    GetValue(Single): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Controllers.Wheel: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Interfaces:
    Igneel.INameable
    Igneel.IDeferreable
  Properties:
    System.String Name 'get set' : 
    Single Angle 'get set' : 
    Single Rpm 'get ' : 
    Single Radius 'get ' : 
    Igneel.Vector3 Position 'get ' : 
    Igneel.Controllers.WheelFlags Flags 'get set' : 
    Single Suspension 'get set' : 
    Single SpringRestitution 'get set' : 
    Single SpringBias 'get set' : 
    Single FrictionToFront 'get set' : 
    Single FrictionToSide 'get set' : 
    Single SpringDamping 'get set' : 
    System.Object UserData 'get set' : 
  Events:
    System.Action`1[System.String] NameChanged: 
  Methods:
    add_NameChanged(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_NameChanged(Action`1): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Angle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Angle(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Rpm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Radius(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(WheelFlags): PrivateScope, Public, HideBySig, SpecialName
    Tick(Boolean, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTouchedActor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGroundContactPos(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Suspension(): PrivateScope, Public, HideBySig, SpecialName
    set_Suspension(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SpringRestitution(): PrivateScope, Public, HideBySig, SpecialName
    set_SpringRestitution(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SpringBias(): PrivateScope, Public, HideBySig, SpecialName
    set_SpringBias(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FrictionToFront(): PrivateScope, Public, HideBySig, SpecialName
    set_FrictionToFront(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FrictionToSide(): PrivateScope, Public, HideBySig, SpecialName
    set_FrictionToSide(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SpringDamping(): PrivateScope, Public, HideBySig, SpecialName
    set_SpringDamping(Single): PrivateScope, Public, HideBySig, SpecialName
    get_UserData(): PrivateScope, Public, HideBySig, SpecialName
    set_UserData(Object): PrivateScope, Public, HideBySig, SpecialName
    HasFlag(WheelFlags): PrivateScope, Public, HideBySig
    HasGroundContact(): PrivateScope, Public, HideBySig
    CommitChanges(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Controllers.RayCastWheel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Controllers.Wheel
    Void .ctor(Igneel.Physics.WheelShape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Physics.Actor Actor 'get set' : 
    Igneel.Physics.WheelShape ActorShape 'get ' : 
    Single Radius 'get ' : 
    Single Angle 'get set' : 
    Single Rpm 'get ' : 
    Igneel.Vector3 Position 'get ' : 
  Methods:
    get_Actor(): PrivateScope, Public, HideBySig, SpecialName
    set_Actor(Actor): PrivateScope, Public, HideBySig, SpecialName
    get_ActorShape(): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Angle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Angle(Single): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Rpm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetGroundContactPos(): PrivateScope, Public, Virtual, HideBySig
    GetTouchedActor(): PrivateScope, Public, Virtual, HideBySig
    Tick(Boolean, Single, Single, Single): PrivateScope, Public, Virtual, HideBySig
    CommitChanges(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Controllers.VehicleBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Igneel.Physics.Actor, Igneel.Physics.PhysicMaterial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
  Properties:
    System.String Name 'get set' : 
    System.Collections.Generic.List`1[Igneel.Controllers.Wheel] Wheells 'get ' : 
    Igneel.Physics.Actor BodyActor 'get ' : 
    Igneel.Physics.PhysicMaterial Material 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Wheells(): PrivateScope, Public, HideBySig, SpecialName
    get_BodyActor(): PrivateScope, Public, HideBySig, SpecialName
    get_Material(): PrivateScope, Public, HideBySig, SpecialName
    GetWheel(String): PrivateScope, Public, HideBySig
Class Igneel.Controllers.Vehicle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Igneel.Physics.Actor, Igneel.Physics.PhysicMaterial, Igneel.Controllers.VehicleMotor, Igneel.Controllers.VehicleGears): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.SceneNode, Igneel.Physics.PhysicMaterial, Igneel.Controllers.VehicleMotor, Igneel.Controllers.VehicleGears): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
  Properties:
    System.String Name 'get set' : 
    System.Collections.Generic.List`1[Igneel.Controllers.Vehicle] Childrens 'get ' : 
    System.Collections.Generic.List`1[Igneel.Controllers.Wheel] Wheells 'get ' : 
    Single DriveVelocity 'get ' : 
    Single MaxVelocity 'get set' : 
    Igneel.Controllers.VehicleMotor Motor 'get set' : 
    Igneel.Controllers.VehicleGears Gears 'get set' : 
    Igneel.Physics.Actor BodyActor 'get ' : 
    Igneel.Matrix GlobalPose 'get ' : 
    Single MotorForce 'get set' : 
    Igneel.Physics.PhysicMaterial CarMaterial 'get set' : 
    System.Object UserData 'get set' : 
    Igneel.Controllers.IVehicleInputMap Forward 'get set' : 
    Igneel.Controllers.IVehicleInputMap Backward 'get set' : 
    Igneel.Controllers.IVehicleInputMap Left 'get set' : 
    Igneel.Controllers.IVehicleInputMap Right 'get set' : 
    Igneel.Controllers.IVehicleInputMap HandBrake 'get set' : 
    Single Mass 'get set' : 
    Single DigitalSteeringDelta 'get set' : 
    Single SteeringMaxAngleRad 'get set' : 
    Igneel.Vector3 Position 'get set' : 
  Events:
    System.Action`2[Igneel.Controllers.Vehicle,System.Single] ControlVehicle: 
  Methods:
    add_ControlVehicle(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_ControlVehicle(Action`2): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Childrens(): PrivateScope, Public, HideBySig, SpecialName
    get_Wheells(): PrivateScope, Public, HideBySig, SpecialName
    get_DriveVelocity(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxVelocity(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxVelocity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Motor(): PrivateScope, Public, HideBySig, SpecialName
    set_Motor(VehicleMotor): PrivateScope, Public, HideBySig, SpecialName
    get_Gears(): PrivateScope, Public, HideBySig, SpecialName
    set_Gears(VehicleGears): PrivateScope, Public, HideBySig, SpecialName
    get_BodyActor(): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalPose(): PrivateScope, Public, HideBySig, SpecialName
    get_MotorForce(): PrivateScope, Public, HideBySig, SpecialName
    set_MotorForce(Single): PrivateScope, Public, HideBySig, SpecialName
    get_CarMaterial(): PrivateScope, Public, HideBySig, SpecialName
    set_CarMaterial(PhysicMaterial): PrivateScope, Public, HideBySig, SpecialName
    get_UserData(): PrivateScope, Public, HideBySig, SpecialName
    set_UserData(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Forward(): PrivateScope, Public, HideBySig, SpecialName
    set_Forward(IVehicleInputMap): PrivateScope, Public, HideBySig, SpecialName
    get_Backward(): PrivateScope, Public, HideBySig, SpecialName
    set_Backward(IVehicleInputMap): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(IVehicleInputMap): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(IVehicleInputMap): PrivateScope, Public, HideBySig, SpecialName
    get_HandBrake(): PrivateScope, Public, HideBySig, SpecialName
    set_HandBrake(IVehicleInputMap): PrivateScope, Public, HideBySig, SpecialName
    get_Mass(): PrivateScope, Public, HideBySig, SpecialName
    set_Mass(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DigitalSteeringDelta(): PrivateScope, Public, HideBySig, SpecialName
    set_DigitalSteeringDelta(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SteeringMaxAngleRad(): PrivateScope, Public, HideBySig, SpecialName
    set_SteeringMaxAngleRad(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Vector3): PrivateScope, Public, HideBySig, SpecialName
    GearUp(): PrivateScope, Public, HideBySig
    GearDown(): PrivateScope, Public, HideBySig
    Control(Single, Boolean, Single, Boolean, Boolean): PrivateScope, Public, HideBySig
    UpdateVehicle(Single): PrivateScope, Public, HideBySig
    ApplyRandomForce(): PrivateScope, Public, HideBySig
    StandUp(): PrivateScope, Public, HideBySig
    SetSuspention(SpringDesc): PrivateScope, Public, HideBySig
    SetDefaulValues(): PrivateScope, Public, HideBySig
    GetWheel(String): PrivateScope, Public, HideBySig
Class Igneel.Controllers.VehicleMotor: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Rpm 'get set' : 
    Single MinRpm 'get ' : 
    Single MaxRpm 'get ' : 
    Single Torque 'get ' : 
    Igneel.Controllers.LinearInterpolationValues TorqueCurve 'get set' : 
  Methods:
    get_Rpm(): PrivateScope, Public, HideBySig, SpecialName
    set_Rpm(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinRpm(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxRpm(): PrivateScope, Public, HideBySig, SpecialName
    get_Torque(): PrivateScope, Public, HideBySig, SpecialName
    get_TorqueCurve(): PrivateScope, Public, HideBySig, SpecialName
    set_TorqueCurve(LinearInterpolationValues): PrivateScope, Public, HideBySig, SpecialName
    ChangeGears(VehicleGears, Single): PrivateScope, Public, HideBySig
    SetToCorvette(): PrivateScope, Public, HideBySig
    SetToDefault(): PrivateScope, Public, HideBySig
Class Igneel.Controllers.VehicleGears: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[], Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 VEHICLE_MAX_NB_GEARS = 32 : Public, Static, Literal, HasDefault
  Properties:
    Single CurrentGearRatio 'get ' : 
    Int32 CurrentGear 'get ' : 
    Int32 MaxGear 'get ' : 
  Methods:
    get_CurrentGearRatio(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentGear(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxGear(): PrivateScope, Public, HideBySig, SpecialName
    GetRatio(Int32): PrivateScope, Public, HideBySig
    GearUp(): PrivateScope, Public, HideBySig
    GearDown(): PrivateScope, Public, HideBySig
    SetToCorvete(): PrivateScope, Public, HideBySig
Struct Igneel.Controllers.WheelFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Controllers.WheelFlags STEERABLE_INPUT = 1 : Public, Static, Literal, HasDefault
    Igneel.Controllers.WheelFlags STEERABLE_AUTO = 2 : Public, Static, Literal, HasDefault
    Igneel.Controllers.WheelFlags AFFECTED_BY_HANDBRAKE = 4 : Public, Static, Literal, HasDefault
    Igneel.Controllers.WheelFlags ACCELERATED = 8 : Public, Static, Literal, HasDefault
    Igneel.Controllers.WheelFlags BUILD_LOWER_HALF = 256 : Public, Static, Literal, HasDefault
    Igneel.Controllers.WheelFlags USE_WHEELSHAPE = 512 : Public, Static, Literal, HasDefault
    Igneel.Controllers.WheelFlags ALL_WHEEL_FLAGS = 15 : Public, Static, Literal, HasDefault
Class Igneel.Engine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.GraphicDevice Graphics 'get ' : 
    Igneel.Input.Keyboard KeyBoard 'get ' : 
    Igneel.Input.Mouse Mouse 'get ' : 
    Igneel.Input.Joystick[] Joysticks 'get ' : 
    RunningState RunState 'get ' : 
    Single ElapsedTime 'get ' : 
    Boolean ConstantFrameRate 'get set' : 
    Single FrameRate 'get set' : 
    Igneel.Input.InputManager Input 'get ' : 
    Boolean Paused 'get ' : 
    Igneel.Timer Time 'get ' : 
    Igneel.ShadowState Shadow 'get set' : 
    Igneel.LightingState Lighting 'get set' : 
    Igneel.ShadingState Shading 'get set' : 
    Igneel.Graphics.Multisampling Sampling 'get set' : 
    Boolean AllowAntialiasing 'get set' : 
    Igneel.Scene Scene 'get set' : 
    Igneel.Physics.PhysicScene PhyScene 'get ' : 
    Igneel.Physics.PhysicManager Physic 'get ' : 
    Igneel.Graphics.GraphicManager GraphicManager 'get ' : 
    Igneel.Physics.CharacterControllerManager ControllerManager 'get ' : 
    Boolean Initialized 'get ' : 
    Boolean FullScreen 'get set' : 
    Igneel.SceneManager SceneManager 'get set' : 
    Igneel.Graphics.Color4 BackColor 'get set' : 
    Igneel.GraphicPresenter Presenter 'get set' : 
    Igneel.Graphics.ViewPort DefaultViewPort 'get set' : 
    Igneel.Graphics.Technique ActiveTechnique 'get ' : 
  Events:
    System.Action`1[System.Single] Update: 
  Methods:
    ApplyTechnique(): PrivateScope, Public, Static, HideBySig
    ApplyTechnique(TTech): PrivateScope, Public, Static, HideBySig
    GetRenders(Action`1): PrivateScope, Public, HideBySig
    add_Update(Action`1): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_Update(Action`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Graphics(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_KeyBoard(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Mouse(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Joysticks(): PrivateScope, Public, HideBySig, SpecialName
    get_RunState(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ElapsedTime(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ConstantFrameRate(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ConstantFrameRate(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FrameRate(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_FrameRate(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Input(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Paused(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Time(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Shadow(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Shadow(ShadowState): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Lighting(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Lighting(LightingState): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Shading(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Shading(ShadingState): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sampling(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Sampling(Multisampling): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AllowAntialiasing(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_AllowAntialiasing(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Scene(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Scene(Scene): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PhyScene(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Physic(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GraphicManager(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ControllerManager(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Initialized(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FullScreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_FullScreen(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SceneManager(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_BackColor(Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Presenter(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Presenter(GraphicPresenter): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DefaultViewPort(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DefaultViewPort(ViewPort): PrivateScope, Public, Static, HideBySig, SpecialName
    InitializeEngine(GraphicManager, PhysicManager, InputManager, GraphicDevice, Control): PrivateScope, Public, Static, HideBySig
    RunEngineLoop(): PrivateScope, Public, Static, HideBySig
    Pause(): PrivateScope, Public, Static, HideBySig
    Continue(): PrivateScope, Public, Static, HideBySig
    Stop(): PrivateScope, Public, Static, HideBySig
    Lock(Action): PrivateScope, Public, Static, HideBySig
    MainLoop(): PrivateScope, Public, Static, HideBySig
    Run(): PrivateScope, Public, Static, HideBySig
    OnUpdate(): PrivateScope, Public, Static, HideBySig
    RegisterRender(Render`1): PrivateScope, Public, Static, HideBySig
    RegisterRender(): PrivateScope, Public, Static, HideBySig
    RemoveRender(): PrivateScope, Public, Static, HideBySig
    ClearRenders(): PrivateScope, Public, Static, HideBySig
    ClearRenderStack(): PrivateScope, Public, Static, HideBySig
    GetRender(): PrivateScope, Public, Static, HideBySig
    PushRender(Render`1): PrivateScope, Public, Static, HideBySig
    PopRender(): PrivateScope, Public, Static, HideBySig
    get_ActiveTechnique(): PrivateScope, Public, Static, HideBySig, SpecialName
    PushTechnique(Technique): PrivateScope, Public, Static, HideBySig
    PushTechnique(TTech): PrivateScope, Public, Static, HideBySig
    UpdateRenderStacks(): PrivateScope, Public, Static, HideBySig
    PushTechnique(): PrivateScope, Public, Static, HideBySig
    PushRequiredTechnique(): PrivateScope, Public, Static, HideBySig (Obsolete)
    PopTechnique(): PrivateScope, Public, Static, HideBySig
    RemoveTechnique(): PrivateScope, Public, Static, HideBySig
    InsertTechnique(Predicate`1, Technique(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsTechniqueActive(Type): PrivateScope, Public, Static, HideBySig
    IsTechniqueActive(): PrivateScope, Public, Static, HideBySig
    ApplyTechnique(): PrivateScope, Public, Static, HideBySig
Struct Igneel.Engine+LoopStage: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LoopStage None = 0 : Public, Static, Literal, HasDefault
    LoopStage PreRender = 1 : Public, Static, Literal, HasDefault
    LoopStage Render = 2 : Public, Static, Literal, HasDefault
    LoopStage PostRender = 3 : Public, Static, Literal, HasDefault
    LoopStage Update = 4 : Public, Static, Literal, HasDefault
    LoopStage Present = 5 : Public, Static, Literal, HasDefault
Struct Igneel.Engine+RunningState: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RunningState None = 0 : Public, Static, Literal, HasDefault
    RunningState Stoped = 1 : Public, Static, Literal, HasDefault
    RunningState Started = 2 : Public, Static, Literal, HasDefault
    RunningState Paused = 3 : Public, Static, Literal, HasDefault
    RunningState Running = 4 : Public, Static, Literal, HasDefault
Interface Igneel.Graphics.IRenderBinding`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Contravariant
  Properties:
    Igneel.Graphics.Render Render 'get set' : 
  Methods:
    Bind(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnBind(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Render(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Render(Render): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.RenderBinding`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Graphics.Render): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Graphics.IRenderBinding`1[T]
  Properties:
    Igneel.Graphics.Render Render 'get set' : 
  Methods:
    get_Render(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Render(Render): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Bind(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnBind(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Graphics.PlaneReflectionBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`1[Igneel.Graphics.ReflectiveNodeTechnique]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(ReflectiveNodeTechnique): PrivateScope, Public, Virtual, HideBySig
    UnBind(ReflectiveNodeTechnique): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.PlaneReflectionBinding+IMapping: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Properties:
    Boolean USE_REFLECTION_MAP 'get set' : 
    Boolean USE_REFRACTION_MAP 'get set' : 
  Methods:
    get_USE_REFLECTION_MAP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_USE_REFLECTION_MAP(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_USE_REFRACTION_MAP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_USE_REFRACTION_MAP(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Igneel.Graphics.DrawFontFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.DrawFontFormat TOP = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat LEFT = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat CENTER = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat RIGHT = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat VCENTER = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat BOTTOM = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat WORDBREAK = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat SINGLELINE = 32 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat EXPANDTABS = 64 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat NOCLIP = 256 : Public, Static, Literal, HasDefault
    Igneel.Graphics.DrawFontFormat CALCRECT = 1024 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.GraphicFont: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Drawing.Font Font 'get ' : 
  Methods:
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    DrawText(String, Rectangle, Color4, DrawFontFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Graphics.ShaderType: AutoLayout, AnsiClass, Class, Public
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type NetType 'get set' : 
    Igneel.Graphics.ShaderMember[] Members 'get set' : 
    Int32 Bytes 'get set' : 
  Methods:
    get_NetType(): PrivateScope, Public, HideBySig, SpecialName
    set_NetType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
    set_Members(ShaderMember[]): PrivateScope, Public, HideBySig, SpecialName
    get_Bytes(): PrivateScope, Public, HideBySig, SpecialName
    set_Bytes(Int32): PrivateScope, Public, HideBySig, SpecialName
    RegisterType(Type): PrivateScope, Public, Static, HideBySig
    GetShaderType(UniformDesc): PrivateScope, Public, Static, HideBySig
Class Igneel.Graphics.ShaderMember: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Reflection.FieldInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.ShaderType Type 'get set' : 
    System.String Name 'get set' : 
    Int32 Bytes 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(ShaderType): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Bytes(): PrivateScope, Public, HideBySig, SpecialName
    set_Bytes(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.GraphicDSL: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Transformed(T, Vector3(Optional, HasDefault), Euler(Optional, HasDefault), Vector3(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Translated(T, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Translated(T, Vector3): PrivateScope, Public, Static, HideBySig
    Rotated(T, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Rotated(T, Matrix): PrivateScope, Public, Static, HideBySig
    Scaled(T, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Commit(T): PrivateScope, Public, Static, HideBySig
    Events(T, UpdateEventHandler(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Initialized(T, Action`1): PrivateScope, Public, Static, HideBySig
Class Igneel.IgneelApplication: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Windows.Forms.Form Form 'get set' : 
    Igneel.IgneelApplication CurrentApplication 'get ' : 
    Boolean IsInitialized 'get ' : 
  Methods:
    get_Form(): PrivateScope, Public, HideBySig, SpecialName
    set_Form(Form): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentApplication(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsInitialized(): PrivateScope, Public, HideBySig, SpecialName
    Start(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShutDown(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Timer: AutoLayout, AnsiClass, Class, Public, Sealed
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Time 'get ' : 
    Single ComptutedElapsedTime 'get ' : 
  Methods:
    timeGetTime(): PrivateScope, Public, Static, HideBySig, PinvokeImpl, HasSecurity
    Now(): PrivateScope, Public, Static, HideBySig
    Start(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    Reset(Single): PrivateScope, Public, HideBySig
    Resume(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    get_Time(): PrivateScope, Public, HideBySig, SpecialName
    Elapsed(): PrivateScope, Public, HideBySig
    get_ComptutedElapsedTime(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.DesignEnvironment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.GraphicObject`1[Igneel.Design.DesignEnvironment]
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IDeferreable
  Properties:
    Single Scale 'get set' : 
    Single Size 'get set' : 
  Methods:
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Single): PrivateScope, Public, HideBySig, SpecialName
    CommitChanges(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAsset(): PrivateScope, Public, Virtual, HideBySig
    OnPoseUpdated(SceneNode): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.DesignEnvironmentRender: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Render`2[Igneel.Graphics.Shaders.Mesh_SimpleColored,Igneel.Design.DesignEnvironment]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Draw(DesignEnvironment): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.DesignEnvironmentRegistrator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Registrator`1[Igneel.Design.DesignEnvironment]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.EngineState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IInitializable
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Igneel.EnabilitableState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EngineState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IEnabletable
  Properties:
    Boolean Enable 'get set' : 
  Events:
    System.EventHandler EnableChanged: 
  Methods:
    add_EnableChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_EnableChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Enable(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Enable(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    OnEnableChanged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Igneel.GSAOState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Compute(Mesh, Scene): PrivateScope, Public, HideBySig
Class Igneel.HDRState: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.HDRTechnique Render 'get ' : 
    Boolean EnableBlueShift 'get set' : 
    Boolean CalculateEyeAdaptation 'get set' : 
    Single MiddleGray 'get set' : 
    Single LuminaceWhite 'get set' : 
    Single BrightThreshold 'get set' : 
    Single GaussianMultiplier 'get set' : 
    Single GaussainMean 'get set' : 
    Single GaussianDeviation 'get set' : 
    Single BrightPassOffset 'get set' : 
    Single BloomBlendFactor 'get set' : 
    Single StarBlendFactor 'get set' : 
    Igneel.Graphics.GlareLibType GlareType 'get set' : 
    Igneel.Graphics.GlareDefinition Glare 'get ' : 
  Methods:
    get_Render(): PrivateScope, Public, HideBySig, SpecialName
    get_EnableBlueShift(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableBlueShift(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CalculateEyeAdaptation(): PrivateScope, Public, HideBySig, SpecialName
    set_CalculateEyeAdaptation(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleGray(): PrivateScope, Public, HideBySig, SpecialName
    set_MiddleGray(Single): PrivateScope, Public, HideBySig, SpecialName
    get_LuminaceWhite(): PrivateScope, Public, HideBySig, SpecialName
    set_LuminaceWhite(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BrightThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_BrightThreshold(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GaussianMultiplier(): PrivateScope, Public, HideBySig, SpecialName
    set_GaussianMultiplier(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GaussainMean(): PrivateScope, Public, HideBySig, SpecialName
    set_GaussainMean(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GaussianDeviation(): PrivateScope, Public, HideBySig, SpecialName
    set_GaussianDeviation(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BrightPassOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_BrightPassOffset(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BloomBlendFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_BloomBlendFactor(Single): PrivateScope, Public, HideBySig, SpecialName
    get_StarBlendFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_StarBlendFactor(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GlareType(): PrivateScope, Public, HideBySig, SpecialName
    set_GlareType(GlareLibType): PrivateScope, Public, HideBySig, SpecialName
    get_Glare(): PrivateScope, Public, HideBySig, SpecialName
    OnEnableChanged(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.LightingState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EngineState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean TransparencyEnable 'get set' : 
    Igneel.ReflectionState Reflection 'get ' : 
    Igneel.HDRState HDR 'get ' : 
    Igneel.SSAOState SSAO 'get ' : 
    Igneel.GSAOState GSAO 'get ' : 
    Igneel.PRTState PRT 'get ' : 
    Boolean HemisphericalAmbient 'get set' : 
    Boolean PerPixelLightingEnable 'get set' : 
    Boolean EnableAmbient 'get set' : 
  Methods:
    get_TransparencyEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_TransparencyEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Reflection(): PrivateScope, Public, HideBySig, SpecialName
    get_HDR(): PrivateScope, Public, HideBySig, SpecialName
    get_SSAO(): PrivateScope, Public, HideBySig, SpecialName
    get_GSAO(): PrivateScope, Public, HideBySig, SpecialName
    get_PRT(): PrivateScope, Public, HideBySig, SpecialName
    get_HemisphericalAmbient(): PrivateScope, Public, HideBySig, SpecialName
    set_HemisphericalAmbient(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PerPixelLightingEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_PerPixelLightingEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EnableAmbient(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableAmbient(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.PRTState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.ReflectionState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 EnvironmentMapSize 'get set' : 
    Single EnvironmentMapZn 'get set' : 
    Single EnvironmentMapZf 'get set' : 
    Boolean BDREnable 'get set' : 
  Methods:
    get_EnvironmentMapSize(): PrivateScope, Public, HideBySig, SpecialName
    set_EnvironmentMapSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EnvironmentMapZn(): PrivateScope, Public, HideBySig, SpecialName
    set_EnvironmentMapZn(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EnvironmentMapZf(): PrivateScope, Public, HideBySig, SpecialName
    set_EnvironmentMapZf(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BDREnable(): PrivateScope, Public, HideBySig, SpecialName
    set_BDREnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.SSAOState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.PhysicsState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EngineState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean EnableHardwareSimulation 'get set' : 
    Igneel.Vector3 Color 'get set' : 
    Single Alpha 'get set' : 
  Methods:
    get_EnableHardwareSimulation(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableHardwareSimulation(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Single): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.DeferredLighting: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.DeferredLightingState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.DepthOfFieldState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.FogState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.LensFlareState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.Texture2D[] FlareTextures 'get set' : 
  Methods:
    get_FlareTextures(): PrivateScope, Public, HideBySig, SpecialName
    set_FlareTextures(Texture2D[]): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.MotionBlurState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.ShadingState: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Igneel.EngineState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.CullMode CullMode 'get set' : 
    Igneel.Graphics.FillMode FillMode 'get set' : 
    Boolean BumpMappingEnable 'get set' : 
    Boolean ParallaxMappingEnable 'get set' : 
    Igneel.DepthOfFieldState DepthOfField 'get ' : 
    Igneel.FogState Fog 'get ' : 
    Igneel.MotionBlurState MotionBlur 'get ' : 
    Igneel.LensFlareState LensFlare 'get ' : 
    Igneel.DeferredLightingState DeferredLigthing 'get ' : 
  Events:
    System.EventHandler DeferredLightingEnable: 
  Methods:
    add_DeferredLightingEnable(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_DeferredLightingEnable(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_CullMode(): PrivateScope, Public, HideBySig, SpecialName
    set_CullMode(CullMode): PrivateScope, Public, HideBySig, SpecialName
    get_FillMode(): PrivateScope, Public, HideBySig, SpecialName
    set_FillMode(FillMode): PrivateScope, Public, HideBySig, SpecialName
    get_BumpMappingEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_BumpMappingEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ParallaxMappingEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_ParallaxMappingEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DepthOfField(): PrivateScope, Public, HideBySig, SpecialName
    get_Fog(): PrivateScope, Public, HideBySig, SpecialName
    get_MotionBlur(): PrivateScope, Public, HideBySig, SpecialName
    get_LensFlare(): PrivateScope, Public, HideBySig, SpecialName
    get_DeferredLigthing(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.ShadowMapState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get set' : 
    Single Bias 'get set' : 
    Boolean UseGaussianFilter 'get set' : 
    Single GaussianDeviation 'get set' : 
    Int32 PCFBlurSize 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Bias(): PrivateScope, Public, HideBySig, SpecialName
    set_Bias(Single): PrivateScope, Public, HideBySig, SpecialName
    get_UseGaussianFilter(): PrivateScope, Public, HideBySig, SpecialName
    set_UseGaussianFilter(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_GaussianDeviation(): PrivateScope, Public, HideBySig, SpecialName
    set_GaussianDeviation(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PCFBlurSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PCFBlurSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    OnEnableChanged(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.SoftShadowMapState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Multiplier 'get set' : 
    Single Deviation 'get set' : 
  Methods:
    get_Multiplier(): PrivateScope, Public, HideBySig, SpecialName
    set_Multiplier(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Deviation(): PrivateScope, Public, HideBySig, SpecialName
    set_Deviation(Single): PrivateScope, Public, HideBySig, SpecialName
    OnEnableChanged(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.ShadowState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.EnabilitableState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.ShadowMapState ShadowMapping 'get ' : 
    Algoritm ShadowAlgoritm 'get set' : 
    Igneel.SoftShadowMapState SofShadowState 'get ' : 
  Methods:
    get_ShadowMapping(): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowAlgoritm(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowAlgoritm(Algoritm): PrivateScope, Public, HideBySig, SpecialName
    get_SofShadowState(): PrivateScope, Public, HideBySig, SpecialName
Struct Igneel.ShadowState+Algoritm: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Algoritm SHADOW_MAP = 0 : Public, Static, Literal, HasDefault
    Algoritm CUBE_SHADOW_MAP = 1 : Public, Static, Literal, HasDefault
    Algoritm SHADOW_VOLUME = 2 : Public, Static, Literal, HasDefault
    Algoritm RAY_TRACING = 3 : Public, Static, Literal, HasDefault
Class Igneel.STDNodes: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
Struct Igneel.CoordMappingType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.CoordMappingType None = 0 : Public, Static, Literal, HasDefault
    Igneel.CoordMappingType Spherical = 1 : Public, Static, Literal, HasDefault
    Igneel.CoordMappingType Cylindrical = 2 : Public, Static, Literal, HasDefault
Class Igneel.Mesh: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(Igneel.Graphics.VertexDescriptor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IAssetProvider
    Igneel.INameable
  Properties:
    System.String Name 'get set' : 
    Int32 VertexCount 'get ' : 
    Int32 FaceCount 'get ' : 
    Int32 LayerCount 'get ' : 
    Int32 MaterialSlots 'get ' : 
    Igneel.MeshPart[] Layers 'get set' : 
    Igneel.Graphics.GraphicBuffer VertexBuffer 'get ' : 
    Igneel.Graphics.GraphicBuffer IndexBuffer 'get ' : 
    Boolean Is16BitIndices 'get ' : 
    Int32[] Adjacency 'get set' : 
    Igneel.Graphics.VertexDescriptor VertexDescriptor 'get ' : 
    System.String[] MaterialSlotNames 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VertexCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FaceCount(): PrivateScope, Public, HideBySig, SpecialName
    get_LayerCount(): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialSlots(): PrivateScope, Public, HideBySig, SpecialName
    get_Layers(): PrivateScope, Public, HideBySig, SpecialName
    set_Layers(MeshPart[]): PrivateScope, Public, HideBySig, SpecialName
    get_VertexBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_IndexBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_Is16BitIndices(): PrivateScope, Public, HideBySig, SpecialName
    get_Adjacency(): PrivateScope, Public, HideBySig, SpecialName
    set_Adjacency(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_VertexDescriptor(): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialSlotNames(): PrivateScope, Public, HideBySig, SpecialName
    set_MaterialSlotNames(String[]): PrivateScope, Public, HideBySig, SpecialName
    ComputeBoundingVolumenes(OrientedBox&(Out), Sphere&(Out)): PrivateScope, Public, HideBySig
    CreateVertexBuffer(T[], ResourceUsage(Optional, HasDefault), MapType(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateVertexBuffer(Byte[], Int32, ResourceUsage(Optional, HasDefault), MapType(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateIndexBuffer(T[], ResourceUsage(Optional, HasDefault), MapType(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateIndexBuffer(Byte[], IndexFormat(Optional, HasDefault), ResourceUsage(Optional, HasDefault), MapType(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetVertexViewStream(IASemantic, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReleaseVertexBufferViews(): PrivateScope, Public, HideBySig
    ReleaseIndexBufferViews(): PrivateScope, Public, HideBySig
    ReleaseViews(): PrivateScope, Public, HideBySig
    GetVertexBufferView(IASemantic, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetVertexBufferView(Int32): PrivateScope, Public, HideBySig
    GetIndexBufferView(): PrivateScope, Public, HideBySig
    GetIndexedBufferView(IASemantic, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ComputeNormals(): PrivateScope, Public, HideBySig
    ComputeTangents(): PrivateScope, Public, HideBySig
    ComputeTextureCoords(CoordMappingType): PrivateScope, Public, HideBySig
    GetLayersByMaterial(Int32): PrivateScope, Public, HideBySig
    DefragmentParts(): PrivateScope, Public, HideBySig
    BlendLayers(): PrivateScope, Public, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnAssetDestroyed(AssetReference): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CreateTriangleMesh(): PrivateScope, Public, HideBySig
    IsPlane(Plane&(Out)): PrivateScope, Public, HideBySig
    IsBox(Vector3&(Out), Vector3&(Out)): PrivateScope, Public, HideBySig
    IsSphere(Vector3&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    IsCylindre(Single&(Out), Single&(Out), Vector3&(Out)): PrivateScope, Public, HideBySig
    IsCapsule(Single&(Out), Single&(Out), Vector3&(Out)): PrivateScope, Public, HideBySig
    CreateShapeDescriptor(): PrivateScope, Public, HideBySig
    CreateTriangleMeshDescriptor(): PrivateScope, Public, HideBySig
    FindDimensions(IntPtr, Vector3&(Out), Vector3&(Out)): PrivateScope, Public, HideBySig
Class Igneel.MeshPart: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LayerID 'get ' : 
    Int32 MaterialIndex 'get set' : 
    Int32 StartIndex 'get set' : 
    Int32 PrimitiveCount 'get set' : 
    Int32 StartVertex 'get set' : 
    Int32 VertexCount 'get set' : 
  Methods:
    get_LayerID(): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_MaterialIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_StartIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PrimitiveCount(): PrivateScope, Public, HideBySig, SpecialName
    set_PrimitiveCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartVertex(): PrivateScope, Public, HideBySig, SpecialName
    set_StartVertex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VertexCount(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexCount(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.VertexBufferBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetVertexIndex(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    WriteVertex(Byte[], Int32, Int32, Int32): PrivateScope, Public, HideBySig
    GetBuffer(): PrivateScope, Public, HideBySig
    GetVertices(Int32): PrivateScope, Public, HideBySig
Struct Igneel.VertexBufferBuilder+VertexCache: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 PosIndex : Public
    Int32 NormalIndex : Public
    Int32 TexCoordIndex : Public
    Int32 VertexBufferIndex : Public
Struct Igneel.GraphicBufferView: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr, Igneel.Graphics.VertexDescriptor, Igneel.Graphics.IASemantic, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr Item [Int32] 'get ' : 
    IntPtr Item [UInt32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(UInt32): PrivateScope, Public, HideBySig, SpecialName
    PositionReader(IntPtr, VertexDescriptor): PrivateScope, Public, Static, HideBySig
    NormalReader(IntPtr, VertexDescriptor): PrivateScope, Public, Static, HideBySig
    TangentReader(IntPtr, VertexDescriptor): PrivateScope, Public, Static, HideBySig
    Texture0Reader(IntPtr, VertexDescriptor): PrivateScope, Public, Static, HideBySig
Struct Igneel.IndexBufferView: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    Int32 Item [Int32] 'get set' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Igneel.GraphicBufferView`1[T]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.ValueType
    Void .ctor(IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Igneel.Graphics.VertexDescriptor, Igneel.Graphics.IASemantic, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    T Item [Int32] 'get set' : 
    Byte* BasePter 'get ' : 
    Int32 Stride 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, T): PrivateScope, Public, HideBySig, SpecialName
    get_BasePter(): PrivateScope, Public, HideBySig, SpecialName
    get_Stride(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetPtr(Int32): PrivateScope, Public, HideBySig
    GetValue(Int32, T&(Out)): PrivateScope, Public, HideBySig
    SetValue(Int32, T&): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct Igneel.GraphicBufferView`1+AttributeEnumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.ValueType
    Void .ctor(Igneel.GraphicBufferView`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[T]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    T Current  'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Igneel.IndexedBufferView`1[T]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.ValueType
    Void .ctor(IntPtr, Int32, IntPtr, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Igneel.Graphics.VertexDescriptor, Igneel.Graphics.IASemantic, Int32, IntPtr, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    T Item [Int32] 'get set' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, T): PrivateScope, Public, HideBySig, SpecialName
    GetPtr(Int32): PrivateScope, Public, HideBySig
    GetValue(Int32, T&(Out)): PrivateScope, Public, HideBySig
    SetValue(Int32, T&): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct Igneel.IndexedBufferView`1+AttributeEnumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.ValueType
    Void .ctor(Igneel.IndexedBufferView`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[T]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    T Current  'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Igneel.Graphics.DisplayMode: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Width : Public
    Int32 Height : Public
Struct Igneel.Graphics.SwapChainDesc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 BackBufferWidth : Public
    Int32 BackBufferHeight : Public
    Igneel.Graphics.Format BackBufferFormat : Public
    Igneel.Graphics.Format DepthStencilFormat : Public
    Igneel.Graphics.Multisampling Sampling : Public
    IntPtr OutputWindow : Public
Class Igneel.Graphics.SwapChain: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Properties:
    Igneel.Graphics.RenderTarget BackBuffer 'get ' : 
    Igneel.Graphics.DepthStencil DepthStencilBuffer 'get ' : 
    Igneel.Graphics.SwapChainDesc Desc 'get set' : 
  Methods:
    get_BackBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_DepthStencilBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_Desc(): PrivateScope, Public, HideBySig, SpecialName
    set_Desc(SwapChainDesc): PrivateScope, Public, HideBySig, SpecialName
    Present(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResizeBackBuffer(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Igneel.Graphics.ShaderCamera: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Matrix View : Public
    Igneel.Matrix Projection : Public
    Igneel.Matrix ViewProj : Public
    Igneel.Vector3 eyePos : Public
Interface Igneel.Graphics.ICameraMap: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Matrix View 'get set' : 
    Igneel.Matrix Projection 'get set' : 
    Igneel.Matrix ViewProj 'get set' : 
    Igneel.Vector3 eyePos 'get set' : 
  Methods:
    get_View(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_View(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Projection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Projection(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ViewProj(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ViewProj(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_eyePos(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_eyePos(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.CameraBinding: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`1[Igneel.Camera]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(Camera): PrivateScope, Public, Final, Virtual, HideBySig
    UnBind(Camera): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.Bindings.IdBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`1[Igneel.SceneNode]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(SceneNode): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.Bindings.IdBinding+IWorldMapping: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Matrix World 'get set' : 
    Int32 gId  'get set' : 
  Methods:
    get_World(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_World(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_gId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_gId(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.RenderBinding`2[T,TMAP]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T
  Type parameter: TMAP,  ReferenceType
  :Igneel.Graphics.RenderBinding`1[T]
Class Igneel.Graphics.GenericRenderBinding`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :Igneel.Graphics.RenderBinding`1[T]
    Void .ctor(Igneel.Graphics.Render, System.Action`1[T], System.Action`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(T): PrivateScope, Public, Virtual, HideBySig
    UnBind(T): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.ILightMap: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Graphics.ShaderLight light 'get set' : 
    Int32 activeLights 'get set' : 
    Igneel.Vector3 sky 'get set' : 
    Igneel.Vector3 ground 'get set' : 
    Igneel.Vector3 northPole 'get set' : 
    Igneel.Vector3 ambient 'get set' : 
  Methods:
    get_light(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_light(ShaderLight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_activeLights(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_activeLights(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_sky(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_sky(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ground(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ground(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_northPole(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_northPole(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ambient(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ambient(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Graphics.IAmbientMap: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Vector3 sky 'get set' : 
    Igneel.Vector3 ground 'get set' : 
    Igneel.Vector3 northPole 'get set' : 
    Igneel.Vector3 ambient 'get set' : 
    Boolean hemisphere 'get set' : 
  Methods:
    get_sky(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_sky(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ground(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ground(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_northPole(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_northPole(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ambient(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ambient(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_hemisphere(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_hemisphere(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.AmbientLightBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`2[Igneel.GlobalLigth,Igneel.Graphics.IAmbientMap]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(GlobalLigth): PrivateScope, Public, Virtual, HideBySig
    UnBind(GlobalLigth): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.MeshMaterialBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`2[Igneel.Graphics.MeshMaterial,Igneel.Graphics.MeshMaterialBinding+IMaterialFlagsBinding]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean UseNormalMap : Public
    Int32 DiffuseSampler = 0 : Public, Static, Literal, HasDefault
    Int32 SpecularSampler = 1 : Public, Static, Literal, HasDefault
    Int32 EmisiveSampler = 2 : Public, Static, Literal, HasDefault
    Int32 NormalSampler = 3 : Public, Static, Literal, HasDefault
    Int32 ReflectionSampler = 5 : Public, Static, Literal, HasDefault
    Int32 RefractionSampler = 6 : Public, Static, Literal, HasDefault
  Methods:
    Bind(MeshMaterial): PrivateScope, Public, Final, Virtual, HideBySig
    UnBind(MeshMaterial): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.MeshMaterialBinding+IMaterialFlagsBinding: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Properties:
    Boolean USE_DIFFUSE_MAP 'get set' : 
    Boolean USE_SPECULAR_MAP 'get set' : 
    Boolean USE_EMISSIVE_MAP 'get set' : 
    Boolean USE_NORMAL_MAP 'get set' : 
    Igneel.Graphics.LayerSurface surface 'get set' : 
  Methods:
    get_USE_DIFFUSE_MAP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_USE_DIFFUSE_MAP(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_USE_SPECULAR_MAP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_USE_SPECULAR_MAP(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_USE_EMISSIVE_MAP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_USE_EMISSIVE_MAP(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_USE_NORMAL_MAP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_USE_NORMAL_MAP(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_surface(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_surface(LayerSurface): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.Bindings.PixelClippingBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`2[Igneel.Graphics.PixelClipping,Igneel.Graphics.Bindings.PixelClippingBinding+PixelClippingMap]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Graphics.DepthStencilState depthStateNoWrite : Public, Static
    Igneel.Graphics.DepthStencilState depthStateWrite : Public, Static
  Methods:
    Bind(PixelClipping): PrivateScope, Public, Virtual, HideBySig
    UnBind(PixelClipping): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.Bindings.PixelClippingBinding+PixelClippingMap: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Properties:
    Boolean fNoRenderTransparency 'get set' : 
    Boolean NoRenderOpaque 'get set' : 
  Methods:
    get_fNoRenderTransparency(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_fNoRenderTransparency(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NoRenderOpaque(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_NoRenderOpaque(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.RenderBinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Igneel.Assets.IAssetProvider
  Methods:
    CreateAsset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnAssetDestroyed(AssetReference): PrivateScope, Public, HideBySig
    Bind(Render): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnBind(Render): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ChainPrevius(TParam): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ChainNext(TParam): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInstanceRender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInstanceRender(Render): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Create(T): PrivateScope, Public, Static, HideBySig
Class Igneel.Graphics.RenderBinder`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: T, Igneel.Assets.IAssetProvider
  :Igneel.Graphics.RenderBinder
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T, Igneel.Graphics.RenderBinder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T Value    'get set' : 
    Igneel.Graphics.RenderBinder Previus 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(T): PrivateScope, Public, HideBySig, SpecialName
    get_Previus(): PrivateScope, Public, HideBySig, SpecialName
    set_Previus(RenderBinder): PrivateScope, Public, HideBySig, SpecialName
    Bind(Render): PrivateScope, Public, Virtual, HideBySig
    UnBind(Render): PrivateScope, Public, Virtual, HideBySig
    ChainPrevius(TParam): PrivateScope, Public, Virtual, HideBySig
    ChainNext(TParam): PrivateScope, Public, Virtual, HideBySig
    CreateAsset(): PrivateScope, Public, Virtual, HideBySig
    GetInstanceRender(): PrivateScope, Public, Virtual, HideBySig
    SetInstanceRender(Render): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.SceneNodeWorldBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`1[Igneel.SceneNode]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(SceneNode): PrivateScope, Public, Virtual, HideBySig
    UnBind(SceneNode): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.SceneNodeWorldBinding+IWorldMapping: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Matrix World 'get set' : 
  Methods:
    get_World(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_World(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.Bindings.SkinBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`2[Igneel.SkinInstance,Igneel.Graphics.Bindings.SkinBinding+ISkinBinding]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Graphics.IRenderBinding`1[Igneel.MeshPart]
  Properties:
    Int32 MaxVertexInfluences 'get ' : 
    Int32 MaxPaletteMatrices 'get ' : 
  Methods:
    get_MaxVertexInfluences(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPaletteMatrices(): PrivateScope, Public, HideBySig, SpecialName
    Bind(SkinInstance): PrivateScope, Public, Virtual, HideBySig
    Bind(MeshPart): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UnBind(MeshPart): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UnBind(SkinInstance): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.Bindings.SkinBinding+ISkinBinding: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Matrix[] WorldArray 'get set' : 
  Methods:
    get_WorldArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_WorldArray(Matrix[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.ClipSceneTechniqueBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`2[Igneel.Graphics.ClipPlaneSceneTechnique,Igneel.Graphics.ClipSceneTechniqueBinding+IClipMap]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(ClipPlaneSceneTechnique): PrivateScope, Public, Virtual, HideBySig
    UnBind(ClipPlaneSceneTechnique): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.ClipSceneTechniqueBinding+IClipMap: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Vector4 clipPlane 'get set' : 
  Methods:
    get_clipPlane(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_clipPlane(Vector4): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.Bindings.EnvironmentMapBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`1[Igneel.Graphics.EnvironmentMapTechnique]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(EnvironmentMapTechnique): PrivateScope, Public, Virtual, HideBySig
    UnBind(EnvironmentMapTechnique): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.Bindings.EnvironmentMapBinding+IEnvMap: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Properties:
    Boolean USE_ENVIROMENT_MAP 'get set' : 
  Methods:
    get_USE_ENVIROMENT_MAP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_USE_ENVIROMENT_MAP(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.Bindings.ShadowMapBinding`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, Igneel.Graphics.ShadowMapTechnique
  :Igneel.Graphics.RenderBinding`2[T,Igneel.Graphics.Bindings.ShadowMapBinding`1+ISMMap[T]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(T): PrivateScope, Public, Virtual, HideBySig
    UnBind(T): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.Bindings.ShadowMapBinding`1+ISMMap[T]: AutoLayout, AnsiClass, Class, NestedPublic, ClassSemanticsMask, Abstract
  Type parameter: T, Igneel.Graphics.ShadowMapTechnique
  Properties:
    Igneel.Matrix LightVP 'get set' : 
    Single SHADOW_EPSILON 'get set' : 
    Igneel.Vector2[] gShadowTexOffsets 'get set' : 
    Single SM_SIZE 'get set' : 
  Methods:
    get_LightVP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LightVP(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SHADOW_EPSILON(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SHADOW_EPSILON(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_gShadowTexOffsets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_gShadowTexOffsets(Vector2[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SM_SIZE(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SM_SIZE(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.Bindings.StaticShadowMapBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Bindings.ShadowMapBinding`1[Igneel.Graphics.StaticShadowMapTechnique]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(StaticShadowMapTechnique): PrivateScope, Public, Virtual, HideBySig
    UnBind(StaticShadowMapTechnique): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.Bindings.BuildSMapMatBinding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`2[Igneel.Graphics.MeshMaterial,Igneel.Graphics.MeshMaterialBinding+IMaterialFlagsBinding]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(MeshMaterial): PrivateScope, Public, Virtual, HideBySig
    UnBind(MeshMaterial): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.Bindings.TechniquesBinding.ITechniqueBinding`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Interfaces:
    Igneel.Graphics.IRenderBinding`1[T]
  Properties:
    T LastBindedTechnique 'get ' : 
  Methods:
    get_LastBindedTechnique(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Graphics.Bindings.TechniquesBinding.TechniqueBinding`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, Igneel.Graphics.NodeTechnique
  :Igneel.Graphics.RenderBinding`1[T]
  Interfaces:
    Igneel.Graphics.Bindings.TechniquesBinding.ITechniqueBinding`1[T]
  Properties:
    T LastBindedTechnique 'get ' : 
  Methods:
    get_LastBindedTechnique(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Bind(T): PrivateScope, Public, Final, Virtual, HideBySig
    UnBind(T): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.MeshMaterial: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.SurfaceMaterial
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
  Properties:
    System.String Name 'get set' : 
    Igneel.Graphics.Texture2D DiffuseMap 'get set' : 
    Igneel.Graphics.Texture2D SpecularMap 'get set' : 
    Igneel.Graphics.Texture2D NormalMap 'get set' : 
    Igneel.Graphics.Texture2D EmissiveMap 'get set' : 
    Boolean ContainsTrasparency 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DiffuseMap(): PrivateScope, Public, HideBySig, SpecialName
    set_DiffuseMap(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_SpecularMap(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecularMap(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_NormalMap(): PrivateScope, Public, HideBySig, SpecialName
    set_NormalMap(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_EmissiveMap(): PrivateScope, Public, HideBySig, SpecialName
    set_EmissiveMap(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_ContainsTrasparency(): PrivateScope, Public, HideBySig, SpecialName
    CreateDefaultMaterial(String): PrivateScope, Public, Static, HideBySig
    CreateAsset(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CheckForTransparency(): PrivateScope, Public, HideBySig
Class Igneel.Graphics.TransparencyChecker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsTransparent(Texture2D): PrivateScope, Public, HideBySig
Class Igneel.Graphics.NotAvailableException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Registrator`2[TComp,TReg]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TComp,  ReferenceType
  Type parameter: TReg, Igneel.IRenderRegistrator`1[TComp]
  :Igneel.Graphics.Registrator`1[TComp]
Class Igneel.Graphics.TechniqueRegistry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.Technique Technique 'get ' : 
  Methods:
    get_Technique(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.BillBoardRender`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, Igneel.Graphics.Effect
  :Igneel.Graphics.Render`2[T,Igneel.BillBoard]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Graphics.VertexPTx[] Vertices : Public, Static, InitOnly
  Methods:
    Draw(BillBoard): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.BillBoardRegistrator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Registrator`1[Igneel.BillBoard]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.MeshRender`2[TShader,T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TShader, Igneel.Graphics.Effect,  DefaultConstructor
  Type parameter: T, Igneel.IMeshContainer, Igneel.IMaterialContainer
  :Igneel.Graphics.Render`2[TShader,T]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Draw(T): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.MeshInstanceRenderRegistrator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Registrator`2[Igneel.MeshInstance,Igneel.Graphics.MeshInstanceRenderRegistrator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.SkinInstanceRenderRegistrator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Registrator`2[Igneel.SkinInstance,Igneel.Graphics.SkinInstanceRenderRegistrator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.ParticleSystemRender`1[TShader]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TShader, Igneel.Graphics.Effect
  :Igneel.Graphics.Render`2[TShader,Igneel.ParticleSystem]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Draw(ParticleSystem): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.PartSystemRegistrator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Registrator`1[Igneel.ParticleSystem]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig
Interface Igneel.Graphics.IComponentRender`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Contravariant
  Methods:
    Draw(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Graphics.ActorRender`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, Igneel.Graphics.Effect
  :Igneel.Graphics.Render`2[T,Igneel.Physics.Actor]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Graphics.IComponentRender`1[Igneel.Physics.Actor]
  Methods:
    Draw(Actor): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.ActorRegistrator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Registrator`2[Igneel.Physics.Actor,Igneel.Graphics.ActorRegistrator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.PixelClipping: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.PixelClipping None = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.PixelClipping Transparent = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.PixelClipping Opaque = 2 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.RenderExtensors: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Binding(TRender, Action`1): PrivateScope, Public, Static, HideBySig
Class Igneel.Graphics.ShapeRender`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Vector4 Color 'get set' : 
    Single Distance 'get set' : 
    Boolean UseShapeColor 'get set' : 
    Boolean KeepDistance 'get set' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Vector4): PrivateScope, Public, HideBySig, SpecialName
    get_Distance(): PrivateScope, Public, HideBySig, SpecialName
    set_Distance(Single): PrivateScope, Public, HideBySig, SpecialName
    get_UseShapeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_UseShapeColor(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_KeepDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_KeepDistance(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Render(ShapeBuilder`1, Matrix): PrivateScope, Public, HideBySig
    Render(ShapeBuilder`1, Matrix, ShapeLayer): PrivateScope, Public, HideBySig
    Render(ComposedShape`1, Matrix): PrivateScope, Public, HideBySig
Class Igneel.Graphics.HeightFieldRegistrator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Registrator`2[Igneel.HeightField,Igneel.Graphics.HeightFieldRegistrator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterRenders(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.HeightFieldRender`1[TShader]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TShader, Igneel.Graphics.Effect
  :Igneel.Graphics.Render`2[TShader,Igneel.HeightField]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Draw(HeightField): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.HeightFieldMaterialBind: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`1[Igneel.TerrainMaterial]
    Void .ctor(Igneel.Graphics.Render): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(TerrainMaterial): PrivateScope, Public, Virtual, HideBySig
    UnBind(TerrainMaterial): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.HeightFieldBind: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`1[Igneel.HeightField]
    Void .ctor(Igneel.Graphics.Render): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(HeightField): PrivateScope, Public, Virtual, HideBySig
    UnBind(HeightField): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.CausticMergeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.CausticMergeType Modulate = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.CausticMergeType Additive = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.CausticMergeType Substractive = 2 : Public, Static, Literal, HasDefault
Class Igneel.RenderTexture2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(Int32, Int32, Igneel.Graphics.Format, Igneel.Graphics.Format, Igneel.Graphics.Multisampling): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.Texture2D Texture 'get ' : 
    Igneel.Graphics.RenderTarget Target 'get ' : 
    Igneel.Graphics.DepthStencil DephtBuffer 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Igneel.Graphics.Format TargetFormat 'get ' : 
    Igneel.Graphics.Format DepthFormat 'get ' : 
  Methods:
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    get_DephtBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_DepthFormat(): PrivateScope, Public, HideBySig, SpecialName
    SetTarget(Int32(Optional, HasDefault), GraphicDevice(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTexture(Int32(Optional, HasDefault), GraphicDevice(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Igneel.RenderTextureCube: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(Int32, Igneel.Graphics.Format, Igneel.Graphics.Format, Igneel.Graphics.Multisampling): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.TextureCube Texture 'get ' : 
    Igneel.Graphics.RenderTarget[] Target 'get ' : 
    Igneel.Graphics.DepthStencil DephtBuffer 'get ' : 
    Int32 EdgeSize 'get ' : 
    Igneel.Graphics.Format TargetFormat 'get ' : 
    Igneel.Graphics.Format DepthFormat 'get ' : 
  Methods:
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    get_DephtBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_EdgeSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_DepthFormat(): PrivateScope, Public, HideBySig, SpecialName
    SetTarget(Int32, Int32(Optional, HasDefault), GraphicDevice(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTexture(Int32(Optional, HasDefault), GraphicDevice(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct Igneel.Graphics.LayerSurface: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 Diffuse : Public
    Igneel.Vector3 Specular : Public
    Igneel.Vector3 Emisive : Public
    Single Alpha : Public
    Single Reflectivity : Public
    Single Refractitity : Public
    Single SpecularPower : Public
  Properties:
    Igneel.Graphics.LayerSurface Default 'get ' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Igneel.Graphics.ShaderLight: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 Pos : Public
    Igneel.Vector3 Dir : Public
    Igneel.Vector3 Diffuse : Public
    Igneel.Vector3 Specular : Public
    Igneel.Vector3 Att : Public
    Single SpotPower : Public
    Single Range : Public
    Int32 Type : Public
    Single Intensity : Public
Struct Igneel.Graphics.ShaderDirectionalLight: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 Dir : Public
    Igneel.Vector3 Diffuse : Public
    Igneel.Vector3 Specular : Public
Struct Igneel.Graphics.ShaderPointLight: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 Pos : Public
    Igneel.Vector3 Diffuse : Public
    Igneel.Vector3 Specular : Public
    Igneel.Vector3 Attenuation : Public
    Single Range : Public
Class Igneel.Graphics.Shaders.EffectAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String EffectName 'get set' : 
  Methods:
    get_EffectName(): PrivateScope, Public, HideBySig, SpecialName
    set_EffectName(String): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.Shaders.PassRenderAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Type 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.Effect: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String RootDir : Public, Static
  Properties:
    Igneel.Graphics.Effect Current 'get ' : 
    Int32 Technique 'get set' : 
    System.String TechniqueName 'get set' : 
    System.Collections.Generic.IReadOnlyDictionary`2[System.String,System.Int32] Techniques 'get ' : 
    System.Object Constants 'get ' : 
  Events:
    System.Action`2[Igneel.Graphics.Effect,Igneel.Graphics.ShaderProgram] PipelineActivated: 
    System.Action Deativated: 
  Methods:
    add_PipelineActivated(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_PipelineActivated(Action`2): PrivateScope, Public, HideBySig, SpecialName
    add_Deativated(Action): PrivateScope, Public, HideBySig, SpecialName
    remove_Deativated(Action): PrivateScope, Public, HideBySig, SpecialName
    get_Current(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Technique(): PrivateScope, Public, HideBySig, SpecialName
    set_Technique(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TechniqueName(): PrivateScope, Public, HideBySig, SpecialName
    set_TechniqueName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Techniques(): PrivateScope, Public, HideBySig, SpecialName
    get_Constants(): PrivateScope, Public, HideBySig, SpecialName
    GetInputLayout(Int32, Int32): PrivateScope, Public, HideBySig
    GetInputLayout(Int32): PrivateScope, Public, HideBySig
    Passes(String): PrivateScope, Public, HideBySig
    Passes(Int32): PrivateScope, Public, HideBySig
    Passes(): PrivateScope, Public, HideBySig
    Apply(EffectPass): PrivateScope, Public, HideBySig
    Apply(Int32): PrivateScope, Public, HideBySig
    ApplyPasses(Action`2, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    EndPasses(): PrivateScope, Public, HideBySig
    Map(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ClearCurrent(): PrivateScope, Public, Static, HideBySig
    GetEffect(): PrivateScope, Public, Static, HideBySig
Class Igneel.Graphics.Shaders.PhongEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.PhongEffect+Binding: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Igneel.Graphics.RenderBinding`1[Igneel.Graphics.Effect]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(Effect): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.Shaders.SkinnedPhong: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.IdBasicMeshEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.IdSkinnMeshEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.ShadowMapBuild: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.SkinnedBuildShadowMap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.ModelShadowMap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.SkinnedModelShadowMap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.Mesh_SimpleColored: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.SkyBoxEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.BillboardEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.RenderShadowFactorEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.SoftModelShadowMap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.HeightFieldShader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.HDRRenderShader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DownSampler4x4 = 0 : Public, Static, Literal, HasDefault
    Int32 SampleAvgLum = 1 : Public, Static, Literal, HasDefault
    Int32 ResampleAvgLum = 2 : Public, Static, Literal, HasDefault
    Int32 ResampleAvgLumExp = 3 : Public, Static, Literal, HasDefault
    Int32 CalculateAdaptedLum = 4 : Public, Static, Literal, HasDefault
    Int32 BrightPassFilter = 5 : Public, Static, Literal, HasDefault
    Int32 GaussBlur5x5 = 6 : Public, Static, Literal, HasDefault
    Int32 DownSampler2x2 = 7 : Public, Static, Literal, HasDefault
    Int32 Bloom = 8 : Public, Static, Literal, HasDefault
    Int32 FinalScenePass = 9 : Public, Static, Literal, HasDefault
    Int32 Star = 10 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.Shaders.BlurTextureShader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.Untransformed: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.DeferredMRT: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.DeferredFinal: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.ParticleSystemEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.Shaders.CheckTransparenceEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Effect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Igneel.Graphics.STARLINE: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Passes : Public
    Single SampleLength : Public
    Single Attenuation : Public
    Single Inclination : Public
Struct Igneel.Graphics.StarLibType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.StarLibType DISABLE = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StarLibType CROSS = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StarLibType CROSSFILTER = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StarLibType SNOWCROSS = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StarLibType VERTICAL = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StarLibType SUNNYCROSS = 5 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.StarDefinition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    System.String Name 'get ' : 
    Igneel.Graphics.STARLINE[] Lines 'get ' : 
    Single Inclination 'get set' : 
    Boolean Rotation 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Lines(): PrivateScope, Public, HideBySig, SpecialName
    get_Inclination(): PrivateScope, Public, HideBySig, SpecialName
    set_Inclination(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetLib(StarLibType): PrivateScope, Public, Static, HideBySig
    GetChromaticAberrationColor(Int32): PrivateScope, Public, Static, HideBySig
Struct Igneel.Graphics.GlareLibType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.GlareLibType DISABLE = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType CAMERA = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType NATURAL = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType CHEAPLENS = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType FILTER_CROSSSCREEN = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType FILTER_CROSSSCREEN_SPECTRAL = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType FILTER_SNOWCROSS = 6 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType FILTER_SNOWCROSS_SPECTRAL = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType FILTER_SUNNYCROSS = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType FILTER_SUNNYCROSS_SPECTRAL = 9 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType CINECAM_VERTICALSLITS = 10 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType CINECAM_HORIZONTALSLITS = 11 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType USERDEF = -1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GlareLibType DEFAULT = 4 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.GlareDefinition: AutoLayout, AnsiClass, Class, Public
  Properties:
    System.String Name 'get ' : 
    Igneel.Graphics.StarDefinition StarDefinition 'get ' : 
    Single GlareLuminance 'get set' : 
    Single BloomLuminance 'get set' : 
    Single GhostLuminance 'get set' : 
    Single GhostDistortion 'get set' : 
    Single StarLuminance 'get set' : 
    Single StarInclination 'get set' : 
    Single ChromaticAberration 'get set' : 
    Single AfterimageSensitivity 'get set' : 
    Single AfterimageRatio 'get set' : 
    Single AfterimageLuminance 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_StarDefinition(): PrivateScope, Public, HideBySig, SpecialName
    get_GlareLuminance(): PrivateScope, Public, HideBySig, SpecialName
    set_GlareLuminance(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BloomLuminance(): PrivateScope, Public, HideBySig, SpecialName
    set_BloomLuminance(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GhostLuminance(): PrivateScope, Public, HideBySig, SpecialName
    set_GhostLuminance(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GhostDistortion(): PrivateScope, Public, HideBySig, SpecialName
    set_GhostDistortion(Single): PrivateScope, Public, HideBySig, SpecialName
    get_StarLuminance(): PrivateScope, Public, HideBySig, SpecialName
    set_StarLuminance(Single): PrivateScope, Public, HideBySig, SpecialName
    get_StarInclination(): PrivateScope, Public, HideBySig, SpecialName
    set_StarInclination(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ChromaticAberration(): PrivateScope, Public, HideBySig, SpecialName
    set_ChromaticAberration(Single): PrivateScope, Public, HideBySig, SpecialName
    get_AfterimageSensitivity(): PrivateScope, Public, HideBySig, SpecialName
    set_AfterimageSensitivity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_AfterimageRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_AfterimageRatio(Single): PrivateScope, Public, HideBySig, SpecialName
    get_AfterimageLuminance(): PrivateScope, Public, HideBySig, SpecialName
    set_AfterimageLuminance(Single): PrivateScope, Public, HideBySig, SpecialName
    InitializeStaticGlareLibs(): PrivateScope, Public, Static, HideBySig
    GetLib(GlareLibType): PrivateScope, Public, Static, HideBySig
Class Igneel.Graphics.Technique: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IEnabletable
  Properties:
    Boolean Enable 'get set' : 
  Methods:
    get_Enable(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Enable(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Apply(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Require(): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Static, HideBySig
    Bind(Render): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnBind(Render): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Graphics.Technique`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, Igneel.Graphics.Effect,  DefaultConstructor
  :Igneel.Graphics.Technique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.Effect Effect 'get ' : 
  Methods:
    get_Effect(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.HDRTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Technique`1[Igneel.Graphics.Shaders.HDRRenderShader]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.HDRState State 'get ' : 
    Igneel.Graphics.Format HRDFormat 'get ' : 
    Igneel.Graphics.Format LuminanceFormat 'get ' : 
    Igneel.RenderTexture2D HDRScene 'get ' : 
    Igneel.RenderTexture2D BrightPassFilter 'get ' : 
    Igneel.RenderTexture2D AvgLuminance 'get ' : 
    Igneel.RenderTexture2D[] ToneMaps 'get ' : 
    Igneel.RenderTexture2D[] Bloom 'get ' : 
    Igneel.RenderTexture2D ScaledHDRScene 'get ' : 
    Igneel.RenderTexture2D BloomSource 'get ' : 
    Igneel.RenderTexture2D CurrentAdaptedLuminance 'get ' : 
    Igneel.RenderTexture2D StarSource 'get ' : 
    Igneel.RenderTexture2D[] StarLines 'get ' : 
    Igneel.RenderTexture2D[] StarPasses 'get ' : 
    Igneel.RenderTexture2D StarFinal 'get ' : 
  Methods:
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_HRDFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_LuminanceFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_HDRScene(): PrivateScope, Public, HideBySig, SpecialName
    get_BrightPassFilter(): PrivateScope, Public, HideBySig, SpecialName
    get_AvgLuminance(): PrivateScope, Public, HideBySig, SpecialName
    get_ToneMaps(): PrivateScope, Public, HideBySig, SpecialName
    get_Bloom(): PrivateScope, Public, HideBySig, SpecialName
    get_ScaledHDRScene(): PrivateScope, Public, HideBySig, SpecialName
    get_BloomSource(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentAdaptedLuminance(): PrivateScope, Public, HideBySig, SpecialName
    get_StarSource(): PrivateScope, Public, HideBySig, SpecialName
    get_StarLines(): PrivateScope, Public, HideBySig, SpecialName
    get_StarPasses(): PrivateScope, Public, HideBySig, SpecialName
    get_StarFinal(): PrivateScope, Public, HideBySig, SpecialName
    Apply(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.HitTestTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Technique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Igneel.Graphics.Format): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean SelectMultiple 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Igneel.Rectangle Rectangle 'get set' : 
    Igneel.Graphics.RenderTarget HitTestSurface 'get ' : 
  Methods:
    get_SelectMultiple(): PrivateScope, Public, HideBySig, SpecialName
    set_SelectMultiple(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Rectangle(): PrivateScope, Public, HideBySig, SpecialName
    set_Rectangle(Rectangle): PrivateScope, Public, HideBySig, SpecialName
    get_HitTestSurface(): PrivateScope, Public, HideBySig, SpecialName
    Resize(Int32, Int32): PrivateScope, Public, HideBySig
    Apply(): PrivateScope, Public, Virtual, HideBySig
    Apply(Action): PrivateScope, Public, HideBySig
    Initialize(): PrivateScope, Public, HideBySig
Interface Igneel.IAffectable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Matrix BindAffectorPose 'get set' : 
    Igneel.IAffector Affector 'get set' : 
  Methods:
    get_BindAffectorPose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_BindAffectorPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Affector(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Affector(IAffector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    UpdatePose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Graphics.NodeTechnique: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.Technique
  Interfaces:
    Igneel.Assets.IAssetProvider
    Igneel.INodeComponent
    Igneel.IAffectable
  Properties:
    Igneel.Scene Scene 'get ' : 
    Int32 NbEntries 'get set' : 
    Igneel.Matrix BindAffectorPose 'get set' : 
    Igneel.IAffector Affector 'get set' : 
    System.Collections.Generic.ICollection`1[Igneel.SceneNode] Nodes 'get ' : 
  Methods:
    get_Scene(): PrivateScope, Public, HideBySig, SpecialName
    get_NbEntries(): PrivateScope, Public, HideBySig, SpecialName
    set_NbEntries(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BindAffectorPose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BindAffectorPose(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Affector(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Affector(IAffector): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Nodes(): PrivateScope, Public, HideBySig, SpecialName
    OnNodeAttach(SceneNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnNodeDetach(SceneNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnPoseUpdated(SceneNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UpdatePose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsVisible(Camera): PrivateScope, Public, HideBySig
Class Igneel.Graphics.CubeMapTechique: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.NodeTechnique
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Igneel.Vector3, Int32, Single, Single, Igneel.Graphics.Format): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IDeferreable
  Properties:
    Igneel.Graphics.TextureCube Texture 'get ' : 
    Igneel.Vector3 PositionOffset 'get set' : 
    Int32 Size 'get set' : 
    Single NearClipPlane 'get set' : 
    Single FarClipPlane 'get set' : 
    Boolean IsDynamic 'get set' : 
    Igneel.Graphics.Format Format 'get set' : 
    Igneel.Camera[] Cameras 'get ' : 
  Methods:
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    get_PositionOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_PositionOffset(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NearClipPlane(): PrivateScope, Public, HideBySig, SpecialName
    set_NearClipPlane(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FarClipPlane(): PrivateScope, Public, HideBySig, SpecialName
    set_FarClipPlane(Single): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(Format): PrivateScope, Public, HideBySig, SpecialName
    get_Cameras(): PrivateScope, Public, HideBySig, SpecialName
    UpdatePose(Matrix): PrivateScope, Public, Virtual, HideBySig
    Initialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Apply(): PrivateScope, Public, Virtual, HideBySig
    UpdateCameras(Vector3, Single, Single): PrivateScope, Public, HideBySig
    CommitChanges(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Graphics.EnvironmentMapTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.CubeMapTechique
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Int32, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Igneel.Vector3, Int32, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
    Apply(): PrivateScope, Public, Virtual, HideBySig
    Bind(Render): PrivateScope, Public, Virtual, HideBySig
    UnBind(Render): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.BindedSceneNodeTechnique`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, Igneel.Graphics.NodeTechnique
  :Igneel.Graphics.NodeTechnique
  Methods:
    Bind(Render): PrivateScope, Public, Virtual, HideBySig
    UnBind(Render): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.ReflectiveNodeTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.BindedSceneNodeTechnique`1[Igneel.Graphics.ReflectiveNodeTechnique]
    Void .ctor(Igneel.Scene, Int32, Int32, Igneel.Plane, Igneel.Graphics.Format): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IDeferreable
  Properties:
    Boolean UseReflection 'get set' : 
    Boolean UseRefraction 'get set' : 
    Igneel.Plane ReflectionPlane 'get set' : 
    Igneel.Size Size 'get set' : 
    Igneel.Graphics.Format RTFormat 'get set' : 
    Igneel.Matrix ReflTransform 'get ' : 
    Igneel.Graphics.Texture ReflectionTexture 'get ' : 
    Igneel.Graphics.Texture RefractionTexture 'get ' : 
  Methods:
    get_UseReflection(): PrivateScope, Public, HideBySig, SpecialName
    set_UseReflection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseRefraction(): PrivateScope, Public, HideBySig, SpecialName
    set_UseRefraction(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReflectionPlane(): PrivateScope, Public, HideBySig, SpecialName
    set_ReflectionPlane(Plane): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, HideBySig, SpecialName
    get_RTFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_RTFormat(Format): PrivateScope, Public, HideBySig, SpecialName
    get_ReflTransform(): PrivateScope, Public, HideBySig, SpecialName
    get_ReflectionTexture(): PrivateScope, Public, HideBySig, SpecialName
    get_RefractionTexture(): PrivateScope, Public, HideBySig, SpecialName
    Apply(): PrivateScope, Public, Virtual, HideBySig
    CommitChanges(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Graphics.SceneTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Technique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Apply(): PrivateScope, Public, Virtual, HideBySig
    RenderScene(Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RenderEntries(List`1, PixelClipping): PrivateScope, Public, Static, HideBySig
    RenderSceneRenderList(Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RenderSceneRenderList(List`1, Boolean(Optional, HasDefault), PixelClipping(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SetupTranspacencyBlending(): PrivateScope, Public, Static, HideBySig
    SetupAdditiveBlending(): PrivateScope, Public, Static, HideBySig
Class Igneel.Graphics.BindableSceneTechnique`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :Igneel.Graphics.SceneTechnique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Bind(Render): PrivateScope, Public, Virtual, HideBySig
    UnBind(Render): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.ClipPlaneSceneTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.BindableSceneTechnique`1[Igneel.Graphics.ClipPlaneSceneTechnique]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Matrix ReflectionMatrix : Public
    Igneel.Plane Plane : Public
Struct Igneel.Graphics.ShadowMapType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.ShadowMapType Simple = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShadowMapType Cube = 1 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.ShadowMapTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.BindedSceneNodeTechnique`1[Igneel.Graphics.ShadowMapTechnique]
    Void .ctor(Igneel.Scene, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IDeferreable
  Properties:
    Single Bias 'get set' : 
    Igneel.Camera Camera 'get set' : 
    Igneel.Graphics.Texture DepthTexture 'get ' : 
    Boolean IsDynamic 'get set' : 
    Int32 Size 'get set' : 
    Igneel.Vector2[] TexCoordOffset 'get ' : 
    Single[] TexCoordWeights 'get ' : 
  Methods:
    Initialize(): PrivateScope, Public, HideBySig
    get_Bias(): PrivateScope, Public, HideBySig, SpecialName
    set_Bias(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Camera(): PrivateScope, Public, HideBySig, SpecialName
    set_Camera(Camera): PrivateScope, Public, HideBySig, SpecialName
    get_DepthTexture(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TexCoordOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_TexCoordWeights(): PrivateScope, Public, HideBySig, SpecialName
    Apply(): PrivateScope, Public, Virtual, HideBySig
    CommitChanges(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UpdatePose(Matrix): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.StaticShadowMapTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ShadowMapTechnique
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.INameable
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Bind(Render): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.PhysicDisplayTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.Technique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Apply(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.IDPhysicRenderTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.PhysicDisplayTechnique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.SceneShadowMapping: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.SceneTechnique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.RenderShadowFactorTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.SceneTechnique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Apply(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.DepthSceneRender: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.SceneTechnique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Apply(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.Sprite: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.RectangleF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.RectangleF QuadCoords 'get set' : 
  Methods:
    get_QuadCoords(): PrivateScope, Public, HideBySig, SpecialName
    set_QuadCoords(RectangleF): PrivateScope, Public, HideBySig, SpecialName
    SetTextureCoord(Vector2, Vector2): PrivateScope, Public, HideBySig
    Begin(): PrivateScope, Public, HideBySig
    DrawQuad(Effect(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DrawQuad(Int32, Int32, Effect(Optional, HasDefault)): PrivateScope, Public, HideBySig
    End(): PrivateScope, Public, HideBySig
Class Igneel.Graphics.BindableTechnique`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T
  :Igneel.Graphics.Technique
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T Binding  'get set' : 
  Methods:
    get_Binding(): PrivateScope, Public, HideBySig, SpecialName
    set_Binding(T): PrivateScope, Public, HideBySig, SpecialName
    Bind(Render): PrivateScope, Public, Virtual, HideBySig
    UnBind(Render): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.EffectPass: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Igneel.Graphics.ShaderProgram): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.RasterizerState RState 'get set' : 
    Igneel.Graphics.BlendState BlendState 'get set' : 
    Igneel.Graphics.DepthStencilState ZBufferState 'get set' : 
    Igneel.Graphics.ShaderProgram Program 'get ' : 
  Events:
    System.Action`2[System.Int32,System.Int32] Applied: 
    System.Action`2[System.Int32,System.Int32] Clearded: 
  Methods:
    add_Applied(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_Applied(Action`2): PrivateScope, Public, HideBySig, SpecialName
    add_Clearded(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_Clearded(Action`2): PrivateScope, Public, HideBySig, SpecialName
    get_RState(): PrivateScope, Public, HideBySig, SpecialName
    set_RState(RasterizerState): PrivateScope, Public, HideBySig, SpecialName
    get_BlendState(): PrivateScope, Public, HideBySig, SpecialName
    set_BlendState(BlendState): PrivateScope, Public, HideBySig, SpecialName
    get_ZBufferState(): PrivateScope, Public, HideBySig, SpecialName
    set_ZBufferState(DepthStencilState): PrivateScope, Public, HideBySig, SpecialName
    get_Program(): PrivateScope, Public, HideBySig, SpecialName
    Apply(Int32, GraphicDevice): PrivateScope, Public, HideBySig
    Clear(Effect, GraphicDevice): PrivateScope, Public, HideBySig
Class Igneel.Graphics.TechniqueDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Graphics.EffectPass[] Passes : Public
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.EffectPassDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.ShaderProgramDesc Program 'get set' : 
    Igneel.Graphics.RasterizerState RState 'get set' : 
    Igneel.Graphics.BlendState BlendState 'get set' : 
    Igneel.Graphics.DepthStencilState ZBufferState 'get set' : 
  Methods:
    get_Program(): PrivateScope, Public, HideBySig, SpecialName
    set_Program(ShaderProgramDesc): PrivateScope, Public, HideBySig, SpecialName
    get_RState(): PrivateScope, Public, HideBySig, SpecialName
    set_RState(RasterizerState): PrivateScope, Public, HideBySig, SpecialName
    get_BlendState(): PrivateScope, Public, HideBySig, SpecialName
    set_BlendState(BlendState): PrivateScope, Public, HideBySig, SpecialName
    get_ZBufferState(): PrivateScope, Public, HideBySig, SpecialName
    set_ZBufferState(DepthStencilState): PrivateScope, Public, HideBySig, SpecialName
Struct Igneel.Graphics.RegisterSet: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.RegisterSet BOOL = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RegisterSet INT4 = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RegisterSet FLOAT4 = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RegisterSet SAMPLER = 3 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.ParameterClass: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.ParameterClass SCALAR = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterClass VECTOR = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterClass MATRIX = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterClass OBJECT = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterClass STRUCT = 4 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.ParameterType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.ParameterType VOID = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType BOOL = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType INT = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType FLOAT = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType STRING = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType TEXTURE = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType TEXTURE1D = 6 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType TEXTURE2D = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType TEXTURE3D = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType TEXTURECUBE = 9 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType SAMPLER = 10 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType SAMPLER1D = 11 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType SAMPLER2D = 12 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType SAMPLER3D = 13 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType SAMPLERCUBE = 14 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType PIXELSHADER = 15 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType VERTEXSHADER = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType PIXELFRAGMENT = 17 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType VERTEXFRAGMENT = 18 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ParameterType UNSUPPORTED = 19 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.UniformDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Index : Public
    System.String Name : Public
    Igneel.Graphics.RegisterSet Register : Public
    Igneel.Graphics.ParameterClass Class : Public
    Igneel.Graphics.ParameterType Type : Public
    Int32 Elements : Public
    Int32 Columns : Public
    Int32 Rows : Public
    Int32 Bytes : Public
    Igneel.Graphics.UniformDesc[] Members : Public
Interface Igneel.Graphics.IShaderManager`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Methods:
    CreateShader(DataBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetShader(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHandler(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Graphics.ShaderHandler: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Igneel.Graphics.Shader Function : Public
  Methods:
    Set(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    op_Implicit(ShaderHandler): PrivateScope, Public, Static, HideBySig, SpecialName
Class Igneel.Graphics.ShaderProgram: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.InputLayout InputDefinition 'get set' : 
  Methods:
    get_InputDefinition(): PrivateScope, Public, HideBySig, SpecialName
    set_InputDefinition(InputLayout): PrivateScope, Public, HideBySig, SpecialName
    SupportShader(): PrivateScope, Public, Static, HideBySig
    CreateShader(DataBuffer): PrivateScope, Public, Static, HideBySig
    CreateShader(String, ShaderMacro[], Include, String, String, ShaderFlags): PrivateScope, Public, Static, HideBySig
    GetShaders(): PrivateScope, Public, HideBySig
    CreateUniformSetter(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUniformDescriptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUniformDescription(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Graphics.ShaderProgramDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.InputLayout Input 'get set' : 
  Methods:
    SetShader(T): PrivateScope, Public, HideBySig
    get_Input(): PrivateScope, Public, HideBySig, SpecialName
    set_Input(InputLayout): PrivateScope, Public, HideBySig, SpecialName
    GetShader(): PrivateScope, Public, HideBySig
    GetHandles(): PrivateScope, Public, HideBySig
Class Igneel.Importers.ImportFormatAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FileExtension 'get set' : 
  Methods:
    get_FileExtension(): PrivateScope, Public, HideBySig, SpecialName
    set_FileExtension(String): PrivateScope, Public, HideBySig, SpecialName
Interface Igneel.Importers.IAnimationImporter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ImportAnimation(Scene, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportAnimation(Scene, String, SceneNode, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Importers.ContentImporter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Igneel.IResourceAllocator
    System.IDisposable
  Properties:
    System.String FileName 'get set' : 
    Boolean Disposed 'get ' : 
  Events:
    System.EventHandler`1[Igneel.Importers.ContentImporter+ImportEventArg] Load: 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    add_Load(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Load(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    LoadFile(Scene, String): PrivateScope, Public, HideBySig
    get_Disposed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RegisterImporter(String, Type): PrivateScope, Public, Static, HideBySig
    RemoveImporter(String): PrivateScope, Public, Static, HideBySig
    InitializeDefaultLoaders(): PrivateScope, Public, Static, HideBySig
    GetImporter(String): PrivateScope, Public, Static, HideBySig
    Import(Scene, String): PrivateScope, Public, Static, HideBySig
    ImportAnimation(Scene, String): PrivateScope, Public, Static, HideBySig
    ImportAnimation(Scene, String, SceneNode, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class Igneel.Importers.ContentImporter+ImportEventArg: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :System.EventArgs
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Cancel 'get set' : 
    Igneel.Assets.ContentPackage ImportData 'get set' : 
  Methods:
    get_Cancel(): PrivateScope, Public, HideBySig, SpecialName
    set_Cancel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ImportData(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Importers.Collada.ColladaImporter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Importers.ContentImporter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Importers.IAnimationImporter
  Methods:
    InitializeImporting(String): PrivateScope, Public, HideBySig
    ImportAnimation(Scene, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ImportAnimation(Scene, String, SceneNode, String(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MapTreeStructure(SceneNode, SceneNode, Dictionary`2): PrivateScope, Public, HideBySig
    Equals(Single[], Single[]): PrivateScope, Public, Static, HideBySig
    GetTexture(String, String): PrivateScope, Public, HideBySig
    SetMaps(MeshMaterial): PrivateScope, Public, HideBySig
Struct Igneel.Importers.Collada.ParameterType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Importers.Collada.ParameterType Float1 = 0 : Public, Static, Literal, HasDefault
    Igneel.Importers.Collada.ParameterType Float2 = 1 : Public, Static, Literal, HasDefault
    Igneel.Importers.Collada.ParameterType Float3 = 2 : Public, Static, Literal, HasDefault
    Igneel.Importers.Collada.ParameterType Float4 = 3 : Public, Static, Literal, HasDefault
    Igneel.Importers.Collada.ParameterType Surface = 4 : Public, Static, Literal, HasDefault
    Igneel.Importers.Collada.ParameterType Sampler2D = 5 : Public, Static, Literal, HasDefault
    Igneel.Importers.Collada.ParameterType SamplerCUBE = 6 : Public, Static, Literal, HasDefault
Class Igneel.Input.AxisAction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Igneel.Input.JoystickAxis: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Input.JoystickAxis X = 0 : Public, Static, Literal, HasDefault
    Igneel.Input.JoystickAxis Y = 1 : Public, Static, Literal, HasDefault
    Igneel.Input.JoystickAxis Z = 2 : Public, Static, Literal, HasDefault
    Igneel.Input.JoystickAxis RZ = 4 : Public, Static, Literal, HasDefault
Struct Igneel.Input.MouseAxis: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Input.MouseAxis X = 0 : Public, Static, Literal, HasDefault
    Igneel.Input.MouseAxis Y = 1 : Public, Static, Literal, HasDefault
    Igneel.Input.MouseAxis Wheel = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Input.MouseButton: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Input.MouseButton None = -1 : Public, Static, Literal, HasDefault
    Igneel.Input.MouseButton Left = 0 : Public, Static, Literal, HasDefault
    Igneel.Input.MouseButton Right = 1 : Public, Static, Literal, HasDefault
    Igneel.Input.MouseButton Middle = 2 : Public, Static, Literal, HasDefault
Interface Igneel.Input.IPoollableInput: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Pool(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Input.InputManager: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    MapKeyboardAction(Keys, Action, Boolean): PrivateScope, Public, HideBySig
    MapMouseButtonAction(MouseButton, Action, Boolean): PrivateScope, Public, HideBySig
    MapJoystickButtonAction(Int32, Int32, Action, Boolean): PrivateScope, Public, HideBySig
    MapMouseAxisAction(MouseAxis, AxisAction): PrivateScope, Public, HideBySig
    MapJoystickAxisAction(Int32, JoystickAxis, AxisAction): PrivateScope, Public, HideBySig
    UnMapKeyboardAction(Keys): PrivateScope, Public, HideBySig
    UnMapMouseButtonAction(MouseButton): PrivateScope, Public, HideBySig
    UnMapJoystickButtonAction(Int32, Int32): PrivateScope, Public, HideBySig
    UnMapMouseAxisAction(MouseAxis): PrivateScope, Public, HideBySig
    UnMapJoystickAxisAction(Int32, JoystickAxis): PrivateScope, Public, HideBySig
    ClearActionMaps(): PrivateScope, Public, HideBySig
    CreateKeyBoard(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateMouse(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateJoysticks(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Input.Joystick: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.Input.IPoollableInput
  Methods:
    Pool(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Input.Keyboard: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.Input.IPoollableInput
  Methods:
    IsKeyPressed(Keys): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Pool(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Igneel.Input.Keys: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Input.Keys ESCAPE = 1 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D1 = 2 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D2 = 3 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D3 = 4 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D4 = 5 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D5 = 6 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D6 = 7 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D7 = 8 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D8 = 9 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D9 = 10 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D0 = 11 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys MINUS = 12 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys EQUALS = 13 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys BACK = 14 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys TAB = 15 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys Q = 16 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys W = 17 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys E = 18 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys R = 19 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys T = 20 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys Y = 21 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys U = 22 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys I = 23 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys O = 24 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys P = 25 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys LBRACKET = 26 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys RBRACKET = 27 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys RETURN = 28 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys LCONTROL = 29 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys A = 30 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys S = 31 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys D = 32 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F = 33 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys G = 34 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys H = 35 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys J = 36 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys K = 37 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys L = 38 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys SEMICOLON = 39 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys APOSTROPHE = 40 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys GRAVE = 41 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys LSHIFT = 42 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys BACKSLASH = 43 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys Z = 44 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys X = 45 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys C = 46 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys V = 47 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys B = 48 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys N = 49 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys M = 50 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys COMMA = 51 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys PERIOD = 52 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys SLASH = 53 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys RSHIFT = 54 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys MULTIPLY = 55 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys LMENU = 56 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys SPACE = 57 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys CAPITAL = 58 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F1 = 59 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F2 = 60 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F3 = 61 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F4 = 62 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F5 = 63 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F6 = 64 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F7 = 65 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F8 = 66 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F9 = 67 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F10 = 68 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMLOCK = 69 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys SCROLL = 70 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD7 = 71 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD8 = 72 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD9 = 73 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys SUBTRACT = 74 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD4 = 75 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD5 = 76 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD6 = 77 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys ADD = 78 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD1 = 79 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD2 = 80 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD3 = 81 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPAD0 = 82 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys DECIMAL = 83 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys OEM_102 = 86 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F11 = 87 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F12 = 88 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F13 = 100 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F14 = 101 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys F15 = 102 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys KANA = 112 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys ABNT_C1 = 115 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys CONVERT = 121 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NOCONVERT = 123 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys YEN = 125 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys ABNT_C2 = 126 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPADEQUALS = 141 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys PREVTRACK = 144 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys AT = 145 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys COLON = 146 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys UNDERLINE = 147 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys KANJI = 148 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys STOP = 149 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys AX = 150 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys UNLABELED = 151 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NEXTTRACK = 153 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPADENTER = 156 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys RCONTROL = 157 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys MUTE = 160 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys CALCULATOR = 161 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys PLAYPAUSE = 162 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys MEDIASTOP = 164 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys VOLUMEDOWN = 174 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys VOLUMEUP = 176 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys WEBHOME = 178 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPADCOMMA = 179 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys DIVIDE = 181 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys SYSRQ = 183 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys RMENU = 184 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys PAUSE = 197 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys HOME = 199 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys UP = 200 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys PRIOR = 201 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys LEFT = 203 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys RIGHT = 205 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys END = 207 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys DOWN = 208 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NEXT = 209 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys INSERT = 210 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys DELETE = 211 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys LWIN = 219 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys RWIN = 220 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys APPS = 221 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys POWER = 222 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys SLEEP = 223 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys WAKE = 227 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys WEBSEARCH = 229 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys WEBFAVORITES = 230 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys WEBREFRESH = 231 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys WEBSTOP = 232 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys WEBFORWARD = 233 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys WEBBACK = 234 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys MYCOMPUTER = 235 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys MAIL = 236 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys MEDIASELECT = 237 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys BACKSPACE = 14 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPADSTAR = 55 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys LALT = 56 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys CAPSLOCK = 58 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPADMINUS = 74 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPADPLUS = 78 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPADPERIOD = 83 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys NUMPADSLASH = 181 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys RALT = 184 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys UPARROW = 200 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys PGUP = 201 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys LEFTARROW = 203 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys RIGHTARROW = 205 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys DOWNARROW = 208 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys PGDN = 209 : Public, Static, Literal, HasDefault
    Igneel.Input.Keys CIRCUMFLEX = 144 : Public, Static, Literal, HasDefault
Class Igneel.Input.Mouse: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.Input.IPoollableInput
  Properties:
    Int32 X    'get ' : 
    Int32 Y    'get ' : 
    Int32 Z    'get ' : 
  Methods:
    get_X(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Y(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Z(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsButtonPresed(MouseButton): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Pool(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Igneel.FrustumPlane: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.FrustumPlane Front = 0 : Public, Static, Literal, HasDefault
    Igneel.FrustumPlane Back = 1 : Public, Static, Literal, HasDefault
    Igneel.FrustumPlane Left = 2 : Public, Static, Literal, HasDefault
    Igneel.FrustumPlane Right = 3 : Public, Static, Literal, HasDefault
    Igneel.FrustumPlane Top = 4 : Public, Static, Literal, HasDefault
    Igneel.FrustumPlane Bottom = 5 : Public, Static, Literal, HasDefault
Class Igneel.Frustum: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Plane Item [Igneel.FrustumPlane] 'get ' : 
    Igneel.Plane[] Planes 'get ' : 
    Igneel.Vector3[] Corners 'get ' : 
  Methods:
    get_Item(FrustumPlane): PrivateScope, Public, HideBySig, SpecialName
    get_Planes(): PrivateScope, Public, HideBySig, SpecialName
    get_Corners(): PrivateScope, Public, HideBySig, SpecialName
    IndexOfPlane(FrustumPlane): PrivateScope, Public, HideBySig
    Transform(Matrix): PrivateScope, Public, HideBySig
    CreatePlanes(Plane[], Vector3[]): PrivateScope, Public, Static, HideBySig
    GetContainment(Sphere): PrivateScope, Public, HideBySig
    GetContainment(Plane[], Sphere): PrivateScope, Public, Static, HideBySig
    Contains(Sphere): PrivateScope, Public, HideBySig
Struct Igneel.Matrix: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector4, Igneel.Vector4, Igneel.Vector4, Igneel.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Vector3, Igneel.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Matrix]
  Fields:
    Single M11 : Public
    Single M12 : Public
    Single M13 : Public
    Single M14 : Public
    Single M21 : Public
    Single M22 : Public
    Single M23 : Public
    Single M24 : Public
    Single M31 : Public
    Single M32 : Public
    Single M33 : Public
    Single M34 : Public
    Single M41 : Public
    Single M42 : Public
    Single M43 : Public
    Single M44 : Public
  Properties:
    Igneel.Matrix Identity 'get ' : 
    Igneel.Vector3 Translation 'get set' : 
    Igneel.Vector3 Right 'get set' : 
    Igneel.Vector3 Up 'get set' : 
    Igneel.Vector3 Front 'get set' : 
    Boolean IsAffine 'get ' : 
  Methods:
    RotationZ(Single): PrivateScope, Public, Static, HideBySig
    RotationAxis(Vector3, Single): PrivateScope, Public, Static, HideBySig
    RotationQuaternion(Quaternion): PrivateScope, Public, Static, HideBySig
    RotationQuaternion(Quaternion&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    RotationYawPitchRoll(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Scale(Vector3): PrivateScope, Public, Static, HideBySig
    Scale(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Translate(Vector3): PrivateScope, Public, Static, HideBySig
    Translate(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Pose(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Pose(Vector3&, Vector3&, Vector3&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Pose(Vector3, Matrix, Vector3): PrivateScope, Public, Static, HideBySig
    View(Vector3, Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    LookAt(Vector3, Vector3, Vector3, Vector3&(Out), Vector3&(Out), Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    LookAt(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    get_Identity(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Translation(): PrivateScope, Public, HideBySig, SpecialName
    set_Translation(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, HideBySig, SpecialName
    set_Up(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Front(): PrivateScope, Public, HideBySig, SpecialName
    set_Front(Vector3): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Matrix, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Matrix, Matrix): PrivateScope, Public, Static, HideBySig
    Add(Matrix&, Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Matrix, Matrix): PrivateScope, Public, Static, HideBySig
    Divide(Matrix, Single): PrivateScope, Public, Static, HideBySig
    Divide(Matrix&, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Matrix&, Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Matrix, Matrix): PrivateScope, Public, Static, HideBySig
    Multiply(Matrix, Single): PrivateScope, Public, Static, HideBySig
    Multiply(Matrix&, Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Matrix&, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Negate(Matrix): PrivateScope, Public, Static, HideBySig
    Negate(Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Subtract(Matrix, Matrix): PrivateScope, Public, Static, HideBySig
    Subtract(Matrix&, Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Determinant(): PrivateScope, Public, HideBySig
    Equals(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Adjoint(): PrivateScope, Public, HideBySig
    get_IsAffine(): PrivateScope, Public, HideBySig, SpecialName
    GetRotationXYZ(): PrivateScope, Public, HideBySig
    Invert(Matrix): PrivateScope, Public, Static, HideBySig
    Invert(Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Lerp(Matrix, Matrix, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Matrix&, Matrix&, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Matrix, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Matrix&, Quaternion&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Transpose(Matrix): PrivateScope, Public, Static, HideBySig
    Transpose(Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    GetRow(Int32): PrivateScope, Public, HideBySig
    SetRow(Int32, Vector4): PrivateScope, Public, HideBySig
    GetColumn(Int32): PrivateScope, Public, HideBySig
    SetColumn(Int32, Vector4): PrivateScope, Public, HideBySig
    GetAxis(Int32): PrivateScope, Public, HideBySig
    SetAxis(Int32, Vector3): PrivateScope, Public, HideBySig
    ColumnMajor(Vector4, Vector4, Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    RotationPivot(Vector3, Euler): PrivateScope, Public, Static, HideBySig
    ScalePivot(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    DecomposeAffineTranform(Matrix, Vector3&(Out), Euler&(Out), Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    DecomposeTranformationMatrix(Matrix, Vector3&(Out), Matrix&(Out), Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    TransformationMatrix(Vector3, Vector3, Euler, Vector3): PrivateScope, Public, Static, HideBySig
    ComputeEigenVectors(Matrix, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    CorrelationMatrix(Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CorrelationMatrix(Vector3[]): PrivateScope, Public, Static, HideBySig
    CorrelationMatrix(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    GetRotationXYZ(Matrix): PrivateScope, Public, Static, HideBySig
    RotateXYZ(Vector3): PrivateScope, Public, Static, HideBySig
    PerspectiveLH(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PerspectiveRH(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PerspectiveFovLH(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PerspectiveFovRH(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    OrthoLH(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    OrthoRH(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    OrthoOffCenterLH(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    OrthoOffCenterRH(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Reflection(Plane): PrivateScope, Public, Static, HideBySig
    Reflection(Plane&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    RotationX(Single): PrivateScope, Public, Static, HideBySig
    RotationY(Single): PrivateScope, Public, Static, HideBySig
Interface Igneel.IRotable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IDeferreable
  Properties:
    Igneel.Matrix LocalRotation 'get set' : 
  Methods:
    get_LocalRotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LocalRotation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.ITranslatable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IDeferreable
  Properties:
    Igneel.Vector3 LocalPosition 'get set' : 
  Methods:
    get_LocalPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LocalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.OrientedBox: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Matrix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Igneel.Matrix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte*, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.GraphicBufferView`1[Igneel.Vector3]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IRotable
    Igneel.IDeferreable
    Igneel.ITranslatable
  Properties:
    Igneel.Vector3 Extends 'get set' : 
    Igneel.Matrix LocalPose 'get set' : 
    Igneel.Matrix GlobalPose 'get set' : 
    Igneel.Matrix LocalRotation 'get set' : 
    Igneel.Vector3 LocalPosition 'get set' : 
    Igneel.Vector3 GlobalTraslation 'get ' : 
  Methods:
    get_Extends(): PrivateScope, Public, HideBySig, SpecialName
    set_Extends(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_LocalPose(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalPose(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalPose(): PrivateScope, Public, HideBySig, SpecialName
    set_GlobalPose(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_LocalRotation(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LocalRotation(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LocalPosition(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LocalPosition(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GlobalTraslation(): PrivateScope, Public, HideBySig, SpecialName
    GetOrientedBox(Byte*, Int32, Int32): PrivateScope, Public, HideBySig
    Update(Matrix): PrivateScope, Public, HideBySig
    Create(Vector3[]): PrivateScope, Public, Static, HideBySig
    Create(Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Create(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    CommitChanges(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
    ToBox(): PrivateScope, Public, HideBySig
    GetGeometry(): PrivateScope, Public, HideBySig
Struct Igneel.Plane: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Igneel.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Plane]
  Fields:
    Igneel.Vector3 Normal : Public
    Single D : Public
  Methods:
    Normalize(): PrivateScope, Public, HideBySig
    Equals(Plane): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Dot(Vector4): PrivateScope, Public, HideBySig
    Dot(Vector4&, Single&(Out)): PrivateScope, Public, HideBySig
    DotCoordinate(Vector3): PrivateScope, Public, HideBySig
    DotCoordinate(Vector3&, Single&(Out)): PrivateScope, Public, HideBySig
    DotNormal(Vector3): PrivateScope, Public, HideBySig
    DotNormal(Vector3&, Single&(Out)): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Plane, Plane): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Plane, Plane): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Plane): PrivateScope, Public, Static, HideBySig, SpecialName
    Dot(Plane, Vector4): PrivateScope, Public, Static, HideBySig
    DotCoordinate(Plane, Vector3): PrivateScope, Public, Static, HideBySig
    DotNormal(Plane, Vector3): PrivateScope, Public, Static, HideBySig
    Equals(Plane, Plane, Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Transform(Plane, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Plane, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Plane&, Matrix&, Plane&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Plane&, Quaternion&, Plane&(Out)): PrivateScope, Public, Static, HideBySig
    TransformInverse(Plane, Matrix): PrivateScope, Public, Static, HideBySig
    TransformInverse(Plane&, Matrix&, Plane&(Out)): PrivateScope, Public, Static, HideBySig
Struct Igneel.Quaternion: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Quaternion]
  Fields:
    Single X : Public
    Single Y : Public
    Single Z : Public
    Single W : Public
  Properties:
    Igneel.Quaternion Identity 'get ' : 
  Methods:
    get_Identity(): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Quaternion, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    Conjugate(): PrivateScope, Public, HideBySig
    Length(): PrivateScope, Public, HideBySig
    Invert(): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    RotationAxis(Vector3, Single): PrivateScope, Public, Static, HideBySig
    RotationAxis(Vector3&, Single, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Conjugate(Quaternion): PrivateScope, Public, Static, HideBySig
    Dot(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig
    Dot(Quaternion&, Quaternion&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Dot(Quaternion*, Quaternion*): PrivateScope, Public, Static, HideBySig
    Lenght(Quaternion): PrivateScope, Public, Static, HideBySig
    Lenght(Quaternion*): PrivateScope, Public, Static, HideBySig
    LenghtSquared(Quaternion): PrivateScope, Public, Static, HideBySig
    LenghtSquared(Quaternion*): PrivateScope, Public, Static, HideBySig
    Add(Quaternion*, Quaternion*, Quaternion*): PrivateScope, Public, Static, HideBySig
    Subtracts(Quaternion*, Quaternion*, Quaternion*): PrivateScope, Public, Static, HideBySig
    Div(Quaternion*, Quaternion*, Quaternion*): PrivateScope, Public, Static, HideBySig
    Normalize(Quaternion): PrivateScope, Public, Static, HideBySig
    Normalize(Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Normalize(Quaternion*, Quaternion*): PrivateScope, Public, Static, HideBySig
    Inverse(Quaternion): PrivateScope, Public, Static, HideBySig
    Inverse(Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Negate(Quaternion): PrivateScope, Public, Static, HideBySig
    Negate(Quaternion*, Quaternion*): PrivateScope, Public, Static, HideBySig
    RotationYawPitchRoll(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    RotationMatrix(Matrix): PrivateScope, Public, Static, HideBySig
    Slerp(Quaternion, Quaternion, Single): PrivateScope, Public, Static, HideBySig
    Slerp(Quaternion&, Quaternion&, Single, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Logarithm(Quaternion): PrivateScope, Public, Static, HideBySig
    Exponential(Quaternion): PrivateScope, Public, Static, HideBySig
    Pow(Quaternion, Single): PrivateScope, Public, Static, HideBySig
    Squad(Quaternion, Quaternion, Quaternion, Quaternion, Single): PrivateScope, Public, Static, HideBySig
    Equals(Quaternion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Vector2: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Vector2]
  Fields:
    Single X : Public
    Single Y : Public
    Igneel.Vector2 Zero : Public, Static, InitOnly
    Igneel.Vector2 UnitX : Public, Static, InitOnly
    Igneel.Vector2 UnitY : Public, Static, InitOnly
    Igneel.Vector2 One : Public, Static, InitOnly
  Methods:
    op_Explicit(Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Point): PrivateScope, Public, Static, HideBySig, SpecialName
    ToPoint(): PrivateScope, Public, HideBySig
    op_Addition(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector2, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector2, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Add(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Divide(Vector2, Single): PrivateScope, Public, Static, HideBySig
    Divide(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Multiply(Vector2, Single): PrivateScope, Public, Static, HideBySig
    Multiply(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Negate(Vector2): PrivateScope, Public, Static, HideBySig
    Negate(Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Subtract(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Subtract(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector2, Vector2, Vector2, Single, Single): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector2&, Vector2&, Vector2&, Single, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector2, Vector2, Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector2&, Vector2&, Vector2&, Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Hermite(Vector2, Vector2, Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Vector2&, Vector2&, Vector2&, Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Lerp(Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Vector2&, Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector2&, Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(Vector2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Length(): PrivateScope, Public, HideBySig
    LengthSquared(): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    IsZero(Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Distance(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Distance(Vector2&, Vector2&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector2&, Vector2&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Dot(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Dot(Vector2&, Vector2&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Max(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Max(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Min(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Min(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Normalize(Vector2): PrivateScope, Public, Static, HideBySig
    Normalize(Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Reflect(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Reflect(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector2, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector2, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector2&, Matrix&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector2[], Matrix&, Vector2[]): PrivateScope, Public, Static, HideBySig
    Transform(Vector2[], Quaternion&, Vector2[]): PrivateScope, Public, Static, HideBySig
    Transform(Vector2&, Quaternion&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector2[], Int32, Matrix&, Vector2[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector2[], Int32, Quaternion&, Vector2[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector2, Matrix): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector2&, Matrix&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector2[], Matrix&, Vector2[]): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector2[], Int32, Matrix&, Vector2[], Int32, Int32): PrivateScope, Public, Static, HideBySig
Struct Igneel.Vector3: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector2, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Vector3]
  Fields:
    Single X : Public
    Single Y : Public
    Single Z : Public
    Igneel.Vector3 Zero : Public, Static, InitOnly
    Igneel.Vector3 UnitX : Public, Static, InitOnly
    Igneel.Vector3 UnitY : Public, Static, InitOnly
    Igneel.Vector3 UnitZ : Public, Static, InitOnly
    Igneel.Vector3 One : Public, Static, InitOnly
  Methods:
    Lerp(Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Vector3&, Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector3&, Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector3, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector3, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector3[], Matrix&, Vector3[]): PrivateScope, Public, Static, HideBySig
    Transform(Vector3[], Quaternion&, Vector3[]): PrivateScope, Public, Static, HideBySig
    Transform(Vector3&, Matrix&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector3&, Quaternion&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector3[], Int32, Matrix&, Vector3[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector3[], Int32, Quaternion&, Vector3[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector3*, Matrix*, Int32, Vector3*): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector3, Matrix): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector3[], Matrix&, Vector3[]): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector3&, Matrix&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector3[], Int32, Matrix&, Vector3[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(IEnumerable`1, Matrix): PrivateScope, Public, Static, HideBySig
    TransformNormal(IEnumerable`1, Matrix): PrivateScope, Public, Static, HideBySig
    TransformCoordinates(Vector3, Matrix): PrivateScope, Public, Static, HideBySig
    TransformCoordinates(Vector3&, Matrix&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    TransformCoordinates(Vector3[], Matrix&, Vector3[]): PrivateScope, Public, Static, HideBySig
    CylindricalToCartesian(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CylindricalToCartesian(Vector3): PrivateScope, Public, Static, HideBySig
    SphericalToCartesian(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SphericalToCartesian(Vector3): PrivateScope, Public, Static, HideBySig
    CartesianToSpherical(Vector3): PrivateScope, Public, Static, HideBySig
    CartesianToCylindrical(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CartesianToCylindrical(Vector3): PrivateScope, Public, Static, HideBySig
    op_Explicit(Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector3, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector3, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    Length(): PrivateScope, Public, HideBySig
    LengthSquared(): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Equals(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    IsZero(Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToColor(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Cross(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Cross(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Cross(Vector3*, Vector3*, Vector3*): PrivateScope, Public, Static, HideBySig
    Dot(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Dot(Vector3&, Vector3&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Dot(Vector3*, Vector3*): PrivateScope, Public, Static, HideBySig
    Length(Vector3): PrivateScope, Public, Static, HideBySig
    Length(Vector3*): PrivateScope, Public, Static, HideBySig
    LengthSquared(Vector3): PrivateScope, Public, Static, HideBySig
    LengthSquared(Vector3*): PrivateScope, Public, Static, HideBySig
    Distance(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Distance(Vector3&, Vector3&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Distance(Vector3*, Vector3*): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector3&, Vector3&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector3*, Vector3*): PrivateScope, Public, Static, HideBySig
    Normalize(Vector3): PrivateScope, Public, Static, HideBySig
    Normalize(Vector3*, Vector3*): PrivateScope, Public, Static, HideBySig
    Normalize(Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Reflect(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Reflect(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Saturate(Vector3): PrivateScope, Public, Static, HideBySig
    Min(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Min(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Max(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Max(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(Vector3, Vector3, Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Clamp(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Clamp(Vector3&, Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Add(Vector3*, Vector3*, Vector3*): PrivateScope, Public, Static, HideBySig
    Subtracts(Vector3*, Vector3*, Vector3*): PrivateScope, Public, Static, HideBySig
    Mul(Vector3*, Vector3*, Vector3*): PrivateScope, Public, Static, HideBySig
    Div(Vector3*, Vector3*, Vector3*): PrivateScope, Public, Static, HideBySig
    Mul(Vector3*, Single, Vector3*): PrivateScope, Public, Static, HideBySig
    Multiply(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Multiply(Vector3, Single): PrivateScope, Public, Static, HideBySig
    Multiply(Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Negate(Vector3): PrivateScope, Public, Static, HideBySig
    Negate(Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Add(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Add(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Divide(Vector3, Single): PrivateScope, Public, Static, HideBySig
    Divide(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Subtract(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Subtract(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector3, Vector3, Vector3, Single, Single): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector3&, Vector3&, Vector3&, Single, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector3, Vector3, Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector3&, Vector3&, Vector3&, Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Hermite(Vector3, Vector3, Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Vector3&, Vector3&, Vector3&, Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
Struct Igneel.Vector4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector2, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Vector4]
  Fields:
    Single X : Public
    Single Y : Public
    Single Z : Public
    Single W : Public
    Igneel.Vector4 Zero : Public, Static, InitOnly
    Igneel.Vector4 One : Public, Static, InitOnly
  Methods:
    Transform(Vector4[], Matrix&, Vector4[]): PrivateScope, Public, Static, HideBySig
    Transform(Vector3&, Matrix&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector3&, Quaternion&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector4&, Matrix&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector4&, Quaternion&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector4[], Int32, Matrix&, Vector4[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector4[], Int32, Quaternion&, Vector4[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    op_Addition(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector4, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector4, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Add(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Divide(Vector4, Single): PrivateScope, Public, Static, HideBySig
    Divide(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Multiply(Vector4, Single): PrivateScope, Public, Static, HideBySig
    Multiply(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Negate(Vector4): PrivateScope, Public, Static, HideBySig
    Negate(Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Subtract(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Subtract(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(Vector4): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Length(): PrivateScope, Public, HideBySig
    LengthSquared(): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Barycentric(Vector4, Vector4, Vector4, Single, Single): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector4&, Vector4&, Vector4&, Single, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector4, Vector4, Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector4&, Vector4&, Vector4&, Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Hermite(Vector4, Vector4, Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Vector4&, Vector4&, Vector4&, Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Lerp(Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Vector4&, Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector4&, Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    IsZero(Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Equals(Vector4, Vector4, Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    op_Explicit(Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    ToArgb(): PrivateScope, Public, HideBySig
    FromArgb(Int32): PrivateScope, Public, Static, HideBySig
    ToColor(): PrivateScope, Public, HideBySig
    ToVector3(): PrivateScope, Public, HideBySig
    Clamp(Vector4, Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Clamp(Vector4&, Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Distance(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Distance(Vector4&, Vector4&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector4&, Vector4&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Dot(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Dot(Vector4&, Vector4&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Max(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Max(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Min(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Min(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Normalize(Vector4): PrivateScope, Public, Static, HideBySig
    Normalize(Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Saturate(Vector4): PrivateScope, Public, Static, HideBySig
    Transform(Vector2, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector2, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector3, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector3, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector4, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector4, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector4[], Quaternion&, Vector4[]): PrivateScope, Public, Static, HideBySig
    Transform(Vector2&, Matrix&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector2&, Quaternion&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
Interface Igneel.IPositionable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Vector3 GlobalPosition 'get ' : 
  Methods:
    get_GlobalPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.IPoseable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Matrix GlobalPose 'get ' : 
  Methods:
    get_GlobalPose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.IAffector: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IPoseable
  Properties:
    Boolean IsDynamic 'get ' : 
    Igneel.IAffectable Affectable 'get set' : 
  Methods:
    get_IsDynamic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Affectable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Affectable(IAffectable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Physics.Actor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.INameable
    Igneel.Assets.IAssetProvider
    Igneel.IPositionable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IAffector
    Igneel.IPoseable
    Igneel.IGraphicObject
    Igneel.IRenderable
  Properties:
    System.String Name 'get set' : 
    Igneel.Physics.PhysicScene Scene 'get set' : 
    Igneel.Collections.ReadOnlyDictionary`2[System.String,Igneel.Physics.ActorShape] Shapes 'get ' : 
    Igneel.Physics.ActorFlag Flags 'get set' : 
    Igneel.Physics.BodyActorFlags BodyFlags 'get set' : 
    Boolean IsDynamic 'get set' : 
    Igneel.IAffectable Affectable 'get set' : 
    Boolean IsTransparent 'get ' : 
    Boolean Visible 'get set' : 
    System.Object UserData 'get set' : 
    Single Mass 'get set' : 
    Igneel.Vector3 LinearVelocity 'get set' : 
    Single LinearDamping 'get set' : 
    Igneel.Vector3 AngularVelocity 'get set' : 
    Single AngularDamping 'get set' : 
    Single MaxAngularVelocity 'get set' : 
    Igneel.Vector3 GlobalPosition 'get set' : 
    Igneel.Matrix GlobalOrientation 'get set' : 
    Igneel.Quaternion GlobalOrientationQuat 'get set' : 
    Igneel.Matrix GlobalPose 'get ' : 
    Igneel.Matrix CMassGlobalPose 'get set' : 
    Igneel.Vector3 CMassGlobalPosition 'get set' : 
    Igneel.Matrix CMassGlobalOrientation 'get set' : 
    Igneel.Matrix CMassLocalPose 'get ' : 
    Igneel.Vector3 MassSpaceInertiaTensor 'get set' : 
    Boolean IsKinematic 'get set' : 
    Boolean IsSleeping 'get ' : 
    Single SleepEnergyThreshold 'get set' : 
    Single SleepAngularVelocity 'get set' : 
    Single SleepLinearVelocity 'get set' : 
    Boolean IsGroupSleeping 'get ' : 
    Int32 SolverIterationCount 'get set' : 
    UInt16 Group 'get set' : 
    UInt16 DominanceGroup 'get set' : 
    Single CCDMotionThreshold 'get set' : 
    Igneel.Vector3 LinearMomentum 'get set' : 
    Igneel.Vector3 AngularMomentum 'get set' : 
    Single ContactReportThreshold 'get set' : 
    Igneel.Physics.ContactPairFlag ContactReportFlags 'get set' : 
    Igneel.Graphics.RenderBinder RenderParam 'get set' : 
  Methods:
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_RenderParam(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RenderParam(RenderBinder): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRender(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Render(SceneNode, PixelClipping(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Render(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Scene(): PrivateScope, Public, HideBySig, SpecialName
    get_Shapes(): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(ActorFlag): PrivateScope, Public, HideBySig, SpecialName
    get_BodyFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_BodyFlags(BodyActorFlags): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Affectable(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Affectable(IAffectable): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTransparent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Visible(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Visible(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UserData(): PrivateScope, Public, HideBySig, SpecialName
    set_UserData(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Mass(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Mass(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinearVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LinearVelocity(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinearDamping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LinearDamping(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AngularVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AngularVelocity(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AngularDamping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AngularDamping(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MaxAngularVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MaxAngularVelocity(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalOrientation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalOrientationQuat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalOrientationQuat(Quaternion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalPose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CMassGlobalPose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CMassGlobalPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CMassGlobalPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CMassGlobalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CMassGlobalOrientation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CMassGlobalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CMassLocalPose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MassSpaceInertiaTensor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MassSpaceInertiaTensor(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsKinematic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IsKinematic(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsSleeping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SleepEnergyThreshold(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SleepEnergyThreshold(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SleepAngularVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SleepAngularVelocity(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SleepLinearVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SleepLinearVelocity(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsGroupSleeping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SolverIterationCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SolverIterationCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Group(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Group(UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DominanceGroup(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DominanceGroup(UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CCDMotionThreshold(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CCDMotionThreshold(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinearMomentum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LinearMomentum(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AngularMomentum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AngularMomentum(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ContactReportThreshold(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ContactReportThreshold(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ContactReportFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ContactReportFlags(ContactPairFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MoveGlobalPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MoveGlobalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MoveGlobalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MoveGlobalOrientationQuat(Quaternion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RaiseActorFlag(ActorFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadActorFlag(ActorFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearActorFlag(ActorFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RaiseBodyFlag(BodyActorFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearBodyFlag(BodyActorFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadBodyFlag(BodyActorFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddForceAtPos(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddForceAtLocalPos(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLocalForceAtPos(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLocalForceAtLocalPos(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddForce(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLocalForce(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddTorque(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLocalTorque(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ComputeKineticEnergy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPointVelocity(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLocalPointVelocity(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WakeUp(Single(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PutToSleep(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetUserActorPairFiltering(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetLocalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetLocalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetLocalPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetGlobalPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetGlobalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetGlobalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGlobalInertiaTensor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGlobalInertiaTensorInverse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UpdateMassFromShapes(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LinearSweep(Vector3, SweepFlags, Predicate`1(Optional, HasDefault), SweepCache(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LinearSweep(Vector3, SweepFlags, ICollection`1, SweepCache(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateShape(ActorShapeDesc): PrivateScope, Public, HideBySig
Class Igneel.Physics.ActorDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public
    Single Density : Public
    Igneel.Matrix GlobalPose : Public
    Igneel.Physics.ActorFlag Flags : Public
    UInt16 CollitionGroup : Public
    UInt16 DominanceGroup : Public
    Igneel.Physics.ContactPairFlag ContactReportFlags : Public
    UInt16 ForceFieldMaterial : Public
    System.Collections.Generic.List`1[Igneel.Physics.ActorShapeDesc] Shapes : Public
    Igneel.Physics.BodyDesc Body : Public
Class Igneel.Physics.BodyDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Matrix MassLocalPose : Public
    Igneel.Vector3 MassSpaceInertia : Public
    Single Mass : Public
    Igneel.Vector3 LinearVelocity : Public
    Igneel.Vector3 AngularVelocity : Public
    Single WakeUpCounter : Public
    Single LinearDamping : Public
    Single AngularDamping : Public
    Single MaxAngularVelocity : Public
    Single CCDMotionThreshold : Public
    Igneel.Physics.BodyActorFlags Flags : Public
    Single SleepLinearVelocity : Public
    Single SleepAngularVelocity : Public
    Int32 SolverIterationCount : Public
    Single SleepEnergyThreshold : Public
    Single SleepDamping : Public
    Single ContactReportThreshold : Public
Interface Igneel.Physics.ActorShape: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IResourceAllocator
    System.IDisposable
    Igneel.INameable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IPoseable
  Properties:
    Int32 Id   'get ' : 
    Igneel.Physics.Actor Actor 'get ' : 
    System.Object UserData 'get set' : 
    Igneel.Physics.PhysicMaterial Material 'get set' : 
    Single SkinWidth 'get set' : 
    Igneel.Matrix LocalPose 'get set' : 
    Igneel.Vector3 GlobalPosition 'get set' : 
    Igneel.Matrix GlobalOrientation 'get set' : 
    UInt16 CollisionGroup 'get set' : 
    Igneel.AABB WorldBounds 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Actor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UserData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_UserData(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetFlag(ShapeFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFlag(ShapeFlag, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Material(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Material(PhysicMaterial): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SkinWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SkinWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LocalPose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LocalPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalOrientation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CollisionGroup(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CollisionGroup(UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WorldBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    CheckOverlapAABB(Bounds3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckOverlapOBB(Box): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckOverlapSphere(Sphere): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckOverlapCapsule(Capsule): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.Physics.PlaneShape: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Physics.ActorShape
    Igneel.IResourceAllocator
    System.IDisposable
    Igneel.INameable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IPoseable
  Properties:
    Igneel.Plane Plane 'get set' : 
  Methods:
    get_Plane(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Plane(Plane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Physics.BoxShape: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Physics.ActorShape
    Igneel.IResourceAllocator
    System.IDisposable
    Igneel.INameable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IPoseable
  Properties:
    Igneel.Vector3 Dimensions 'get set' : 
  Methods:
    get_Dimensions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Dimensions(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Physics.SphereShape: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Physics.ActorShape
    Igneel.IResourceAllocator
    System.IDisposable
    Igneel.INameable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IPoseable
  Properties:
    Single Radius 'get set' : 
  Methods:
    get_Radius(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Radius(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Physics.CapsuleShape: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Physics.ActorShape
    Igneel.IResourceAllocator
    System.IDisposable
    Igneel.INameable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IPoseable
  Properties:
    Single Radius 'get set' : 
    Single Height 'get set' : 
  Methods:
    get_Radius(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Radius(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Height(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Physics.TriangleMeshShape: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Physics.ActorShape
    Igneel.IResourceAllocator
    System.IDisposable
    Igneel.INameable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IPoseable
  Properties:
    Igneel.Physics.TriangleMesh Mesh 'get ' : 
  Methods:
    get_Mesh(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Physics.WheelShape: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Physics.ActorShape
    Igneel.IResourceAllocator
    System.IDisposable
    Igneel.INameable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IPoseable
  Properties:
    Single Radius 'get set' : 
    Single SuspensionTravel 'get set' : 
    Single InverseWheelMass 'get set' : 
    Igneel.Physics.WheelShapeFlags WheelFlags 'get set' : 
    Single MotorTorque 'get set' : 
    Single BrakeTorque 'get set' : 
    Igneel.Physics.TireFunctionDesc LongitudalTireForceFunction 'get set' : 
    Igneel.Physics.TireFunctionDesc LateralTireForceFunction 'get set' : 
    Single SteerAngle 'get set' : 
    Single AxleSpeed 'get set' : 
    Igneel.Physics.SpringDesc Suspension 'get set' : 
  Methods:
    get_Radius(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Radius(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SuspensionTravel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SuspensionTravel(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_InverseWheelMass(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_InverseWheelMass(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WheelFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_WheelFlags(WheelShapeFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MotorTorque(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MotorTorque(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BrakeTorque(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_BrakeTorque(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LongitudalTireForceFunction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LongitudalTireForceFunction(TireFunctionDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LateralTireForceFunction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LateralTireForceFunction(TireFunctionDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SteerAngle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SteerAngle(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AxleSpeed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AxleSpeed(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Suspension(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Suspension(SpringDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetContact(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Physics.ActorShapeDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Physics.ShapeType Type : Public
    System.String Name : Public
    Igneel.Physics.ShapeFlag Flags : Public
    UInt16 MaterialIndex : Public
    Single Density : Public
    Single Mass : Public
    Single SkinWidth : Public
    Igneel.Matrix LocalPose : Public
    UInt16 CollitionGroup : Public
    Igneel.Physics.GroupsMask GroupsMask : Public
    UInt32 NonInteractingCompartmentTypes : Public
  Methods:
    IsValid(): PrivateScope, Public, HideBySig
Class Igneel.Physics.BoxShapeDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Physics.ActorShapeDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Dimensions : Public
Class Igneel.Physics.SphereShapeDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Physics.ActorShapeDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Radius : Public
Class Igneel.Physics.PlaneShapeDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Physics.ActorShapeDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Plane Plane : Public
Class Igneel.Physics.CapsuleShapeDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Physics.ActorShapeDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Radius : Public
    Single Height : Public
Class Igneel.Physics.WheelShapeDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Physics.ActorShapeDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Radius : Public
    Single SuspensionTravel : Public
    Single InverseWheelMass : Public
    Igneel.Physics.WheelShapeFlags WheelFlags : Public
    Single MotorTorque : Public
    Single BrakeTorque : Public
    Single SteerAngle : Public
    Igneel.Physics.SpringDesc Suspension : Public
    Igneel.Physics.TireFunctionDesc LongitudalTireForceFunction : Public
    Igneel.Physics.TireFunctionDesc LateralTireForceFunction : Public
Class Igneel.Physics.TriangleMeshShapeDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Physics.ActorShapeDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Physics.MeshShapeFlag MeshFlags : Public
    Igneel.Physics.TriangleMesh Mesh : Public
Struct Igneel.Physics.ContactPairFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.ContactPairFlag IGNORE_PAIR = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ON_START_TOUCH = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ON_END_TOUCH = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ON_TOUCH = 8 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ON_IMPACT = 16 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ON_ROLL = 32 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ON_SLIDE = 64 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_FORCES = 128 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ON_START_TOUCH_FORCE_THRESHOLD = 256 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ON_END_TOUCH_FORCE_THRESHOLD = 512 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ON_TOUCH_FORCE_THRESHOLD = 1024 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_CONTACT_MODIFICATION = 65536 : Public, Static, Literal, HasDefault
    Igneel.Physics.ContactPairFlag NOTIFY_ALL = 2046 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.ActorFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.ActorFlag DISABLE_COLLISION = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.ActorFlag DISABLE_RESPONSE = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.ActorFlag LOCK_COM = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.ActorFlag FLUID_DISABLE_COLLISION = 8 : Public, Static, Literal, HasDefault
    Igneel.Physics.ActorFlag CONTACT_MODIFICATION = 16 : Public, Static, Literal, HasDefault
    Igneel.Physics.ActorFlag FORCE_CONE_FRICTION = 32 : Public, Static, Literal, HasDefault
    Igneel.Physics.ActorFlag USER_ACTOR_PAIR_FILTERING = 64 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.BodyActorFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.BodyActorFlags DISABLE_GRAVITY = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FROZEN_POS_X = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FROZEN_POS_Y = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FROZEN_POS_Z = 8 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FROZEN_ROT_X = 16 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FROZEN_ROT_Y = 32 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FROZEN_ROT_Z = 64 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FROZEN_POS = 14 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FROZEN_ROT = 112 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FROZEN = 126 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags KINEMATIC = 128 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags VISUALIZATION = 256 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags DUMMY_0 = 512 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags FILTER_SLEEP_VEL = 1024 : Public, Static, Literal, HasDefault
    Igneel.Physics.BodyActorFlags ENERGY_SLEEP_TEST = 2048 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.ForceMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.ForceMode FORCE = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.ForceMode IMPULSE = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.ForceMode VELOCITY_CHANGE = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.ForceMode SMOOTH_IMPULSE = 3 : Public, Static, Literal, HasDefault
    Igneel.Physics.ForceMode SMOOTH_VELOCITY_CHANGE = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.ForceMode ACCELERATION = 5 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.SweepFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.SweepFlags STATICS = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.SweepFlags DYNAMICS = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.SweepFlags ASYNC = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.SweepFlags ALL_HITS = 8 : Public, Static, Literal, HasDefault
    Igneel.Physics.SweepFlags DEBUG_SM = 32 : Public, Static, Literal, HasDefault
    Igneel.Physics.SweepFlags DEBUG_ET = 64 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.ShapeFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.ShapeFlag TRIGGER_ON_ENTER = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag TRIGGER_ON_LEAVE = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag TRIGGER_ON_STAY = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag TRIGGER_ENABLE = 7 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag VISUALIZATION = 8 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag DISABLE_COLLISION = 16 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag FEATURE_INDICES = 32 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag DISABLE_RAYCASTING = 64 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag POINT_CONTACT_FORCE = 128 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag FLUID_DRAIN = 256 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag FLUID_DISABLE_COLLISION = 1024 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag FLUID_TWOWAY = 2048 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag DISABLE_RESPONSE = 4096 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag DYNAMIC_DYNAMIC_CCD = 8192 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag DISABLE_SCENE_QUERIES = 16384 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag CLOTH_DRAIN = 32768 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag CLOTH_DISABLE_COLLISION = 65536 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag CLOTH_TWOWAY = 131072 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag SOFTBODY_DRAIN = 262144 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag SOFTBODY_DISABLE_COLLISION = 524288 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeFlag SOFTBODY_TWOWAY = 1048576 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.CapsuleShapeFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.CapsuleShapeFlag SWEPT_SHAPE = 1 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.WheelShapeFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.WheelShapeFlags WHEEL_AXIS_CONTACT_NORMAL = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.WheelShapeFlags INPUT_LAT_SLIPVELOCITY = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.WheelShapeFlags INPUT_LNG_SLIPVELOCITY = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.WheelShapeFlags UNSCALED_SPRING_BEHAVIOR = 8 : Public, Static, Literal, HasDefault
    Igneel.Physics.WheelShapeFlags AXLE_SPEED_OVERRIDE = 16 : Public, Static, Literal, HasDefault
    Igneel.Physics.WheelShapeFlags EMULATE_LEGACY_WHEEL = 32 : Public, Static, Literal, HasDefault
    Igneel.Physics.WheelShapeFlags CLAMPED_FRICTION = 64 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.MeshShapeFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.MeshShapeFlag SMOOTH_SPHERE_COLLISIONS = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.MeshShapeFlag DOUBLE_SIDED = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.ShapeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.ShapeType PLANE = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType SPHERE = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType BOX = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType CAPSULE = 3 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType WHEEL = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType CONVEX = 5 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType MESH = 6 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType HEIGHTFIELD = 7 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType RAW_MESH = 8 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType COMPOUND = 9 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType COUNT = 10 : Public, Static, Literal, HasDefault
    Igneel.Physics.ShapeType FORCE_DWORD = 2147483647 : Public, Static, Literal, HasDefault
Interface Igneel.Physics.IActor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.IAffectable Affectable 'get set' : 
    Single AngularDamping 'get set' : 
    Igneel.Vector3 AngularMomentum 'get set' : 
    Igneel.Vector3 AngularVelocity 'get set' : 
    Igneel.Physics.BodyActorFlags BodyFlags 'get set' : 
    Single CCDMotionThreshold 'get set' : 
    Igneel.Matrix CMassGlobalOrientation 'get set' : 
    Igneel.Matrix CMassGlobalPose 'get set' : 
    Igneel.Vector3 CMassGlobalPosition 'get set' : 
    Igneel.Matrix CMassLocalPose 'get ' : 
    Igneel.Physics.ContactPairFlag ContactReportFlags 'get set' : 
    Single ContactReportThreshold 'get set' : 
    UInt16 DominanceGroup 'get set' : 
    Igneel.Physics.ActorFlag Flags 'get set' : 
    Igneel.Matrix GlobalOrientation 'get set' : 
    Igneel.Quaternion GlobalOrientationQuat 'get set' : 
    Igneel.Matrix GlobalPose 'get ' : 
    Igneel.Vector3 GlobalPosition 'get set' : 
    UInt16 Group 'get set' : 
    Boolean IsDynamic 'get ' : 
    Boolean IsGroupSleeping 'get ' : 
    Boolean IsKinematic 'get set' : 
    Boolean IsSleeping 'get ' : 
    Single LinearDamping 'get set' : 
    Igneel.Vector3 LinearMomentum 'get set' : 
    Igneel.Vector3 LinearVelocity 'get set' : 
    Single Mass 'get set' : 
    Igneel.Vector3 MassSpaceInertiaTensor 'get set' : 
    Single MaxAngularVelocity 'get set' : 
    Single SleepAngularVelocity 'get set' : 
    Single SleepEnergyThreshold 'get set' : 
    Single SleepLinearVelocity 'get set' : 
    Int32 SolverIterationCount 'get set' : 
  Methods:
    set_SleepAngularVelocity(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SleepEnergyThreshold(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SleepEnergyThreshold(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SleepLinearVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SleepLinearVelocity(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SolverIterationCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SolverIterationCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    UpdateMassFromShapes(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WakeUp(Single(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddForce(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddForceAtLocalPos(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddForceAtPos(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLocalForce(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLocalForceAtLocalPos(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLocalForceAtPos(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLocalTorque(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddTorque(Vector3, Vector3, ForceMode(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Affectable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Affectable(IAffectable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AngularDamping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AngularDamping(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AngularMomentum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AngularMomentum(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AngularVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AngularVelocity(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BodyFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_BodyFlags(BodyActorFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CCDMotionThreshold(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CCDMotionThreshold(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ClearActorFlag(ActorFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearBodyFlag(BodyActorFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_CMassGlobalOrientation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CMassGlobalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CMassGlobalPose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CMassGlobalPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CMassGlobalPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CMassGlobalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CMassLocalPose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ComputeKineticEnergy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_ContactReportFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ContactReportFlags(ContactPairFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ContactReportThreshold(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ContactReportThreshold(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DominanceGroup(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DominanceGroup(UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Flags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Flags(ActorFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetGlobalInertiaTensor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGlobalInertiaTensorInverse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLocalPointVelocity(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPointVelocity(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_GlobalOrientation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalOrientationQuat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalOrientationQuat(Quaternion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalPose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Group(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Group(UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsDynamic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsGroupSleeping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsKinematic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IsKinematic(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsSleeping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinearDamping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LinearDamping(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinearMomentum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LinearMomentum(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinearVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LinearVelocity(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Mass(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Mass(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MassSpaceInertiaTensor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MassSpaceInertiaTensor(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MaxAngularVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MaxAngularVelocity(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MoveGlobalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MoveGlobalOrientationQuat(Quaternion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MoveGlobalPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MoveGlobalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PutToSleep(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RaiseActorFlag(ActorFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RaiseBodyFlag(BodyActorFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadActorFlag(ActorFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadBodyFlag(BodyActorFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetUserActorPairFiltering(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetGlobalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetGlobalPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetGlobalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetLocalOrientation(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetLocalPose(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCMassOffsetLocalPosition(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_SleepAngularVelocity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Igneel.Physics.SweepQueryHit: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Single T : Public
    Igneel.Physics.ActorShape HitShape : Public
    Igneel.Physics.ActorShape SweepShape : Public
    Int32 InternalFaceID : Public
    Int32 FaceID : Public
    Igneel.Vector3 Point : Public
    Igneel.Vector3 Normal : Public
Struct Igneel.Physics.ControllerMoveInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Interface Igneel.Physics.ICharacterController: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Igneel.Vector3 FilteredPosition 'get ' : 
    Igneel.Physics.CCTInteractionFlag Interaction 'get set' : 
    Igneel.Vector3 Position 'get set' : 
  Methods:
    get_FilteredPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Interaction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Interaction(CCTInteractionFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Move(Vector3, UInt32, Single, Single, GroupsMask): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Position(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ReportSceneChanged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCollition(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStepOffset(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Physics.CharacterController: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.Physics.ICharacterController
  Fields:
    UInt32 COLLIDABLE_MASK : Public, Static, InitOnly
  Properties:
    Igneel.Physics.Actor Actor 'get ' : 
    Igneel.Physics.CharacterControllerManager Manager 'get ' : 
    System.Object UserData 'get set' : 
    Igneel.Vector3 Position 'get set' : 
    Igneel.Physics.CCTInteractionFlag Interaction 'get set' : 
    Igneel.Vector3 FilteredPosition 'get ' : 
  Methods:
    get_Actor(): PrivateScope, Public, HideBySig, SpecialName
    get_Manager(): PrivateScope, Public, HideBySig, SpecialName
    get_UserData(): PrivateScope, Public, HideBySig, SpecialName
    set_UserData(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Position(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Interaction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Interaction(CCTInteractionFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FilteredPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SetCollition(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStepOffset(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReportSceneChanged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Move(Vector3, UInt32(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), GroupsMask(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Remove(): PrivateScope, Public, HideBySig
Interface Igneel.Physics.BoxController: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Physics.ICharacterController
  Properties:
    Igneel.Vector3 Extents 'get set' : 
  Methods:
    get_Extents(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Extents(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.Physics.CapsuleController: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Physics.ICharacterController
  Properties:
    Single Radius 'get set' : 
    Single Height 'get set' : 
    Igneel.Physics.CapsuleClimbingMode ClimbingMode 'get set' : 
  Methods:
    get_Radius(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Radius(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Height(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ClimbingMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ClimbingMode(CapsuleClimbingMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Physics.CharacterControllerDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Physics.HeightFieldAxis UpDirection : Public
    Single SlopeLimit : Public
    Single SkinWidth : Public
    Single StepOffset : Public
    Igneel.Physics.CCTInteractionFlag interactionFlag : Public
    Igneel.Physics.IUserControllerHitReport HitReport : Public
    Igneel.Physics.ControllerType Type : Public
Class Igneel.Physics.BoxControllerDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Physics.CharacterControllerDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Extents : Public
Class Igneel.Physics.CapsuleControllerDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Physics.CharacterControllerDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Radius : Public
    Single Height : Public
    Igneel.Physics.CapsuleClimbingMode ClimbingMode : Public
Class Igneel.Physics.CharacterControllerManager: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Properties:
    Igneel.Collections.ReadOnlyList`1[Igneel.Physics.CharacterController] Controllers 'get ' : 
  Methods:
    get_Controllers(): PrivateScope, Public, HideBySig, SpecialName
    CreateController(PhysicScene, CharacterControllerDesc): PrivateScope, Public, HideBySig
    _CreateController(PhysicScene, CharacterControllerDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Igneel.Physics.CCTInteractionFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.CCTInteractionFlag INTERACTION_INCLUDE = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.CCTInteractionFlag INTERACTION_EXCLUDE = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.CCTInteractionFlag INTERACTION_USE_FILTER = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.ControllerFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.ControllerFlag COLLISION_SIDES = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.ControllerFlag COLLISION_UP = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.ControllerFlag COLLISION_DOWN = 4 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.CollisionGroup: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.CollisionGroup GROUP_NON_COLLIDABLE = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.CollisionGroup GROUP_COLLIDABLE_NON_PUSHABLE = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.CollisionGroup GROUP_COLLIDABLE_PUSHABLE = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.CapsuleClimbingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.CapsuleClimbingMode CLIMB_EASY = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.CapsuleClimbingMode CLIMB_CONSTRAINED = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.CapsuleClimbingMode CLIMB_LAST = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.HeightFieldAxis: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.HeightFieldAxis X = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.HeightFieldAxis Y = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.HeightFieldAxis Z = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.HeightFieldAxis NOT_HEIGHTFIELD = 255 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.ControllerAction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.ControllerAction ACTION_NONE = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.ControllerAction ACTION_PUSH = 1 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.ControllerType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.ControllerType BOX = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.ControllerType CAPSULE = 1 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.ControllerShapeHit: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Physics.CharacterController Controller : Public
    Igneel.Physics.ActorShape ActorShape : Public
    Igneel.Vector3 WorldPos : Public
    Igneel.Vector3 WorldNormal : Public
    Igneel.Vector3 Dir : Public
    Single Length : Public
Interface Igneel.Physics.IUserControllerHitReport: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    OnShapeHit(ControllerShapeHit&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnControllerHit(CharacterController, CharacterController): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Physics.SweepCache: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Methods:
    SetVolume(Box): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Physics.TriangleMeshDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public
    Igneel.Physics.MeshFlag Flags : Public
    Int32 NumVertices : Public
    Int32 NumTriangles : Public
    Int32 PointStrideBytes : Public
    Int32 TriangleStrideBytes : Public
    IntPtr Points : Public
    IntPtr Triangles : Public
Class Igneel.Physics.TriangleMesh: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.Assets.IAssetProvider
    Igneel.INameable
  Properties:
    System.String Name 'get set' : 
    Igneel.Mesh GraphicMesh 'get ' : 
    System.Object UserData 'get set' : 
    Int32 PagesCount 'get ' : 
    Int32 SubMeshCount 'get ' : 
    Int32 ReferenceCount 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GraphicMesh(): PrivateScope, Public, HideBySig, SpecialName
    get_UserData(): PrivateScope, Public, HideBySig, SpecialName
    set_UserData(Object): PrivateScope, Public, HideBySig, SpecialName
    get_PagesCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SubMeshCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ReferenceCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetCount(InternalArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFormat(InternalArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBase(InternalArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStride(InternalArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTriangleMaterial(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Physics.GroupsMask: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
Struct Igneel.Physics.SpringDesc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Spring : Public
    Single Damper : Public
    Single TargetValue : Public
  Methods:
    IsValid(): PrivateScope, Public, HideBySig
Struct Igneel.Physics.WheelContact: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 ContactPoint : Public
    Igneel.Vector3 ContactNormal : Public
    Igneel.Vector3 LongitudalDirection : Public
    Igneel.Vector3 LateralDirection : Public
    Single ContactForce : Public
    Single LongitudalSlip : Public
    Single LateralSlip : Public
    Single LongitudalImpulse : Public
    Single LateralImpulse : Public
    UInt16 OtherShapeMaterialIndex : Public
    Single ContactPosition : Public
    Igneel.Physics.ActorShape Shape : Public
Struct Igneel.Physics.TireFunctionDesc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Single ExtremumSlip : Public
    Single ExtremumValue : Public
    Single AsymptoteSlip : Public
    Single AsymptoteValue : Public
    Single StiffnessFactor : Public
  Methods:
    SetToDefault(): PrivateScope, Public, HideBySig
    HermiteEval(Single): PrivateScope, Public, HideBySig
Struct Igneel.Physics.SimulationType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.SimulationType SIMULATION_SW = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.SimulationType SIMULATION_HW = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.SimulationType NX_STY_FORCE_DWORD = 2147483647 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.SceneFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.SceneFlags DisableCollisions = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.SceneFlags SeparateThread = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.SceneFlags EnableMultiThread = 8 : Public, Static, Literal, HasDefault
    Igneel.Physics.SceneFlags EnableActiveTransforms = 16 : Public, Static, Literal, HasDefault
    Igneel.Physics.SceneFlags RestrictedScene = 32 : Public, Static, Literal, HasDefault
    Igneel.Physics.SceneFlags DisableSceneMutex = 64 : Public, Static, Literal, HasDefault
    Igneel.Physics.SceneFlags ForceConeFriction = 128 : Public, Static, Literal, HasDefault
    Igneel.Physics.SceneFlags SequentialPrimary = 256 : Public, Static, Literal, HasDefault
    Igneel.Physics.SceneFlags FluidPerformanceHint = 512 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.ThreadPriorities: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.ThreadPriorities High = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.ThreadPriorities AboveNormal = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.ThreadPriorities Normal = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.ThreadPriorities BelowNormal = 3 : Public, Static, Literal, HasDefault
    Igneel.Physics.ThreadPriorities Low = 4 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.BroadPhaseTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.BroadPhaseTypes SAPSingle = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.BroadPhaseTypes SAPMulti = 1 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.PruningStructures: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.PruningStructures None = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.PruningStructures Octree = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.PruningStructures Quadtree = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.PruningStructures DynamicAABBTree = 3 : Public, Static, Literal, HasDefault
    Igneel.Physics.PruningStructures StaticAABBTree = 4 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.TimeStepMethods: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.TimeStepMethods Fixed = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.TimeStepMethods Variable = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.TimeStepMethods Inherit = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.TimeStepMethods NumMethods = 3 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.CombineMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.CombineMode AVERAGE = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.CombineMode MIN = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.CombineMode MULTIPLY = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.CombineMode MAX = 3 : Public, Static, Literal, HasDefault
    Igneel.Physics.CombineMode N_VALUES = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.CombineMode PAD_32 = 4294967295 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.MaterialFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.MaterialFlag ANISOTROPIC = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.MaterialFlag DISABLE_FRICTION = 16 : Public, Static, Literal, HasDefault
    Igneel.Physics.MaterialFlag DISABLE_STRONG_FRICTION = 32 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.MeshFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.MeshFlag FLIPNORMALS = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.MeshFlag BIT_INDICES_16 = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.MeshFlag HARDWARE_MESH = 4 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.InternalArray: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.InternalArray TRIANGLES = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.InternalArray VERTICES = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.InternalArray NORMALS = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.InternalArray HULL_VERTICES = 3 : Public, Static, Literal, HasDefault
    Igneel.Physics.InternalArray HULL_POLYGONS = 4 : Public, Static, Literal, HasDefault
    Igneel.Physics.InternalArray TRIANGLES_REMAP = 5 : Public, Static, Literal, HasDefault
Struct Igneel.Physics.InternalFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Physics.InternalFormat NODATA = 0 : Public, Static, Literal, HasDefault
    Igneel.Physics.InternalFormat FLOAT = 1 : Public, Static, Literal, HasDefault
    Igneel.Physics.InternalFormat BYTE = 2 : Public, Static, Literal, HasDefault
    Igneel.Physics.InternalFormat SHORT = 3 : Public, Static, Literal, HasDefault
    Igneel.Physics.InternalFormat INT = 4 : Public, Static, Literal, HasDefault
Class Igneel.Physics.PhysicMaterialDesc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single DynamicFriction : Public
    Single StaticFriction : Public
    Single Restitution : Public
    Single DynamicFrictionV : Public
    Single StaticFrictionV : Public
    Igneel.Vector3 DirOfAnisotropy : Public
    Igneel.Physics.MaterialFlag Flags : Public
    Igneel.Physics.CombineMode FrictionCombineMode : Public
    Igneel.Physics.CombineMode RestitutionCombineMode : Public
Class Igneel.Physics.PhysicManager: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Properties:
    Igneel.Collections.ReadOnlyDictionary`2[System.String,Igneel.Physics.PhysicScene] Scenes 'get ' : 
  Methods:
    get_Scenes(): PrivateScope, Public, HideBySig, SpecialName
    CreateScene(PhysicSceneDesc): PrivateScope, Public, HideBySig
    CreateTriangleMesh(TriangleMeshDesc): PrivateScope, Public, HideBySig
    CreateTriangleMeshFromFile(String): PrivateScope, Public, HideBySig
    CreateTriangleMeshFromStream(Stream): PrivateScope, Public, HideBySig
    CreateControllerManager(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    _CreateScene(PhysicSceneDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    _CreateTriangleMesh(TriangleMeshDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    _CreateTriangleMeshFromFile(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    _CreateTriangleMeshFromStream(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Physics.PhysicMaterial: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.Assets.IAssetProvider
  Properties:
    System.Object UserData 'get set' : 
    Igneel.Physics.PhysicScene Scene 'get ' : 
    Int32 Index 'get ' : 
    Single DynamicFriction 'get set' : 
    Single DynamicFrictionV 'get set' : 
    Single StaticFriction 'get set' : 
    Single StaticFrictionV 'get set' : 
    Single Restitution 'get set' : 
    Igneel.Vector3 DirOfAnisotropy 'get set' : 
    Igneel.Physics.MaterialFlag Flags 'get set' : 
    Igneel.Physics.CombineMode FrictionCombineMode 'get set' : 
    Igneel.Physics.CombineMode RestitutionCombineMode 'get set' : 
  Methods:
    get_UserData(): PrivateScope, Public, HideBySig, SpecialName
    set_UserData(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Scene(): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DynamicFriction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DynamicFriction(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DynamicFrictionV(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DynamicFrictionV(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_StaticFriction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_StaticFriction(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_StaticFrictionV(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_StaticFrictionV(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Restitution(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Restitution(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DirOfAnisotropy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DirOfAnisotropy(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Flags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Flags(MaterialFlag): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FrictionCombineMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FrictionCombineMode(CombineMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RestitutionCombineMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_RestitutionCombineMode(CombineMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Physics.PhysicScene: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Interfaces:
    Igneel.INameable
    Igneel.Assets.IAssetProvider
  Properties:
    System.String Name 'get set' : 
    Igneel.Scene Scene 'get set' : 
    Boolean Enable 'get set' : 
    System.Object UserData 'get set' : 
    Igneel.Physics.SceneFlags Flags 'get set' : 
    Igneel.Vector3 Gravity 'get set' : 
    Igneel.Physics.SimulationType Simulation 'get set' : 
    Igneel.Collections.ReadOnlyList`1[Igneel.Physics.PhysicMaterial] Materials 'get ' : 
    Igneel.Collections.ReadOnlyDictionary`2[System.String,Igneel.Physics.Actor] Actors 'get ' : 
    Boolean Visible 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Scene(): PrivateScope, Public, HideBySig, SpecialName
    set_Scene(Scene): PrivateScope, Public, HideBySig, SpecialName
    get_Enable(): PrivateScope, Public, HideBySig, SpecialName
    set_Enable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UserData(): PrivateScope, Public, HideBySig, SpecialName
    set_UserData(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    get_Gravity(): PrivateScope, Public, HideBySig, SpecialName
    set_Gravity(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Simulation(): PrivateScope, Public, HideBySig, SpecialName
    get_Materials(): PrivateScope, Public, HideBySig, SpecialName
    get_Actors(): PrivateScope, Public, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreateActor(ActorDesc): PrivateScope, Public, HideBySig
    CreateMaterial(PhysicMaterialDesc): PrivateScope, Public, HideBySig
    Simulate(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSweepCache(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddToPackage(ContentPackage): PrivateScope, Public, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Physics.PhysicSceneDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public
    Igneel.Physics.SceneFlags Flags : Public
    Igneel.Vector3 Gravity : Public
Class Igneel.GraphicPresenter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Events:
    System.Action`1[Igneel.GraphicPresenter] RenderBegin: 
    System.Action`1[Igneel.GraphicPresenter] RenderEnd: 
    System.Action Rendering: 
  Methods:
    add_RenderBegin(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_RenderBegin(Action`1): PrivateScope, Public, HideBySig, SpecialName
    add_RenderEnd(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_RenderEnd(Action`1): PrivateScope, Public, HideBySig, SpecialName
    add_Rendering(Action): PrivateScope, Public, HideBySig, SpecialName
    remove_Rendering(Action): PrivateScope, Public, HideBySig, SpecialName
    RenderFrame(): PrivateScope, Public, HideBySig
    OnRender(): PrivateScope, Public, HideBySig
    OnRenderBegin(): PrivateScope, Public, HideBySig
Class Igneel.MultyViewPresenter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.GraphicPresenter
    Void .ctor(Igneel.GraphicPresenter[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.GraphicPresenter[] Presenters 'get ' : 
  Methods:
    get_Presenters(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.SingleViewPresenter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.GraphicPresenter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.SwapChainPresenter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.GraphicPresenter
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Size DisplaySize 'get set' : 
  Methods:
    get_DisplaySize(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplaySize(Size): PrivateScope, Public, HideBySig, SpecialName
Interface Igneel.ICullingProvider`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Methods:
    Add(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Contains(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Remove(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CullItems(Camera, ICollection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.QuadTree`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(Igneel.RectangleF, Int32, Igneel.ICullTester`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.ICullingProvider`1[T]
  Properties:
    Int32 MaxLevel 'get ' : 
    Boolean IsLeaft 'get ' : 
    Igneel.Sphere BoundSphere 'get set' : 
    Igneel.RectangleF BoundRect 'get ' : 
  Methods:
    get_MaxLevel(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLeaft(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundSphere(): PrivateScope, Public, HideBySig, SpecialName
    set_BoundSphere(Sphere): PrivateScope, Public, HideBySig, SpecialName
    get_BoundRect(): PrivateScope, Public, HideBySig, SpecialName
    Add(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CullItems(Camera, ICollection`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CullItems(Camera): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reshape(RectangleF): PrivateScope, Public, HideBySig
    ReAlloc(T): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.QuadTree`1+ValueStore[T]: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean IsCulled : Public
    T Value : Public
    System.Collections.Generic.LinkedList`1[Igneel.QuadTree`1[T]] Quads : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.CullTester`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Func`3[T,Igneel.RectangleF,System.Boolean], System.Func`3[T,Igneel.Camera,System.Boolean], System.Func`3[Igneel.Camera,Igneel.Sphere,Igneel.Containment]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.ICullTester`1[T]
  Methods:
    IsInsideRect(T, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsInsideFrustum(T, Camera): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetCullState(Camera, Sphere): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.BoundableTester`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, Igneel.IBoundable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.ICullTester`1[T]
  Properties:
    Igneel.BoundableTester`1[T] Tester 'get ' : 
  Methods:
    get_Tester(): PrivateScope, Public, Static, HideBySig, SpecialName
    IsInsideRect(T, RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsInsideFrustum(T, Camera): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetCullState(Camera, Sphere): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Igneel.RenderEntry: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.SceneNode Node : Public
    Igneel.IGraphicObject GraphicObject : Public
    Igneel.Graphics.Render Render : Public
    Boolean IsTransparent : Public
    Igneel.RenderEntry Invalid : Public, Static, InitOnly
  Properties:
    Boolean IsValid 'get ' : 
  Methods:
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Draw(PixelClipping(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Igneel.SceneDescription: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public
    Boolean CreateRootNode : Public
    Single QuadTreeMaxSize : Public
    Single QuadTreeMinSize : Public
Class Igneel.Scene: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(Igneel.SceneDescription): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IAssetProvider
    Igneel.Assets.IAssetProviderNotificator
    Igneel.IDynamic
    Igneel.INameable
  Fields:
    Int32 NbLayers = 3 : Public, Static, Literal, HasDefault
    Int32 TransparentLayer = 2 : Public, Static, Literal, HasDefault
    Int32 NonZWrite = 0 : Public, Static, Literal, HasDefault
    Int32 DefaultLayer = 1 : Public, Static, Literal, HasDefault
    Int32 InvalidLayer = -1 : Public, Static, Literal, HasDefault
  Properties:
    System.String Name 'get set' : 
    Igneel.GlobalLigth AmbientLight 'get set' : 
    System.Collections.Generic.List`1[Igneel.RenderEntry] RenderList 'get ' : 
    System.Collections.Generic.List`1[Igneel.RenderEntry] TransparentRenderList 'get ' : 
    Igneel.Animations.AnimationManager AnimManager 'get ' : 
    Igneel.Collections.ObservedDictionary`2[System.String,Igneel.Camera] Cameras 'get ' : 
    System.Collections.Generic.List`1[Igneel.IDynamic] Dynamics 'get ' : 
    System.Collections.Generic.List`1[Igneel.Graphics.NodeTechnique] Techniques 'get ' : 
    System.Collections.Generic.List`1[Igneel.LightInstance] Lights 'get ' : 
    System.Collections.Generic.List`1[Igneel.LightInstance] ActiveLights 'get ' : 
    Igneel.SceneNode Root 'get ' : 
    Igneel.Camera ActiveCamera 'get set' : 
    Igneel.ICullingProvider`1[Igneel.SceneNode] CullingProvider 'get ' : 
    System.Collections.Generic.ICollection`1[Igneel.SceneNode] NonCullingProviderSuported 'get ' : 
    System.Collections.Generic.List`1[Igneel.IGraphicObject] Renderables 'get ' : 
    Igneel.Physics.PhysicScene Physics 'get set' : 
  Events:
    Igneel.UpdateEventHandler UpdateEvent: 
    System.Action`1[Igneel.Scene] SavingBegin: 
    System.Action`1[Igneel.Scene] SavingEnd: 
  Methods:
    add_UpdateEvent(UpdateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_UpdateEvent(UpdateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_SavingBegin(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SavingBegin(Action`1): PrivateScope, Public, HideBySig, SpecialName
    add_SavingEnd(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SavingEnd(Action`1): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AmbientLight(): PrivateScope, Public, HideBySig, SpecialName
    set_AmbientLight(GlobalLigth): PrivateScope, Public, HideBySig, SpecialName
    get_RenderList(): PrivateScope, Public, HideBySig, SpecialName
    get_TransparentRenderList(): PrivateScope, Public, HideBySig, SpecialName
    get_AnimManager(): PrivateScope, Public, HideBySig, SpecialName
    get_Cameras(): PrivateScope, Public, HideBySig, SpecialName
    get_Dynamics(): PrivateScope, Public, HideBySig, SpecialName
    get_Techniques(): PrivateScope, Public, HideBySig, SpecialName
    get_Lights(): PrivateScope, Public, HideBySig, SpecialName
    get_ActiveLights(): PrivateScope, Public, HideBySig, SpecialName
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    get_ActiveCamera(): PrivateScope, Public, HideBySig, SpecialName
    set_ActiveCamera(Camera): PrivateScope, Public, HideBySig, SpecialName
    get_CullingProvider(): PrivateScope, Public, HideBySig, SpecialName
    get_NonCullingProviderSuported(): PrivateScope, Public, HideBySig, SpecialName
    get_Renderables(): PrivateScope, Public, HideBySig, SpecialName
    get_Physics(): PrivateScope, Public, HideBySig, SpecialName
    set_Physics(PhysicScene): PrivateScope, Public, HideBySig, SpecialName
    Initialize(SceneDescription): PrivateScope, Public, HideBySig
    InitializeCulling(): PrivateScope, Public, HideBySig
    Update(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ApplyTechniques(): PrivateScope, Public, HideBySig
    GetNode(String): PrivateScope, Public, HideBySig
    GetNode(Int32): PrivateScope, Public, HideBySig
    UpdateRenderLists(): PrivateScope, Public, HideBySig
    GetRenderList(): PrivateScope, Public, HideBySig
    Remove(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddToPackage(ContentPackage): PrivateScope, Public, HideBySig
    OnSavingBegin(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnSavingEnd(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadComplete(): PrivateScope, Public, HideBySig
Class Igneel.SceneManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.SceneState ActiveSceneState 'get set' : 
    Igneel.Collections.ObservedDictionary`2[System.String,Igneel.Scene] Scenes 'get ' : 
    Igneel.Collections.ObservedCollection`1[Igneel.SceneState] SceneStates 'get ' : 
  Methods:
    get_ActiveSceneState(): PrivateScope, Public, HideBySig, SpecialName
    set_ActiveSceneState(SceneState): PrivateScope, Public, HideBySig, SpecialName
    get_Scenes(): PrivateScope, Public, HideBySig, SpecialName
    get_SceneStates(): PrivateScope, Public, HideBySig, SpecialName
    UpdateSceneState(): PrivateScope, Public, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.SceneManager+Activator: AutoLayout, AnsiClass, Class, NestedPublic, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IProviderActivator
  Methods:
    Initialize(IAssetProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateInstance(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Igneel.NodeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.NodeType Node = 0 : Public, Static, Literal, HasDefault
    Igneel.NodeType Bone = 1 : Public, Static, Literal, HasDefault
    Igneel.NodeType Root = 2 : Public, Static, Literal, HasDefault
Interface Igneel.IScalable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IDeferreable
  Properties:
    Igneel.Vector3 LocalScale 'get set' : 
  Methods:
    get_LocalScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LocalScale(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Igneel.ITransformable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IPositionable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IScalable
Interface Igneel.IDynamicNotificable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IDynamic
  Events:
    Igneel.UpdateEventHandler UpdateEvent: 
  Methods:
    add_UpdateEvent(UpdateEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_UpdateEvent(UpdateEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.SceneNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(Igneel.Scene, System.String, Igneel.INodeObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Igneel.INodeObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.IBoundable
    Igneel.ITransformable
    Igneel.IPositionable
    Igneel.ITranslatable
    Igneel.IDeferreable
    Igneel.IRotable
    Igneel.IScalable
    Igneel.INameable
    Igneel.IAffectable
    Igneel.IAffector
    Igneel.IPoseable
    Igneel.IDynamicNotificable
    Igneel.IDynamic
    Igneel.Assets.IAssetProvider
  Properties:
    System.String Name 'get set' : 
    Int32 Id   'get set' : 
    Igneel.Scene Scene 'get ' : 
    Igneel.Collections.ObservedDictionary`2[System.String,Igneel.SceneNode] Nodes 'get ' : 
    Igneel.SceneNode Parent 'get ' : 
    Boolean Visible 'get set' : 
    Igneel.NodeType Type 'get set' : 
    System.String Tag 'get set' : 
    Igneel.Graphics.NodeTechnique Technique 'get set' : 
    Igneel.IAffector Affector 'get set' : 
    Igneel.IAffectable Affectable 'get set' : 
    Boolean IsDynamic 'get set' : 
    Igneel.INodeObject NodeObject 'get set' : 
    Igneel.Controllers.NodeController Controller 'get set' : 
    Boolean IsCulledByProvider 'get ' : 
    System.Object UserData 'get set' : 
    Igneel.Vector3 LocalPosition 'get set' : 
    Single Tx  'get set' : 
    Single Ty  'get set' : 
    Single Tz  'get set' : 
    Igneel.Vector3 GlobalPosition 'get ' : 
    Igneel.Vector3 LocalScale 'get set' : 
    Single Sx  'get set' : 
    Single Sy  'get set' : 
    Single Sz  'get set' : 
    Igneel.Matrix LocalRotation 'get set' : 
    Igneel.Vector3 Right 'get set' : 
    Igneel.Vector3 Up 'get set' : 
    Igneel.Vector3 Front 'get set' : 
    Igneel.Euler LocalRotationEuler 'get set' : 
    Igneel.Quaternion LocalRotationQuat 'get set' : 
    Single Heading 'get set' : 
    Single Pitch 'get set' : 
    Single Roll 'get set' : 
    Igneel.Matrix LocalPose 'get set' : 
    Igneel.Matrix GlobalPose 'get ' : 
    Igneel.Matrix BindHeirarchyPose 'get set' : 
    Igneel.Matrix BindAffectorPose 'get set' : 
    Igneel.Sphere LocalSphere 'get set' : 
    Single LocalRadius 'get set' : 
    Igneel.Vector3 LocalCenter 'get set' : 
    Igneel.Sphere GlobalSphere 'get set' : 
    Single GlobalRadius 'get set' : 
    Igneel.OrientedBox GlobalBox 'get set' : 
    Single Range 'get set' : 
  Events:
    System.Action`1[Igneel.SceneNode] PoseUpdated: 
    System.Action`1[Igneel.SceneNode] ComponentChanged: 
    Igneel.UpdateEventHandler UpdateEvent: 
  Methods:
    set_Range(Single): PrivateScope, Public, HideBySig, SpecialName
    LayoutComplete(): PrivateScope, Public, HideBySig
    ComputeBoundings(): PrivateScope, Public, HideBySig
    RegisterForCulling(): PrivateScope, Public, HideBySig
    Bind(SceneNode): PrivateScope, Public, HideBySig
    Remove(): PrivateScope, Public, HideBySig
    GetNode(String): PrivateScope, Public, HideBySig
    GetNode(Int32): PrivateScope, Public, HideBySig
    GetNodeByTag(String): PrivateScope, Public, HideBySig
    EnumerateNodesPosOrden(): PrivateScope, Public, HideBySig
    EnumerateNodesInPreOrden(): PrivateScope, Public, HideBySig
    GetRenderEntries(List`1): PrivateScope, Public, HideBySig
    ComputeLocalPose(Vector3, Matrix, Vector3): PrivateScope, Public, HideBySig
    ComputeLocalPose(Vector3, Quaternion, Vector3): PrivateScope, Public, HideBySig
    UpdateLocalPose(): PrivateScope, Public, HideBySig
    CommitChanges(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Update(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UpdatePose(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(String): PrivateScope, Public, HideBySig
    Contains(SceneNode): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CreateActor(Boolean, Func`2, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateActor(Boolean, ActorShapeDesc[], Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateActor(Boolean, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateActors(): PrivateScope, Public, HideBySig
    Set(Action`1): PrivateScope, Public, HideBySig
    GetComponent(): PrivateScope, Public, HideBySig
    Create(T): PrivateScope, Public, HideBySig
    Create(String, T): PrivateScope, Public, HideBySig
    AsDynamic(): PrivateScope, Public, HideBySig
    add_PoseUpdated(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_PoseUpdated(Action`1): PrivateScope, Public, HideBySig, SpecialName
    add_ComponentChanged(Action`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ComponentChanged(Action`1): PrivateScope, Public, HideBySig, SpecialName
    add_UpdateEvent(UpdateEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_UpdateEvent(UpdateEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Scene(): PrivateScope, Public, HideBySig, SpecialName
    get_Nodes(): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(NodeType): PrivateScope, Public, HideBySig, SpecialName
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(String): PrivateScope, Public, HideBySig, SpecialName
    get_Technique(): PrivateScope, Public, HideBySig, SpecialName
    set_Technique(NodeTechnique): PrivateScope, Public, HideBySig, SpecialName
    get_Affector(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Affector(IAffector): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Affectable(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Affectable(IAffectable): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsDynamic(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsDynamic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NodeObject(): PrivateScope, Public, HideBySig, SpecialName
    set_NodeObject(INodeObject): PrivateScope, Public, HideBySig, SpecialName
    get_Controller(): PrivateScope, Public, HideBySig, SpecialName
    set_Controller(NodeController): PrivateScope, Public, HideBySig, SpecialName
    get_IsCulledByProvider(): PrivateScope, Public, HideBySig, SpecialName
    get_UserData(): PrivateScope, Public, HideBySig, SpecialName
    set_UserData(Object): PrivateScope, Public, HideBySig, SpecialName
    get_LocalPosition(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LocalPosition(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Tx(): PrivateScope, Public, HideBySig, SpecialName
    set_Tx(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Ty(): PrivateScope, Public, HideBySig, SpecialName
    set_Ty(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Tz(): PrivateScope, Public, HideBySig, SpecialName
    set_Tz(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalPosition(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LocalScale(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LocalScale(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Sx(): PrivateScope, Public, HideBySig, SpecialName
    set_Sx(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Sy(): PrivateScope, Public, HideBySig, SpecialName
    set_Sy(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Sz(): PrivateScope, Public, HideBySig, SpecialName
    set_Sz(Single): PrivateScope, Public, HideBySig, SpecialName
    get_LocalRotation(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LocalRotation(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, HideBySig, SpecialName
    set_Up(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Front(): PrivateScope, Public, HideBySig, SpecialName
    set_Front(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_LocalRotationEuler(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalRotationEuler(Euler): PrivateScope, Public, HideBySig, SpecialName
    get_LocalRotationQuat(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalRotationQuat(Quaternion): PrivateScope, Public, HideBySig, SpecialName
    get_Heading(): PrivateScope, Public, HideBySig, SpecialName
    set_Heading(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Pitch(): PrivateScope, Public, HideBySig, SpecialName
    set_Pitch(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Roll(): PrivateScope, Public, HideBySig, SpecialName
    set_Roll(Single): PrivateScope, Public, HideBySig, SpecialName
    get_LocalPose(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalPose(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalPose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BindHeirarchyPose(): PrivateScope, Public, HideBySig, SpecialName
    set_BindHeirarchyPose(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_BindAffectorPose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BindAffectorPose(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LocalSphere(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalSphere(Sphere): PrivateScope, Public, HideBySig, SpecialName
    get_LocalRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalRadius(Single): PrivateScope, Public, HideBySig, SpecialName
    get_LocalCenter(): PrivateScope, Public, HideBySig, SpecialName
    set_LocalCenter(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalSphere(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_GlobalSphere(Sphere): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_GlobalRadius(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalBox(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_GlobalBox(OrientedBox): PrivateScope, Public, HideBySig, SpecialName
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
Interface Igneel.ISceneStateTrigger: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.Assets.IAssetProvider
  Methods:
    IsActive(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.SceneState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Scene, Igneel.ISceneStateTrigger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Assets.IAssetProvider
  Properties:
    Igneel.Scene Scene 'get set' : 
    Igneel.ISceneStateTrigger Trigger 'get set' : 
    System.Collections.Generic.List`1[Igneel.SceneState] States 'get ' : 
  Methods:
    get_Scene(): PrivateScope, Public, HideBySig, SpecialName
    set_Scene(Scene): PrivateScope, Public, HideBySig, SpecialName
    get_Trigger(): PrivateScope, Public, HideBySig, SpecialName
    set_Trigger(ISceneStateTrigger): PrivateScope, Public, HideBySig, SpecialName
    get_States(): PrivateScope, Public, HideBySig, SpecialName
    SetActive(): PrivateScope, Public, HideBySig
    RemoveStates(Scene): PrivateScope, Public, HideBySig
    CreateAsset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.AllwaysOnSceneTriggers: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Assets.AssetProvider`1[Igneel.AllwaysOnSceneTriggers+TriggerAsset]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.ISceneStateTrigger
  Fields:
    Igneel.AllwaysOnSceneTriggers Instance : Public, Static
  Methods:
    IsActive(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.AllwaysOnSceneTriggers+TriggerAsset: AutoLayout, AnsiClass, Class, NestedPublic, Serializable, BeforeFieldInit
  :Igneel.Assets.Asset
    Void .ctor(Igneel.Assets.IAssetProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProviderInstance(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Services.DynamicService: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[Igneel.IDynamic] Dynamics 'get ' : 
  Methods:
    get_Dynamics(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Services.PostRenderService: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[Igneel.IRenderable] Rendereables 'get ' : 
  Methods:
    get_Rendereables(): PrivateScope, Public, HideBySig, SpecialName
    Add(IRenderable): PrivateScope, Public, HideBySig
    Remove(IRenderable): PrivateScope, Public, HideBySig
    Contains(IRenderable): PrivateScope, Public, HideBySig
Class Igneel.Services.PresentService: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[Igneel.IRenderable] Rendereables 'get ' : 
  Methods:
    get_Rendereables(): PrivateScope, Public, HideBySig, SpecialName
Interface Igneel.Services.INotificationService: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Events:
    System.EventHandler ProjectCreated: 
    System.EventHandler ProjectLoaded: 
    System.EventHandler GraphicSceneCreated: 
    System.EventHandler GraphicSceneDestroyed: 
    System.EventHandler PhysicSceneCreated: 
    System.EventHandler PhysicSceneDestroyed: 
  Methods:
    add_ProjectCreated(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_ProjectCreated(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_ProjectLoaded(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_ProjectLoaded(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_GraphicSceneCreated(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_GraphicSceneCreated(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_GraphicSceneDestroyed(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_GraphicSceneDestroyed(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_PhysicSceneCreated(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_PhysicSceneCreated(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_PhysicSceneDestroyed(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_PhysicSceneDestroyed(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    OnProjectCreated(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnProjectLoaded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnGraphicSceneCreated(Scene): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnGraphicSceneDestroyed(Scene): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnPhysicSceneCreated(PhysicScene): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnPhysicSceneDestroyed(PhysicScene): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnObjectCreated(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnObjectDestroyed(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddCreateEventListener(Action`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveCreateEventListener(Action`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddDestroyEventListener(Action`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveDestroyEventListener(Action`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Services.NotificationService: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Services.INotificationService
  Events:
    System.EventHandler ProjectCreated: 
    System.EventHandler ProjectLoaded: 
    System.EventHandler GraphicSceneCreated: 
    System.EventHandler GraphicSceneDestroyed: 
    System.EventHandler PhysicSceneCreated: 
    System.EventHandler PhysicSceneDestroyed: 
  Methods:
    add_ProjectCreated(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_ProjectCreated(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_ProjectLoaded(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_ProjectLoaded(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_GraphicSceneCreated(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_GraphicSceneCreated(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_GraphicSceneDestroyed(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_GraphicSceneDestroyed(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_PhysicSceneCreated(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PhysicSceneCreated(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_PhysicSceneDestroyed(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PhysicSceneDestroyed(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    OnProjectCreated(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnProjectLoaded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnGraphicSceneCreated(Scene): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnGraphicSceneDestroyed(Scene): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnPhysicSceneCreated(PhysicScene): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnPhysicSceneDestroyed(PhysicScene): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnObjectCreated(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnObjectDestroyed(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddCreateEventListener(Action`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveCreateEventListener(Action`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddDestroyEventListener(Action`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveDestroyEventListener(Action`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Igneel.Services.IPickingResolver: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ResolveInstance(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearObjects(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddObject(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveObject(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.Services.IPickingService: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Igneel.IInitializable
    Igneel.IEnabletable
  Properties:
    System.Windows.Forms.Control ActiveControl 'get set' : 
    System.Object SelectedObject 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Object] SelectedObjects 'get ' : 
  Events:
    System.Action SelectionChanged: 
  Methods:
    AddControl(Control, Camera(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveControl(Control): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCamera(Control, Camera): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveCamera(Control): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_ActiveControl(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ActiveControl(Control): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SelectedObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SelectedObjects(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_SelectionChanged(Action): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_SelectionChanged(Action): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Services.IdPickingService: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Services.IPickingService
    Igneel.IInitializable
    Igneel.IEnabletable
    Igneel.Services.IPickingResolver
  Properties:
    Boolean Enable 'get set' : 
    System.Windows.Forms.Control ActiveControl 'get set' : 
    System.Object SelectedObject 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Object] SelectedObjects 'get ' : 
  Events:
    System.Action SelectionChanged: 
  Methods:
    add_SelectionChanged(Action): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_SelectionChanged(Action): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Enable(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Enable(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ActiveControl(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ActiveControl(Control): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddControl(Control, Camera(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveControl(Control): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetCamera(Control, Camera): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveCamera(Control): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResolveInstance(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ClearObjects(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddObject(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddObject(Object): PrivateScope, Public, HideBySig
    Remove(Object): PrivateScope, Public, HideBySig
    RemoveObject(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SelectedObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SelectedObjects(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Igneel.TagProcesors.TagProcessor: AutoLayout, AnsiClass, Class, Public, Abstract
  Methods:
    Register(TagProcessor): PrivateScope, Public, Static, HideBySig
    Remove(TagProcessor): PrivateScope, Public, Static, HideBySig
    Process(SceneNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessHeirarchy(SceneNode): PrivateScope, Public, Static, HideBySig
    BindTechnique(SceneNode, Match, NodeTechnique): PrivateScope, Public, Static, HideBySig
Class Igneel.TagProcesors.StaticShadowMapTagProcessor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.TagProcesors.TagProcessor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Process(SceneNode): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Bounds3: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Min : Public
    Igneel.Vector3 Max : Public
Class Igneel.Collections.NamedItemCollection`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, Igneel.INameable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[T]
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    T Item [Int32] 'get set' : 
    T Item [System.String] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    IndexOf(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    Add(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, HideBySig
Class Igneel.Collections.ObservedDictionary`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(System.Action`1[TValue], System.Action`1[TValue], System.Func`2[TValue,TKey]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.Action`1[TValue], System.Action`1[TValue], System.Func`2[TValue,TKey]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[TValue]
    System.Collections.Generic.IEnumerable`1[TValue]
    System.Collections.IEnumerable
  Properties:
    TValue Item [Int32] 'get ' : 
    TValue Item [TKey] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(TKey): PrivateScope, Public, HideBySig, SpecialName
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, HideBySig
    Add(TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(TKey): PrivateScope, Public, HideBySig
    CopyTo(TValue[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IndexOf(TValue): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    AddRange(IEnumerable`1): PrivateScope, Public, HideBySig
    RemoveRange(IEnumerable`1): PrivateScope, Public, HideBySig
    Remove(TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ChangeKey(TKey, TKey): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
Class Igneel.Collections.ObservedCollection`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(System.Action`1[TValue], System.Action`2[TValue,System.Int32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.Action`1[TValue], System.Action`2[TValue,System.Int32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[TValue]
    System.Collections.Generic.IEnumerable`1[TValue]
    System.Collections.IEnumerable
  Properties:
    TValue Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Add(TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(TValue[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IndexOf(TValue): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    AddRange(IEnumerable`1): PrivateScope, Public, HideBySig
    RemoveRange(IEnumerable`1): PrivateScope, Public, HideBySig
    Remove(TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, HideBySig
Class Igneel.Collections.ReadOnlyDictionary`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IReadOnlyDictionary`2[TKey,TValue]
    System.Collections.Generic.IReadOnlyCollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.IEnumerable
  Properties:
    System.Collections.Generic.IEnumerable`1[TKey] Keys 'get ' : 
    System.Collections.Generic.IEnumerable`1[TValue] Values 'get ' : 
    TValue Item [TKey] 'get ' : 
    TValue Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    ContainsKey(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
Class Igneel.Collections.ReadOnlyList`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IReadOnlyList`1[T]
    System.Collections.Generic.IReadOnlyCollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    T Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
Class Igneel.Design.Controls.AngleControl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Angle 'get set' : 
  Events:
    System.EventHandler AngleChanged: 
  Methods:
    add_AngleChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AngleChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    set_Angle(Double): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.Controls.AttitudePicker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Events:
    System.EventHandler OrientationChanged: 
  Methods:
    add_OrientationChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OrientationChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.Controls.ColorPicker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Vector3 ColorValue 'get set' : 
  Events:
    System.EventHandler ColorChanged: 
  Methods:
    add_ColorChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ColorChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_ColorValue(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorValue(Vector3): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.Controls.DirectionPicker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Vector3 Direction 'get set' : 
  Events:
    System.EventHandler DirectionChanged: 
  Methods:
    add_DirectionChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_DirectionChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    set_Direction(Vector3): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.Controls.EulerEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(Igneel.Euler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Euler Orientation 'get ' : 
  Events:
    System.Action`2[System.Object,Igneel.Euler] EulerChanged: 
  Methods:
    add_EulerChanged(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_EulerChanged(Action`2): PrivateScope, Public, HideBySig, SpecialName
    get_Orientation(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.Controls.NumericStep: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Value 'get set' : 
    Single Step 'get set' : 
    Single Maximum 'get set' : 
    Single Minimum 'get set' : 
  Events:
    System.EventHandler ValueChanged: 
  Methods:
    add_ValueChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ValueChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    set_Step(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Single): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.Controls.Vector3Editor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(Igneel.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Vector3 Value 'get ' : 
  Events:
    System.Action`2[System.Object,Igneel.Vector3] VectorChanged: 
  Methods:
    add_VectorChanged(Action`2): PrivateScope, Public, HideBySig, SpecialName
    remove_VectorChanged(Action`2): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.ShallowedPropertyDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.PropertyDescriptor
    Void .ctor(System.ComponentModel.PropertyDescriptor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.ComponentModel.PropertyDescriptor Property 'get ' : 
    System.Type ComponentType 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Type PropertyType 'get ' : 
  Methods:
    get_Property(): PrivateScope, Public, HideBySig, SpecialName
    CanResetValue(Object): PrivateScope, Public, Virtual, HideBySig
    get_ComponentType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PropertyType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ResetValue(Object): PrivateScope, Public, Virtual, HideBySig
    GetValue(Object): PrivateScope, Public, Virtual, HideBySig
    SetValue(Object, Object): PrivateScope, Public, Virtual, HideBySig
    ShouldSerializeValue(Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.DeferredPropertyDescriptors: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Design.ShallowedPropertyDescriptor
    Void .ctor(System.ComponentModel.PropertyDescriptor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetValue(Object, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.LockeablePropertyDescriptors: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Design.ShallowedPropertyDescriptor
    Void .ctor(System.ComponentModel.PropertyDescriptor, System.Action`1[System.Action]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetValue(Object, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.ConstrainToPropertyDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Design.ShallowedPropertyDescriptor
    Void .ctor(System.ComponentModel.PropertyDescriptor, System.Predicate`1[System.Object]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetValue(Object): PrivateScope, Public, Virtual, HideBySig
    SetValue(Object, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.PropertyDescriptorAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type DescriptorType 'get set' : 
  Methods:
    get_DescriptorType(): PrivateScope, Public, HideBySig, SpecialName
    set_DescriptorType(Type): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.Forms.AttitudePickerForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Euler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Euler Orientation 'get set' : 
  Events:
    System.EventHandler OrientationChanged: 
  Methods:
    add_OrientationChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OrientationChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Orientation(): PrivateScope, Public, HideBySig, SpecialName
    set_Orientation(Euler): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Design.DesignTypeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Action`1[System.Action] LockFunction 'get set' : 
  Methods:
    get_LockFunction(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LockFunction(Action`1): PrivateScope, Public, Static, HideBySig, SpecialName
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    GetPropertiesSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetProperties(ITypeDescriptorContext, Object, Attribute[]): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.ObjectPropertyTab: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Design.PropertyTab
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TabName 'get ' : 
  Methods:
    GetProperties(Object, Attribute[]): PrivateScope, Public, Virtual, HideBySig
    get_TabName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Igneel.Design.Forms.TypeProviderForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[System.Type] Types 'get ' : 
    System.Collections.Generic.List`1[System.Reflection.Assembly] Assemblys 'get ' : 
    System.Type BaseType 'get ' : 
    System.Type SelectedType 'get ' : 
  Methods:
    get_Types(): PrivateScope, Public, HideBySig, SpecialName
    get_Assemblys(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseType(): PrivateScope, Public, HideBySig, SpecialName
    get_SelectedType(): PrivateScope, Public, HideBySig, SpecialName
    Initialize(): PrivateScope, Public, HideBySig
    AddAssembly(Assembly): PrivateScope, Public, HideBySig
    GetSelectedTechniques(): PrivateScope, Public, HideBySig
Interface Igneel.Design.IPDProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CreateProperty(Object, PropertyDescriptor, Attribute[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Design.PDProviderAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
  Interfaces:
    Igneel.Design.IPDProvider
  Methods:
    CreateProperty(Object, PropertyDescriptor, Attribute[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Design.DeferredAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Design.PDProviderAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProperty(Object, PropertyDescriptor, Attribute[]): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.LockOnSetAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Design.PDProviderAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProperty(Object, PropertyDescriptor, Attribute[]): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.DynamicEditableAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Design.PDProviderAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProperty(Object, PropertyDescriptor, Attribute[]): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.PropertyConstrainAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Design.PDProviderAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateProperty(Object, PropertyDescriptor, Attribute[]): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UIActionEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Action Action 'get set' : 
  Methods:
    get_Action(): PrivateScope, Public, HideBySig, SpecialName
    set_Action(Action): PrivateScope, Public, HideBySig, SpecialName
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UIAttitudeTypeEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPaintValueSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UIColorTypeEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPaintValueSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    PaintValue(PaintValueEventArgs): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UICreatorEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPaintValueSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UIDirectionEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UIInmediateNumericEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UIRadianTypeEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPaintValueSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    PaintValue(PaintValueEventArgs): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UIAngleTypeEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPaintValueSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    PaintValue(PaintValueEventArgs): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UIRotationMatrixEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPaintValueSupported(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Design.UITypeEditors.UIVector3TypeEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Drawing.Design.UITypeEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEditStyle(ITypeDescriptorContext): PrivateScope, Public, Virtual, HideBySig
    EditValue(ITypeDescriptorContext, IServiceProvider, Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Generator: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GenerateId(): PrivateScope, Public, Static, HideBySig
    GenerateId(): PrivateScope, Public, Static, HideBySig
    GenerateStringId(): PrivateScope, Public, Static, HideBySig
Struct Igneel.Graphics.Color4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single R : Public
    Single G : Public
    Single B : Public
    Single A : Public
  Methods:
    op_Addition(Color4, Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Color4, Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Color4, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Color4, Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Color4, Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Color4, Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Color4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    ToColor(): PrivateScope, Public, HideBySig
    ToArgb(): PrivateScope, Public, HideBySig
    Saturate(Color4): PrivateScope, Public, Static, HideBySig
Class Igneel.Graphics.GraphicDeviceFailException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.InvalidOperationException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.FormatNotSupportedException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.InvalidOperationException
    Void .ctor(Igneel.Graphics.Format): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.Format Format 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(Format): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.CapabiityNotSupportedException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.NotImplementedException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.FilterNotSupportedException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.InvalidOperationException
    Void .ctor(Igneel.Graphics.Filter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.Filter Filter 'get set' : 
  Methods:
    get_Filter(): PrivateScope, Public, HideBySig, SpecialName
    set_Filter(Filter): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.InvalidMappingException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.InvalidOperationException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.DeviceInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 DisplayWidth 'get set' : 
    Int32 DisplayHeight 'get set' : 
    Igneel.Graphics.Format DisplayFormat 'get set' : 
    Igneel.Graphics.GraphicDeviceType DriverType 'get set' : 
    Igneel.Graphics.VertexProcessing VertexProcessing 'get set' : 
    Int32 SimultaneousRTCount 'get set' : 
    Int32 MaxTextureHeight 'get set' : 
    Int32 MaxTextureWidth 'get set' : 
    Int32 MaxStreams 'get set' : 
    Int32 MaxSimultaneousTextures 'get set' : 
    System.String DeviceName 'get set' : 
    Int32 DeviceId 'get set' : 
    Int32 RefreshRate 'get set' : 
    Igneel.Graphics.Multisampling MSAA 'get set' : 
  Methods:
    get_DisplayWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayFormat(Format): PrivateScope, Public, HideBySig, SpecialName
    get_DriverType(): PrivateScope, Public, HideBySig, SpecialName
    set_DriverType(GraphicDeviceType): PrivateScope, Public, HideBySig, SpecialName
    get_VertexProcessing(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexProcessing(VertexProcessing): PrivateScope, Public, HideBySig, SpecialName
    get_SimultaneousRTCount(): PrivateScope, Public, HideBySig, SpecialName
    set_SimultaneousRTCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxTextureHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxTextureHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxTextureWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxTextureWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxStreams(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxStreams(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSimultaneousTextures(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSimultaneousTextures(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceName(): PrivateScope, Public, HideBySig, SpecialName
    set_DeviceName(String): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceId(): PrivateScope, Public, HideBySig, SpecialName
    set_DeviceId(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RefreshRate(): PrivateScope, Public, HideBySig, SpecialName
    set_RefreshRate(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MSAA(): PrivateScope, Public, HideBySig, SpecialName
    set_MSAA(Multisampling): PrivateScope, Public, HideBySig, SpecialName
Struct Igneel.Graphics.Filter: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.Filter Anisotropic = 85 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter ComparisonAnisotropic = 213 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter ComparisonMinLinearMagMipPoint = 144 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter ComparisonMinLinearMagPointMipLinear = 145 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter ComparisonMinMagLinearMipPoint = 148 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter ComparisonMinMagMipLinear = 149 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter ComparisonMinMagMipPoint = 128 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter ComparisonMinMagPointMipLinear = 129 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter ComparisonMinPointMagLinearMipPoint = 132 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter ComparisonMinPointMagMipLinear = 133 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter MinLinearMagMipPoint = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter MinLinearMagPointMipLinear = 17 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter MinMagLinearMipPoint = 20 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter MinMagMipLinear = 21 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter MinMagMipPoint = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter MinMagPointMipLinear = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter MinPointMagLinearMipPoint = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter MinPointMagMipLinear = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Filter Texture1Bit = 2147483648 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.TextureAddressMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.TextureAddressMode Border = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.TextureAddressMode Clamp = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.TextureAddressMode Mirror = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.TextureAddressMode MirrorOnce = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.TextureAddressMode Wrap = 1 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.FormatSupport: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.FormatSupport BlendOperation = 32768 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport Buffer = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport CpuLocking = 131072 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport DepthStencil = 65536 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport FormatCastSupport = 1048576 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport FormatDisplaySupport = 524288 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport FormatMultisampleLoadSupport = 4194304 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport FormatMultisampleRenderTargetSupport = 2097152 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport IndexBuffer = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport MipMap = 4096 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport MipMapAutoGeneration = 8192 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport MultisampleResolve = 262144 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport None = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport RenderTarget = 16384 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport ShaderLoadIntrinsic = 256 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport ShaderSampleComparisonIntrinsic = 1024 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport ShaderSampleIntrinsic = 512 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport StreamOutputBuffer = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport Texture1D = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport Texture2D = 32 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport Texture3D = 64 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport TextureCube = 128 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FormatSupport VertexBuffer = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.GraphicDeviceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.GraphicDeviceType Hardware = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GraphicDeviceType NullReference = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GraphicDeviceType Reference = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.GraphicDeviceType Software = 3 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.VertexProcessing: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.VertexProcessing Hardware = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.VertexProcessing Software = 3 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.ClearFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.ClearFlags All = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ClearFlags None = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ClearFlags Stencil = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ClearFlags Target = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ClearFlags ZBuffer = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.PresentionInterval: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int64 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.PresentionInterval Default = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.PresentionInterval One = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.PresentionInterval Two = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.PresentionInterval Three = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.PresentionInterval Four = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.PresentionInterval Immediate = 2147483648 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.GraphicDeviceDesc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Adapter : Public
    Boolean FullScreen : Public
    Igneel.Graphics.Format BackBufferFormat : Public
    Igneel.Graphics.Format DepthStencilFormat : Public
    Int32 BackBufferWidth : Public
    Int32 BackBufferHeight : Public
    Igneel.Graphics.Multisampling MSAA : Public
    Igneel.Graphics.GraphicDeviceType DriverType : Public
    IntPtr WindowsHandle : Public
    Igneel.Graphics.PresentionInterval Interval : Public
Class Igneel.Graphics.GraphicManager: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Properties:
    Igneel.Graphics.GraphicManager Manager 'get ' : 
  Methods:
    get_Manager(): PrivateScope, Public, Static, HideBySig, SpecialName
    CreateDevice(GraphicDeviceDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckFormatSupport(Int32, GraphicDeviceType, Format, BindFlags, ResourceType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckMultisampleQualityLevels(Int32, GraphicDeviceType, Format, Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckDeviceType(Int32, GraphicDeviceType, Format, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompileFromMemory(String, ShaderMacro[], Include, String, String, ShaderFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompileFromFile(String, ShaderMacro[], Include, String, String, ShaderFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Igneel.Graphics.SamplerDesc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Graphics.SamplerDesc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Graphics.Filter Filter : Public
    Igneel.Graphics.TextureAddressMode AddressU : Public
    Igneel.Graphics.TextureAddressMode AddressV : Public
    Igneel.Graphics.TextureAddressMode AddressW : Public
    Single MipLODBias : Public
    Int32 MaxAnisotropy : Public
    Igneel.Graphics.Comparison ComparisonFunc : Public
    Igneel.Graphics.Color4 BorderColor : Public
    Single MinLOD : Public
    Single MaxLOD : Public
  Methods:
    SetDefaults(): PrivateScope, Public, HideBySig
    GetDefaults(): PrivateScope, Public, Static, HideBySig
Class Igneel.Graphics.GraphicDeviceState`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T State    'get ' : 
  Methods:
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
Class Igneel.Graphics.SamplerState: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.GraphicDeviceState`1[Igneel.Graphics.SamplerDesc]
    Void .ctor(Igneel.Graphics.SamplerDesc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.SamplerState Linear 'get ' : 
    Igneel.Graphics.SamplerState Point 'get ' : 
  Methods:
    get_Linear(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Point(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Igneel.Graphics.StencilOperations: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Graphics.StencilOperations): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Graphics.StencilOperation StencilFailOp : Public
    Igneel.Graphics.StencilOperation StencilDepthFailOp : Public
    Igneel.Graphics.StencilOperation StencilPassOp : Public
    Igneel.Graphics.Comparison StencilFunc : Public
  Methods:
    SetDefaults(): PrivateScope, Public, HideBySig
Struct Igneel.Graphics.DepthStencilDesc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Graphics.DepthStencilDesc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean DepthEnable : Public
    Boolean WriteEnable : Public
    Igneel.Graphics.Comparison DepthFunc : Public
    Boolean StencilEnable : Public
    Int32 StencilReadMask : Public
    Int32 StencilWriteMask : Public
    Igneel.Graphics.StencilOperations FrontFace : Public
    Igneel.Graphics.StencilOperations BackFace : Public
  Properties:
    Igneel.Graphics.DepthStencilDesc Default 'get ' : 
  Methods:
    SetDefaults(): PrivateScope, Public, HideBySig
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Igneel.Graphics.DepthStencilState: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.GraphicDeviceState`1[Igneel.Graphics.DepthStencilDesc]
    Void .ctor(Igneel.Graphics.DepthStencilDesc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Igneel.Graphics.Comparison: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.Comparison Always = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Comparison Equal = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Comparison Greater = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Comparison GreaterEqual = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Comparison Less = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Comparison LessEqual = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Comparison Never = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Comparison NotEqual = 6 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.StencilOperation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.StencilOperation Decrement = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StencilOperation DecrementAndClamp = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StencilOperation Increment = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StencilOperation IncrementAndClamp = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StencilOperation Invert = 6 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StencilOperation Keep = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StencilOperation Replace = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.StencilOperation Zero = 2 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.GraphicDevice: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
    Void .ctor(Igneel.Graphics.GraphicDeviceDesc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.RenderTarget OMBackBuffer 'get ' : 
    Igneel.Graphics.DepthStencil OMBackDepthStencil 'get ' : 
    Igneel.Graphics.BlendState OMBlendState 'get set' : 
    Igneel.Graphics.DepthStencilState OMDepthStencilState 'get set' : 
    Igneel.Graphics.DepthStencil OMDepthStencil 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Igneel.Graphics.SwapChain] SwapChains 'get ' : 
    Igneel.Graphics.RasterizerState RSState 'get set' : 
    Igneel.Graphics.ViewPort RSViewPort 'get set' : 
    Igneel.Rectangle RSScissorRect 'get set' : 
    Igneel.Graphics.DeviceInfo Info 'get set' : 
    Boolean FullScreen 'get set' : 
    Boolean SupportStreamOutput 'get set' : 
    Igneel.Graphics.InputLayout IAInputLayout 'get set' : 
    Igneel.Graphics.IAPrimitive IAPrimitiveTopology 'get set' : 
    Igneel.Graphics.ShaderProgram Program 'get set' : 
    Int32 NumVSSamplerSlots 'get ' : 
    Int32 NumPSSamplerSlots 'get ' : 
  Methods:
    set_Program(ShaderProgram): PrivateScope, Public, HideBySig, SpecialName
    get_NumVSSamplerSlots(): PrivateScope, Public, HideBySig, SpecialName
    get_NumPSSamplerSlots(): PrivateScope, Public, HideBySig, SpecialName
    PSGetSampler(Int32): PrivateScope, Public, HideBySig
    PSSetSampler(Int32, SamplerState): PrivateScope, Public, HideBySig
    GetTexture(Int32): PrivateScope, Public, HideBySig
    SetTexture(Int32, Texture): PrivateScope, Public, HideBySig
    VSGetSampler(Int32): PrivateScope, Public, HideBySig
    VSSetSampler(Int32, SamplerState): PrivateScope, Public, HideBySig
    CreateProgram(ShaderProgramDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PushGraphicState(T): PrivateScope, Public, HideBySig
    PopGraphicState(): PrivateScope, Public, HideBySig
    get_OMBackBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_OMBackDepthStencil(): PrivateScope, Public, HideBySig, SpecialName
    get_OMBlendState(): PrivateScope, Public, HideBySig, SpecialName
    set_OMBlendState(BlendState): PrivateScope, Public, HideBySig, SpecialName
    get_OMDepthStencilState(): PrivateScope, Public, HideBySig, SpecialName
    set_OMDepthStencilState(DepthStencilState): PrivateScope, Public, HideBySig, SpecialName
    get_OMDepthStencil(): PrivateScope, Public, HideBySig, SpecialName
    set_OMDepthStencil(DepthStencil): PrivateScope, Public, HideBySig, SpecialName
    get_SwapChains(): PrivateScope, Public, HideBySig, SpecialName
    CreateRenderTarget(Int32, Int32, Format, Multisampling(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateRenderTarget(SubResource, Multisampling(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDepthStencil(Int32, Int32, Format, Multisampling(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDepthStencil(SubResource): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateBlendState(BlendDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDepthStencilState(DepthStencilDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSwapChain(SwapChainDesc): PrivateScope, Public, HideBySig
    OMGetRenderTarget(Int32): PrivateScope, Public, HideBySig
    OMGetRenderTargets(Int32, RenderTarget[]): PrivateScope, Public, HideBySig
    OMSetRenderTargets(Int32, RenderTarget[], DepthStencil): PrivateScope, Public, HideBySig
    OMSetRenderTargets(Int32, RenderTarget[]): PrivateScope, Public, HideBySig
    OMSetRenderTarget(Int32, RenderTarget, DepthStencil): PrivateScope, Public, HideBySig
    OMSetRenderTarget(Int32, RenderTarget): PrivateScope, Public, HideBySig
    OMSetRenderTargetsImp(Int32, RenderTarget[], DepthStencil): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OMSetRenderTargetImpl(Int32, RenderTarget, DepthStencil): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OMSaveRenderTarget(Int32): PrivateScope, Public, HideBySig
    OMRestoreRenderTarget(Int32): PrivateScope, Public, HideBySig
    get_RSState(): PrivateScope, Public, HideBySig, SpecialName
    set_RSState(RasterizerState): PrivateScope, Public, HideBySig, SpecialName
    get_RSViewPort(): PrivateScope, Public, HideBySig, SpecialName
    set_RSViewPort(ViewPort): PrivateScope, Public, HideBySig, SpecialName
    get_RSScissorRect(): PrivateScope, Public, HideBySig, SpecialName
    set_RSScissorRect(Rectangle): PrivateScope, Public, HideBySig, SpecialName
    CreateRasterizerState(RasterizerDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Info(): PrivateScope, Public, HideBySig, SpecialName
    get_FullScreen(): PrivateScope, Public, HideBySig, SpecialName
    set_FullScreen(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SupportStreamOutput(): PrivateScope, Public, HideBySig, SpecialName
    SOSetTarget(Int32, GraphicBuffer, Int32): PrivateScope, Public, HideBySig
    SOGetTarget(Int32, Int32&(Out)): PrivateScope, Public, HideBySig
    Clear(ClearFlags, Color4, Single, Color4): PrivateScope, Public, HideBySig
    BeginRender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Present(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndRender(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateTextureFromFile(ResourceType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSamplerState(SamplerDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateTexture1D(Texture1DDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateTexture2D(Texture2DDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateTexture3D(Texture3DDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateTextureCube(TextureCubeDesc): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clear(ClearFlags, Int32, Single, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Draw(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawIndexed(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawUser(Int32, Void*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawIndexedUser(Int32, Int32, Int32, Void*, IndexFormat, Void*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResizeBackBuffer(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UpdateSubResource(SubResource, SubResource): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DrawUser(Int32, T[]): PrivateScope, Public, HideBySig
    DrawIndexedUser(Int32, Int32, Int32, I[], T[]): PrivateScope, Public, HideBySig
    CreateInputLayout(DataBuffer): PrivateScope, Public, HideBySig
    get_IAInputLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_IAInputLayout(InputLayout): PrivateScope, Public, HideBySig, SpecialName
    get_IAPrimitiveTopology(): PrivateScope, Public, HideBySig, SpecialName
    set_IAPrimitiveTopology(IAPrimitive): PrivateScope, Public, HideBySig, SpecialName
    CreateInputLayout(VertexElement[], DataBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateVertexBuffer(Int32, Int32, ResourceUsage(Optional, HasDefault), MapType(Optional, HasDefault), Array(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateIndexBuffer(Int32, IndexFormat(Optional, HasDefault), ResourceUsage(Optional, HasDefault), MapType(Optional, HasDefault), Array(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IASetVertexBuffer(Int32, GraphicBuffer, Int32): PrivateScope, Public, HideBySig
    IASetVertexBuffer(Int32, GraphicBuffer, Int32, Int32): PrivateScope, Public, HideBySig
    IAGetVertexBuffer(Int32, Int32&(Out)): PrivateScope, Public, HideBySig
    IASetIndexBuffer(GraphicBuffer, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    IAGetVertexBuffer(Int32&(Out)): PrivateScope, Public, HideBySig
    CreateVertexBuffer(ResourceUsage(Optional, HasDefault), MapType(Optional, HasDefault), T[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateVertexBuffer(Int32, ResourceUsage(Optional, HasDefault), MapType(Optional, HasDefault), T[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    CreateIndexBuffer(ResourceUsage(Optional, HasDefault), MapType(Optional, HasDefault), T[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Program(): PrivateScope, Public, HideBySig, SpecialName
Struct Igneel.Graphics.MappedTexture2D: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 RowPitch : Public
    IntPtr DataPointer : Public
Struct Igneel.Graphics.MappedTexture3D: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 RowPitch : Public
    Int32 DepthPitch : Public
    IntPtr DataPointer : Public
Struct Igneel.Graphics.Multisampling: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Count : Public
    Int32 Quality : Public
  Properties:
    Igneel.Graphics.Multisampling Disable 'get ' : 
  Methods:
    get_Disable(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Igneel.Graphics.TextureDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 MipLevels : Public
    Igneel.Graphics.Format Format : Public
    Igneel.Graphics.Multisampling SamplerDesc : Public
    Igneel.Graphics.ResourceUsage Usage : Public
    Igneel.Graphics.BindFlags BindFlags : Public
    Igneel.Graphics.CpuAccessFlags CPUAccessFlags : Public
    Igneel.Graphics.ResourceOptionFlags Options : Public
Class Igneel.Graphics.Texture1DDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.TextureDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Width : Public
    Int32 ArraySize : Public
Class Igneel.Graphics.Texture2DDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.TextureDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Width : Public
    Int32 Height : Public
    Int32 ArraySize : Public
Class Igneel.Graphics.Texture3DDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.TextureDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Width : Public
    Int32 Height : Public
    Int32 Depth : Public
Class Igneel.Graphics.TextureCubeDesc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.TextureDesc
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 EdgeSize : Public
    Int32 ArraySize : Public
Class Igneel.Graphics.GraphicResource: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
  Properties:
    Igneel.Graphics.ResourceType Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.Surface: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.GraphicResource
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Igneel.Graphics.Format SurfaceFormat 'get ' : 
    Igneel.Graphics.Multisampling Sampling 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_SurfaceFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_Sampling(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.RenderTarget: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.Surface
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Map(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnMap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Graphics.DepthStencil: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.Surface
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Igneel.Graphics.BlendDesc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Graphics.BlendDesc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean AlphaToCoverageEnable : Public
    Boolean BlendEnable : Public
    Igneel.Graphics.Blend SrcBlend : Public
    Igneel.Graphics.Blend DestBlend : Public
    Igneel.Graphics.BlendOperation BlendOp : Public
    Igneel.Graphics.Blend SrcBlendAlpha : Public
    Igneel.Graphics.Blend DestBlendAlpha : Public
    Igneel.Graphics.BlendOperation BlendOpAlpha : Public
    UInt32 RenderTargetWriteMask : Public
  Properties:
    Igneel.Graphics.BlendDesc Default 'get ' : 
  Methods:
    SetDefaults(): PrivateScope, Public, HideBySig
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Igneel.Graphics.BlendState: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.GraphicDeviceState`1[Igneel.Graphics.BlendDesc]
    Void .ctor(Igneel.Graphics.BlendDesc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Igneel.Graphics.ViewPort: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Graphics.ViewPort]
  Fields:
    Int32 TopLeftX : Public
    Int32 TopLeftY : Public
    Int32 Width : Public
    Int32 Height : Public
    Single MinDepth : Public
    Single MaxDepth : Public
  Methods:
    Equals(ViewPort): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Igneel.Graphics.RenderState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.RenderState AdaptiveTessW = 183 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState AdaptiveTessX = 180 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState AdaptiveTessY = 181 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState AdaptiveTessZ = 182 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState AlphaBlendEnable = 27 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState AlphaFunc = 25 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState AlphaRef = 24 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState AlphaTestEnable = 15 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Ambient = 139 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState AmbientMaterialSource = 147 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState AntialiasedLineEnable = 176 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState BlendFactor = 193 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState BlendOperation = 171 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState BlendOperationAlpha = 209 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState CcwStencilFail = 186 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState CcwStencilFunc = 189 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState CcwStencilPass = 188 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState CcwStencilZFail = 187 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Clipping = 136 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ClipPlaneEnable = 152 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ColorVertex = 141 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ColorWriteEnable = 168 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ColorWriteEnable1 = 190 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ColorWriteEnable2 = 191 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ColorWriteEnable3 = 192 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState CullMode = 22 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState DebugMonitorToken = 165 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState DepthBias = 195 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState DestinationBlend = 20 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState DestinationBlendAlpha = 208 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState DiffuseMaterialSource = 145 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState DitherEnable = 26 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState EmissiveMaterialSource = 148 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState EnableAdaptiveTessellation = 184 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState FillMode = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState FogColor = 34 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState FogDensity = 38 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState FogEnable = 28 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState FogEnd = 37 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState FogStart = 36 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState FogTableMode = 35 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState FogVertexMode = 140 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState IndexedVertexBlendEnable = 167 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState LastPixel = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Lighting = 137 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState LocalViewer = 142 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState MaxTessellationLevel = 179 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState MinTessellationLevel = 178 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState MultisampleAntialias = 161 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState MultisampleMask = 162 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState NormalDegree = 173 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState NormalizeNormals = 143 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PatchEdgeStyle = 163 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PointScaleA = 158 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PointScaleB = 159 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PointScaleC = 160 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PointScaleEnable = 157 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PointSize = 154 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PointSizeMax = 166 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PointSizeMin = 155 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PointSpriteEnable = 156 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState PositionDegree = 172 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState RangeFogEnable = 48 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ScissorTestEnable = 174 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState SeparateAlphaBlendEnable = 206 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ShadeMode = 9 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState SlopeScaleDepthBias = 175 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState SourceBlend = 19 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState SourceBlendAlpha = 207 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState SpecularEnable = 29 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState SpecularMaterialSource = 146 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState SrgbWriteEnable = 194 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState StencilEnable = 52 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState StencilFail = 53 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState StencilFunc = 56 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState StencilMask = 58 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState StencilPass = 55 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState StencilRef = 57 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState StencilWriteMask = 59 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState StencilZFail = 54 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState TextureFactor = 60 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState TweenFactor = 170 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState TwoSidedStencilMode = 185 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState VertexBlend = 151 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap0 = 128 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap1 = 129 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap10 = 200 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap11 = 201 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap12 = 202 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap13 = 203 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap14 = 204 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap15 = 205 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap2 = 130 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap3 = 131 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap4 = 132 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap5 = 133 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap6 = 134 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap7 = 135 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap8 = 198 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState Wrap9 = 199 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ZEnable = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ZFunc = 23 : Public, Static, Literal, HasDefault
    Igneel.Graphics.RenderState ZWriteEnable = 14 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.FillMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.FillMode Solid = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.FillMode Wireframe = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.CullMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.CullMode Back = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.CullMode Front = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.CullMode None = 1 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.Blend: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.Blend BlendFactor = 14 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend BothInverseSourceAlpha = 13 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend DestinationAlpha = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend DestinationColor = 9 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend InverseBlendFactor = 15 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend InverseDestinationAlpha = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend InverseDestinationColor = 10 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend InverseSourceAlpha = 6 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend InverseSourceColor = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend InverseSourceColor2 = 17 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend One = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend SourceAlpha = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend SourceAlphaSaturated = 11 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend SourceColor = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend SourceColor2 = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Blend Zero = 1 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.BlendOperation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.BlendOperation Add = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BlendOperation Maximum = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BlendOperation Minimum = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BlendOperation ReverseSubtract = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BlendOperation Subtract = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.RasterizerDesc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Graphics.RasterizerDesc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Graphics.FillMode Fill : Public
    Igneel.Graphics.CullMode Cull : Public
    Int32 DepthBias : Public
    Single DepthBiasClamp : Public
    Single SlopeScaledDepthBias : Public
    Boolean DepthClipEnable : Public
    Boolean ScissorEnable : Public
    Boolean MultisampleEnable : Public
    Boolean AntialiasedLineEnable : Public
  Properties:
    Igneel.Graphics.RasterizerDesc Default 'get ' : 
  Methods:
    SetDefaults(): PrivateScope, Public, HideBySig
    get_Default(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.RasterizerState: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.GraphicDeviceState`1[Igneel.Graphics.RasterizerDesc]
    Void .ctor(Igneel.Graphics.RasterizerDesc): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Igneel.Graphics.IAFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.IAFormat Color = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Dec3N = 14 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Float1 = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Float2 = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Float3 = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Float4 = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat HalfFour = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat HalfTwo = 15 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Short2 = 6 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Short2N = 9 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Short4 = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Short4N = 10 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Ubyte4 = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat UByte4N = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat UDec3 = 13 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat Unused = 17 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat UShort2N = 11 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAFormat UShort4N = 12 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.IASemantic: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.IASemantic Binormal = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic BlendIndices = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic BlendWeight = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic Color = 10 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic Depth = 12 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic Fog = 11 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic Normal = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic PointSize = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic Position = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic PositionTransformed = 9 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic Sample = 13 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic Tangent = 6 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic TessellateFactor = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IASemantic TextureCoordinate = 5 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.IAPrimitive: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.IAPrimitive PointList = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAPrimitive LineList = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAPrimitive LineStrip = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAPrimitive TriangleList = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAPrimitive TriangleStrip = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IAPrimitive TriangleFan = 6 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.ResourceUsage: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.ResourceUsage Default = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceUsage Immutable = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceUsage Dynamic = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceUsage Staging = 3 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.MapType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.MapType Read = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.MapType Write = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.MapType ReadWrite = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.MapType Write_Discard = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.MapType Write_No_OverWrite = 5 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.IndexFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.IndexFormat Index16 = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IndexFormat Index32 = 1 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.ResourceOptionFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.ResourceOptionFlags GdiCompatible = 32 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceOptionFlags GenerateMipMaps = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceOptionFlags KeyedMutex = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceOptionFlags None = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceOptionFlags Shared = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceOptionFlags TextureCube = 4 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.InputLayout: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
Class Igneel.Graphics.DataBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(IntPtr, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr BufferPointer 'get ' : 
    Int64 Size 'get ' : 
  Methods:
    get_BufferPointer(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.SubResource: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.GraphicResource
  Properties:
    Igneel.Graphics.Texture Resource 'get ' : 
  Methods:
    get_Resource(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.Texture: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.GraphicResource
  Properties:
    System.String FileName 'get ' : 
    Igneel.Graphics.TextureDesc TextureDescription 'get set' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_TextureDescription(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.Texture3D: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.Texture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Int32 Depth 'get ' : 
    Igneel.Graphics.Texture3DDesc Description 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    Map(Int32, MapType, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnMap(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSubResource(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
Class Igneel.Graphics.Texture2D: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.Texture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Igneel.Graphics.Texture2DDesc Description 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    Map(Int32, MapType, Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnMap(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSubResource(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Igneel.Graphics.Format: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.Format UNKNOWN = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32B32A32_TYPELESS = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32B32A32_FLOAT = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32B32A32_UINT = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32B32A32_SINT = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32B32_TYPELESS = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32B32_FLOAT = 6 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32B32_UINT = 7 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32B32_SINT = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16B16A16_TYPELESS = 9 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16B16A16_FLOAT = 10 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16B16A16_UNORM = 11 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16B16A16_UINT = 12 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16B16A16_SNORM = 13 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16B16A16_SINT = 14 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32_TYPELESS = 15 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32_FLOAT = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32_UINT = 17 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G32_SINT = 18 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32G8X24_TYPELESS = 19 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format D32_FLOAT_S8X24_UINT = 20 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32_FLOAT_X8X24_TYPELESS = 21 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format X32_TYPELESS_G8X24_UINT = 22 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R10G10B10A2_TYPELESS = 23 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R10G10B10A2_UNORM = 24 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R10G10B10A2_UINT = 25 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R11G11B10_FLOAT = 26 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8B8A8_TYPELESS = 27 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8B8A8_UNORM = 28 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8B8A8_UNORM_SRGB = 29 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8B8A8_UINT = 30 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8B8A8_SNORM = 31 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8B8A8_SINT = 32 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16_TYPELESS = 33 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16_FLOAT = 34 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16_UNORM = 35 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16_UINT = 36 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16_SNORM = 37 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16G16_SINT = 38 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32_TYPELESS = 39 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format D32_FLOAT = 40 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32_FLOAT = 41 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32_UINT = 42 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R32_SINT = 43 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R24G8_TYPELESS = 44 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format D24_UNORM_S8_UINT = 45 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R24_UNORM_X8_TYPELESS = 46 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format X24_TYPELESS_G8_UINT = 47 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8_TYPELESS = 48 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8_UNORM = 49 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8_UINT = 50 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8_SNORM = 51 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8_SINT = 52 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16_TYPELESS = 53 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16_FLOAT = 54 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format D16_UNORM = 55 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16_UNORM = 56 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16_UINT = 57 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16_SNORM = 58 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R16_SINT = 59 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8_TYPELESS = 60 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8_UNORM = 61 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8_UINT = 62 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8_SNORM = 63 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8_SINT = 64 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format A8_UNORM = 65 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R1_UNORM = 66 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R9G9B9E5_SHAREDEXP = 67 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R8G8_B8G8_UNORM = 68 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format G8R8_G8B8_UNORM = 69 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC1_TYPELESS = 70 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC1_UNORM = 71 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC1_UNORM_SRGB = 72 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC2_TYPELESS = 73 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC2_UNORM = 74 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC2_UNORM_SRGB = 75 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC3_TYPELESS = 76 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC3_UNORM = 77 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC3_UNORM_SRGB = 78 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC4_TYPELESS = 79 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC4_UNORM = 80 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC4_SNORM = 81 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC5_TYPELESS = 82 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC5_UNORM = 83 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC5_SNORM = 84 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format B5G6R5_UNORM = 85 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format B5G5R5A1_UNORM = 86 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format B8G8R8A8_UNORM = 87 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format B8G8R8X8_UNORM = 88 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format R10G10B10_XR_BIAS_A2_UNORM = 89 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format B8G8R8A8_TYPELESS = 90 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format B8G8R8A8_UNORM_SRGB = 91 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format B8G8R8X8_TYPELESS = 92 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format B8G8R8X8_UNORM_SRGB = 93 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC6H_TYPELESS = 94 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC6H_UF16 = 95 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC6H_SF16 = 96 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC7_TYPELESS = 97 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC7_UNORM = 98 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format BC7_UNORM_SRGB = 99 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format X8R8G8B8 = 88 : Public, Static, Literal, HasDefault
    Igneel.Graphics.Format A8R8G8B8 = 28 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.BindFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.BindFlags ConstantBuffer = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BindFlags DepthStencil = 64 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BindFlags IndexBuffer = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BindFlags None = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BindFlags RenderTarget = 32 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BindFlags ShaderResource = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BindFlags StreamOutput = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.BindFlags VertexBuffer = 1 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.CpuAccessFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.CpuAccessFlags None = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.CpuAccessFlags Read = 131072 : Public, Static, Literal, HasDefault
    Igneel.Graphics.CpuAccessFlags Write = 65536 : Public, Static, Literal, HasDefault
Class Igneel.Graphics.Texture1D: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.Texture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Width 'get ' : 
    Igneel.Graphics.Texture1DDesc Description 'get set' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    Map(Int32, MapType, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnMap(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSubResource(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
Class Igneel.Graphics.TextureCube: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.Texture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 EdgeSize 'get ' : 
    Igneel.Graphics.Format Format 'get ' : 
    Igneel.Graphics.TextureCubeDesc Description 'get ' : 
  Methods:
    get_EdgeSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    Map(Int32, Int32, MapType, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnMap(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSubResource(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
Class Igneel.Graphics.VariableNameAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.VariableSemanticAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.EffectVariable: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Igneel.Graphics.Effect Effect 'get ' : 
    System.String Name 'get set' : 
    System.Type ValueType 'get ' : 
  Methods:
    get_Effect(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    SetValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Commit(): PrivateScope, Public, HideBySig
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.EffectVariable`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :Igneel.Graphics.EffectVariable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T Value : Public
  Properties:
    System.Type ValueType 'get ' : 
  Methods:
    SetValue(): PrivateScope, Public, Virtual, HideBySig
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Igneel.Graphics.EffectVariableArray`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :Igneel.Graphics.EffectVariable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T[] Value : Public
    Int32 Size : Public, Static
  Properties:
    System.Type ValueType 'get ' : 
  Methods:
    SetValue(): PrivateScope, Public, Virtual, HideBySig
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Igneel.Graphics.IntEffectVariable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.EffectVariable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Value : Public
  Properties:
    System.Type ValueType 'get ' : 
  Methods:
    SetValue(): PrivateScope, Public, Final, Virtual, HideBySig
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Igneel.Graphics.IntArrayEffectVariable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.EffectVariable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[] Value : Public
  Properties:
    System.Type ValueType 'get ' : 
  Methods:
    SetValue(): PrivateScope, Public, Final, Virtual, HideBySig
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Igneel.Graphics.BoolEffectVariable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.EffectVariable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean Value : Public
  Properties:
    System.Type ValueType 'get ' : 
  Methods:
    SetValue(): PrivateScope, Public, Final, Virtual, HideBySig
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Igneel.Graphics.BoolArrayEffectVariable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.EffectVariable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean[] Value : Public
  Properties:
    System.Type ValueType 'get ' : 
  Methods:
    SetValue(): PrivateScope, Public, Virtual, HideBySig
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Igneel.Graphics.FloatVariable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.EffectVariable`1[System.Single]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetValue(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.MatrixVariable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.EffectVariable`1[Igneel.Matrix]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetValue(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.Vector4Variable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.EffectVariable`1[Igneel.Vector4]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetValue(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.FloatVariableArray: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.EffectVariableArray`1[System.Single]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetValue(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.MatrixVariableArray: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.EffectVariableArray`1[Igneel.Matrix]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetValue(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Graphics.Vector4VariableArray: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Igneel.Graphics.EffectVariableArray`1[Igneel.Vector4]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetValue(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.ShaderFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.ShaderFlags AvoidFlowControl = 512 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags Debug = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags EnableBackwardsCompatibility = 4096 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags EnableIEEEStrictness = 8192 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags EnableStrictness = 2048 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags ForceSoftwarePixelShader = 128 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags ForceSoftwareVertexShader = 64 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags None = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags NoPreshader = 256 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags OptimizationLevel0 = 16384 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags OptimizationLevel1 = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags OptimizationLevel2 = 49152 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags OptimizationLevel3 = 32768 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags PackMatrixColumnMajor = 16 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags PackMatrixRowMajor = 8 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags PartialPrecision = 32 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags PreferFlowControl = 1024 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags SkipOptimization = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags SkipValidation = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ShaderFlags WarningsAreErrors = 262144 : Public, Static, Literal, HasDefault
Interface Igneel.Graphics.IUniformSetter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    SetValue(Void*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBool(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFloat(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMatrix(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetVector(Vector4): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetIntArray(Int32*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBoolArray(Boolean*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFloatArray(Single*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMatrixArray(Matrix*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetVectorArray(Vector4*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Igneel.Graphics.IncludeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.IncludeType Local = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.IncludeType System = 1 : Public, Static, Literal, HasDefault
Interface Igneel.Graphics.Include: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Close(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Open(IncludeType, String, IntPtr, IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Igneel.Graphics.ShaderMacro: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String Name : Public
    System.String Value : Public
Class Igneel.Graphics.Shader: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.ResourceAllocator
Class Igneel.Graphics.VertexShader: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.Shader
Class Igneel.Graphics.PixelShader: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.Shader
Class Igneel.Graphics.GraphicBuffer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Igneel.Graphics.GraphicResource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 SizeInBytes 'get ' : 
    Int32 Stride 'get set' : 
    Igneel.Graphics.ResourceUsage Usage 'get ' : 
    Igneel.Graphics.MapType CpuAccessType 'get ' : 
  Methods:
    get_SizeInBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_Stride(): PrivateScope, Public, HideBySig, SpecialName
    set_Stride(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Usage(): PrivateScope, Public, HideBySig, SpecialName
    get_CpuAccessType(): PrivateScope, Public, HideBySig, SpecialName
    Map(MapType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Unmap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Write(T[], Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Read(T[], Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Write(Void*, Int32, Int32): PrivateScope, Public, HideBySig
    Read(Void*, Int32, Int32): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Class Igneel.Graphics.VertexDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Igneel.Graphics.VertexElement[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type VertexType 'get set' : 
    Int32 Size 'get ' : 
    Igneel.Graphics.VertexElement[] Elements 'get ' : 
    Layout Format 'get ' : 
    Boolean HaveNormal 'get ' : 
    Boolean HaveTangent 'get ' : 
    Boolean HaveTexCoord 'get ' : 
  Methods:
    get_VertexType(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
    OffsetOf(IASemantic, Int32): PrivateScope, Public, HideBySig
    SizeOf(IASemantic, Int32): PrivateScope, Public, HideBySig
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    get_HaveNormal(): PrivateScope, Public, HideBySig, SpecialName
    get_HaveTangent(): PrivateScope, Public, HideBySig, SpecialName
    get_HaveTexCoord(): PrivateScope, Public, HideBySig, SpecialName
    HaveDeclarationUsage(IASemantic): PrivateScope, Public, HideBySig
    SizeOfElement(IAFormat): PrivateScope, Public, Static, HideBySig
    GetTypeFormat(Type): PrivateScope, Public, Static, HideBySig
    GetDescriptor(): PrivateScope, Public, Static, HideBySig
    GetDescriptor(Type): PrivateScope, Public, Static, HideBySig
    ReleaseDescriptor(): PrivateScope, Public, Static, HideBySig
Struct Igneel.Graphics.VertexDescriptor+Layout: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Layout Position = 1 : Public, Static, Literal, HasDefault
    Layout Tangent = 2 : Public, Static, Literal, HasDefault
    Layout Normal = 4 : Public, Static, Literal, HasDefault
    Layout TexCoord = 8 : Public, Static, Literal, HasDefault
Struct Igneel.Graphics.ResourceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Graphics.ResourceType Unknown = 0 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceType Buffer = 1 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceType Texture1D = 2 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceType Texture2D = 3 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceType Texture3D = 4 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceType TextureCube = 5 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceType RenderTarget = 6 : Public, Static, Literal, HasDefault
    Igneel.Graphics.ResourceType DephtStencil = 7 : Public, Static, Literal, HasDefault
Class Igneel.Boundable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetCullState(IBoundable, Plane[]): PrivateScope, Public, Static, HideBySig
    IsInsideFrustum(IBoundable, Plane[]): PrivateScope, Public, Static, HideBySig
    IsInsideRect(IBoundable, RectangleF): PrivateScope, Public, Static, HideBySig
Struct Igneel.Containment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Igneel.Containment Inside = 0 : Public, Static, Literal, HasDefault
    Igneel.Containment Partial = 1 : Public, Static, Literal, HasDefault
    Igneel.Containment Outside = 2 : Public, Static, Literal, HasDefault
Struct Igneel.Sphere: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte*, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Sphere]
  Fields:
    Igneel.Vector3 Center : Public
    Single Radius : Public
  Methods:
    GetTranformed(Matrix): PrivateScope, Public, HideBySig
    GetTranformed(Matrix, Vector3&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    GetGeometry(Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetCullState(Sphere, Plane[]): PrivateScope, Public, Static, HideBySig
    IsInsideFrustum(Sphere, Plane[]): PrivateScope, Public, Static, HideBySig
    IsInsideRect(Sphere, RectangleF): PrivateScope, Public, Static, HideBySig
    Equals(Sphere): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Box: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Matrix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Box]
  Fields:
    Igneel.Vector3 Translation : Public
    Igneel.Vector3 Extends : Public
    Igneel.Matrix Rotation : Public
  Methods:
    ToVolume(): PrivateScope, Public, HideBySig
    GetGeometry(): PrivateScope, Public, HideBySig
    Equals(Box): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Igneel.Segment: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 P0 : Public
    Igneel.Vector3 P1 : Public
Struct Igneel.Capsule: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Segment Segment : Public
    Single Radius : Public
Struct Igneel.AABB: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Minimum : Public
    Igneel.Vector3 Maximum : Public
Struct Igneel.Triangle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Vector3, Igneel.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 P0 : Public
    Igneel.Vector3 P1 : Public
    Igneel.Vector3 P2 : Public
    Igneel.Vector3 Normal : Public
  Methods:
    ComputeFaceNormal(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    ComputeFaceTangent(Vector3, Vector2, Vector3, Vector2, Vector3, Vector2): PrivateScope, Public, Static, HideBySig
Class Igneel.Rand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Uniform01(): PrivateScope, Public, Static, HideBySig
    Uniform(Single, Single): PrivateScope, Public, Static, HideBySig
    RandomUnitVector(): PrivateScope, Public, Static, HideBySig
Class Igneel.Affectable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    BindTo(IAffectable, IAffector): PrivateScope, Public, Static, HideBySig
    UnBindFrom(IAffectable, IAffector): PrivateScope, Public, Static, HideBySig
Class Igneel.Deferreable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Commit(T): PrivateScope, Public, Static, HideBySig
Class Igneel.UpdateEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IDynamic, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IDynamic, Single, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Dynamic: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    SetUpdate(T, UpdateEventHandler): PrivateScope, Public, Static, HideBySig
Struct Igneel.CyCoord: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Theta : Public
    Single Y : Public
    Single Radius : Public
  Methods:
    ToCartesian(): PrivateScope, Public, HideBySig
    FromCartesian(Vector3): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Euler: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Euler]
  Fields:
    Single Heading : Public
    Single Pitch : Public
    Single Roll : Public
    Igneel.Euler Empty : Public, Static
    Single PI = 3.141593 : Public, Static, Literal, HasDefault
    Single TwoPI = 6.283185 : Public, Static, Literal, HasDefault
    Single PIover2 = 1.570796 : Public, Static, Literal, HasDefault
    Single PIover3 = 1.047198 : Public, Static, Literal, HasDefault
    Single PIover4 = 0.7853982 : Public, Static, Literal, HasDefault
    Single PIover6 = 1.570796 : Public, Static, Literal, HasDefault
  Properties:
    Single HeadingAngle 'get set' : 
    Single PitchAngle 'get set' : 
    Single RollAngle 'get set' : 
  Methods:
    ToRadians(Single): PrivateScope, Public, Static, HideBySig
    ToAngle(Single): PrivateScope, Public, Static, HideBySig
    ToDirection(): PrivateScope, Public, HideBySig
    ToMatrix(): PrivateScope, Public, HideBySig
    ToQuaternion(): PrivateScope, Public, HideBySig
    NormalizeHeading(Single): PrivateScope, Public, Static, HideBySig
    NormalizePitch(Single): PrivateScope, Public, Static, HideBySig
    NormalizeRoll(Single): PrivateScope, Public, Static, HideBySig
    Normalize(Euler): PrivateScope, Public, Static, HideBySig
    GetFrameFromOrientation(Vector3&(Out), Vector3&(Out), Vector3&(Out)): PrivateScope, Public, HideBySig
    GetFrame(Euler, Vector3&(Out), Vector3&(Out), Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    FromMatrix(Matrix): PrivateScope, Public, Static, HideBySig
    FromFrame(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    FromQuaternion(Quaternion): PrivateScope, Public, Static, HideBySig
    FromAxis(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    FromDirection(Vector3): PrivateScope, Public, Static, HideBySig
    get_HeadingAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_HeadingAngle(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PitchAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_PitchAngle(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RollAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_RollAngle(Single): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(Euler, Euler): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Euler, Euler): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Euler, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Euler): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Euler, Euler): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Euler, Euler): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Euler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class Igneel.Numerics: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Single PI = 3.141593 : Public, Static, Literal, HasDefault
    Single TwoPI = 6.283185 : Public, Static, Literal, HasDefault
    Single PIover2 = 1.570796 : Public, Static, Literal, HasDefault
    Single PIover3 = 1.047198 : Public, Static, Literal, HasDefault
    Single PIover4 = 0.7853982 : Public, Static, Literal, HasDefault
    Single PIover6 = 1.570796 : Public, Static, Literal, HasDefault
    Single E = 2.718282 : Public, Static, Literal, HasDefault
    Single Epsilon = 0.0005 : Public, Static, Literal, HasDefault
  Methods:
    ToRadians(Single): PrivateScope, Public, Static, HideBySig
    ToAngle(Single): PrivateScope, Public, Static, HideBySig
    Frag(Single): PrivateScope, Public, Static, HideBySig
    Saturate(Single): PrivateScope, Public, Static, HideBySig
    Clamp(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Single*, Single*, Single*, Single, Int32): PrivateScope, Public, Static, HideBySig
    Lerp(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    LInterp(Single[], Single[], Single): PrivateScope, Public, Static, HideBySig
    CInterp(Single[], Single[], Single): PrivateScope, Public, Static, HideBySig
    PInterp(Single[], Single[], Single): PrivateScope, Public, Static, HideBySig
    Bezier(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Bezier(Vector2, Vector2, Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    Bezier(Single*, Single*, Single*, Single*, Single, Single*, Int32): PrivateScope, Public, Static, HideBySig
    Bezier(Single*, Single*, Single, Single, Single, Single*, Int32): PrivateScope, Public, Static, HideBySig
    Hermite(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Vector2, Vector2, Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Single*, Single*, Single*, Single*, Single, Single*, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Single*, Single*, Single, Single, Single, Single*, Single): PrivateScope, Public, Static, HideBySig
    GaussianDistribution(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GetGaussianOffsets(Boolean, Vector2, Vector2[], Single[]): PrivateScope, Public, Static, HideBySig
    DoubleFactorial(Int32): PrivateScope, Public, Static, HideBySig
    Factorial(Int32): PrivateScope, Public, Static, HideBySig
    DerivateForward1(Single[], Int32, Single): PrivateScope, Public, Static, HideBySig
    DerivateForward1(Single*, Single): PrivateScope, Public, Static, HideBySig
    DerivateForward1(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    DerivateForward1(Vector3[], Int32, Single): PrivateScope, Public, Static, HideBySig
    DerivateForward1(Vector3*, Single): PrivateScope, Public, Static, HideBySig
    IsZero(Single, Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsEqual(Single, Single, Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Struct Igneel.Spherical: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Theta : Public
    Single Phi : Public
  Properties:
    Single ThetaAngle 'get set' : 
    Single PhiAngle 'get set' : 
  Methods:
    get_ThetaAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_ThetaAngle(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PhiAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_PhiAngle(Single): PrivateScope, Public, HideBySig, SpecialName
    ToCartesian(): PrivateScope, Public, HideBySig
    FromDirection(Vector3): PrivateScope, Public, Static, HideBySig
    ToCartesian(Single, Single): PrivateScope, Public, Static, HideBySig
    FromGrades(Single, Single): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Igneel.RegistratorAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.RenderRegistrator: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
Interface Igneel.INameChangingNotificator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Events:
    System.Action`2[System.Object,System.String] NameChanged: 
  Methods:
    add_NameChanged(Action`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_NameChanged(Action`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Igneel.Orientable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetEulerAngles(IRotable): PrivateScope, Public, Static, HideBySig
    SetEulerAngles(IRotable, Euler): PrivateScope, Public, Static, HideBySig
Interface Igneel.IDisposeNotifable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Methods:
    TargetDisposed(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Service: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Events:
    System.EventHandler Initialize: 
  Methods:
    Set(T): PrivateScope, Public, Static, HideBySig
    Set(): PrivateScope, Public, Static, HideBySig
    Remove(): PrivateScope, Public, Static, HideBySig
    Get(): PrivateScope, Public, Static, HideBySig
    GetNonNull(): PrivateScope, Public, Static, HideBySig
    Invoke(Action`1): PrivateScope, Public, Static, HideBySig
    Require(): PrivateScope, Public, Static, HideBySig
    SetFactory(): PrivateScope, Public, Static, HideBySig
    SetFactory(IFactory`1): PrivateScope, Public, Static, HideBySig
    SetFactory(Func`1): PrivateScope, Public, Static, HideBySig
    GetFactory(): PrivateScope, Public, Static, HideBySig
    CreateInstance(): PrivateScope, Public, Static, HideBySig
    add_Initialize(EventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_Initialize(EventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    OnInitialize(): PrivateScope, Public, Static, HideBySig
    Get(Type): PrivateScope, Public, Static, HideBySig
Class Igneel.Services.Factory`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T,  DefaultConstructor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Services.IFactory`1[T]
  Methods:
    CreateInstance(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Services.DelegateFactory`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Func`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Services.IFactory`1[T]
  Methods:
    CreateInstance(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Services.SingletonFactory`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Services.IFactory`1[T]
  Methods:
    CreateInstance(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Services.SingletonDisposableFactory`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, Igneel.IResourceAllocator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Services.IFactory`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Igneel.Services.IFactory`1[T]
  Methods:
    CreateInstance(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Igneel.Services.SingletonDisposableFactoryNew`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, Igneel.IResourceAllocator,  ReferenceType DefaultConstructor
  :Igneel.Services.SingletonDisposableFactory`1[T]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Services.SingletonDisposableFactoryDelegate`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, Igneel.IResourceAllocator,  ReferenceType
  :Igneel.Services.SingletonDisposableFactory`1[T]
    Void .ctor(System.Func`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Igneel.Services.IDependencyResolver`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Covariant ReferenceType
  Methods:
    GetDependencies(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Igneel.Services.ILogService: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Write(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteLine(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Igneel.Services.InitializationService: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[Igneel.IInitializable] values : Public
  Methods:
    Add(IInitializable): PrivateScope, Public, HideBySig
    InitializeItems(): PrivateScope, Public, HideBySig
Class Igneel.Graphics.ComposedShape`1[TVertex]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TVertex, System.ValueType,  NotNullableValueType DefaultConstructor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Graphics.ShapeBuilder`1[TVertex][] Shapes : Public
    Igneel.Graphics.ComposedShape`1[TVertex][] Components : Public
    Igneel.Matrix[] Transforms : Public
    Igneel.Vector4[] Colors : Public
Class Igneel.Graphics.ArrowBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ComposedShape`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Igneel.Graphics.ConeBuilder, Igneel.Graphics.CylindreBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.FrameBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ComposedShape`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Igneel.Graphics.ArrowBuilder, Igneel.Graphics.BoxBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.ShapeBuilder`1[TVertex]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TVertex, System.ValueType,  NotNullableValueType DefaultConstructor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector4 Color : Public
  Properties:
    TVertex[] Vertices 'get ' : 
    UInt16[] Indices 'get ' : 
    Igneel.Graphics.IAPrimitive PrimitiveType 'get ' : 
  Methods:
    get_Vertices(): PrivateScope, Public, HideBySig, SpecialName
    get_Indices(): PrivateScope, Public, HideBySig, SpecialName
    get_PrimitiveType(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.Graphics.BoxBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ShapeBuilder`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.CapsuleBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ShapeBuilder`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Single, Single, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Igneel.Graphics.ShapeLayer Top 'get set' : 
    Igneel.Graphics.ShapeLayer Bottom 'get set' : 
    Igneel.Graphics.ShapeLayer Cylindre 'get set' : 
  Methods:
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(ShapeLayer): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    set_Bottom(ShapeLayer): PrivateScope, Public, HideBySig, SpecialName
    get_Cylindre(): PrivateScope, Public, HideBySig, SpecialName
    set_Cylindre(ShapeLayer): PrivateScope, Public, HideBySig, SpecialName
    Build(): PrivateScope, Public, HideBySig
Class Igneel.Graphics.CircleBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ShapeBuilder`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.RotatorSphereBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ComposedShape`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Igneel.Graphics.CircleBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.ConeBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ShapeBuilder`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Int32, Int32, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single height : Public
    Single radius : Public
    Int32 slices : Public
    Int32 stacks : Public
Class Igneel.Graphics.CylindreBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ShapeBuilder`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Int32, Int32, Single, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 slices : Public
    Int32 stacks : Public
    Single radius : Public
    Single height : Public
    Boolean open : Public
Class Igneel.Graphics.DomeBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ShapeBuilder`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Int32, Int32, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.Graphics.ShapeLayer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 StartIndex : Public
    Int32 PrimitiveCount : Public
    Int32 StartVertex : Public
    Int32 VertexCount : Public
Class Igneel.Graphics.SphereBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Igneel.Graphics.ShapeBuilder`1[Igneel.Graphics.MeshVertex]
    Void .ctor(Int32, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.StringConverter: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetValue(Type, String): PrivateScope, Public, Static, HideBySig
    GetString(Object): PrivateScope, Public, Static, HideBySig
Struct Igneel.Rectangle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.Rectangle]
  Fields:
    Int32 X : Public
    Int32 Y : Public
    Int32 Height : Public
    Int32 Width : Public
  Properties:
    Int32 Right 'get ' : 
    Int32 Bottom 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    Contains(Int32, Int32): PrivateScope, Public, HideBySig
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Rectangle): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Igneel.RectangleF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Igneel.RectangleF]
  Fields:
    Single X : Public
    Single Y : Public
    Single Height : Public
    Single Width : Public
  Properties:
    Single Top 'get set' : 
    Single Left 'get set' : 
    Single Right 'get ' : 
    Single Bottom 'get ' : 
    Igneel.Vector2 LeftTop 'get ' : 
    Igneel.Vector2 RightBottom 'get ' : 
    Single Radius 'get ' : 
    Igneel.Vector2 Center 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_LeftTop(): PrivateScope, Public, HideBySig, SpecialName
    get_RightBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    Contains(Vector2): PrivateScope, Public, HideBySig
    Contains(Single, Single): PrivateScope, Public, HideBySig
    Contains(RectangleF): PrivateScope, Public, HideBySig
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(RectangleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Igneel.CoordRectangle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Single LeftU : Public
    Single RightU : Public
    Single TopV : Public
    Single BottomV : Public
Struct Igneel.SizeF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Width : Public
    Single Height : Public
    Igneel.SizeF Empty : Public, Static, InitOnly
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
Struct Igneel.Size: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Width : Public
    Int32 Height : Public
    Igneel.Size Empty : Public, Static, InitOnly
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
Class Igneel.NonSerializedPropAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Igneel.ValueTuple: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Create(T1, T2): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3): PrivateScope, Public, Static, HideBySig
Struct Igneel.Tuple2D`2[T1,T2]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  :System.ValueType
  Fields:
    T1 Item1 : Public
    T2 Item2 : Public
Struct Igneel.Tuple3D`3[T1,T2,T3]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  :System.ValueType
  Fields:
    T1 Item1 : Public
    T2 Item2 : Public
    T3 Item3 : Public
Struct Igneel.Byte4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte X : Public
    Byte Y : Public
    Byte Z : Public
    Byte W : Public
  Properties:
    Byte Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Byte): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Int4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 W : Public
    Int32 X : Public
    Int32 Y : Public
    Int32 Z : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Explicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Igneel.Short4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int16, Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16 W : Public
    Int16 X : Public
    Int16 Y : Public
    Int16 Z : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Explicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
Class Igneel.Graphics.VertexElementAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Graphics.IASemantic, Byte, Int16, Igneel.Graphics.IAFormat, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int16 Offset 'get set' : 
    Int16 Stream 'get set' : 
    Igneel.Graphics.IASemantic Semantic 'get set' : 
    Byte UsageIndex 'get set' : 
    Igneel.Graphics.IAFormat Format 'get set' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Stream(): PrivateScope, Public, HideBySig, SpecialName
    set_Stream(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Semantic(): PrivateScope, Public, HideBySig, SpecialName
    set_Semantic(IASemantic): PrivateScope, Public, HideBySig, SpecialName
    get_UsageIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_UsageIndex(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(IAFormat): PrivateScope, Public, HideBySig, SpecialName
Struct Igneel.Graphics.VertexElement: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int16, Igneel.Graphics.IAFormat, Igneel.Graphics.IASemantic, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16 Offset : Public
    Int16 Stream : Public
    Igneel.Graphics.IASemantic Semantic : Public
    Byte UsageIndex : Public
    Igneel.Graphics.IAFormat Format : Public
Struct Igneel.Graphics.MeshVertex: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Vector3, Igneel.Vector2, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Vector3 Normal : Public
    Igneel.Vector3 Tangent : Public
    Igneel.Vector2 TexCoord : Public
    Single OccFactor : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.SkinnedVertex: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Vector3, Igneel.Vector2, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Vector4 BlendWeights : Public
    Int32 BlendIndices : Public
    Igneel.Vector3 Normal : Public
    Igneel.Vector3 Tangent : Public
    Igneel.Vector2 TexCoord : Public
    Single OccFactor : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.VertexP: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.VertexPNTTx: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Vector3, Igneel.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Vector3 Normal : Public
    Igneel.Vector3 Tangent : Public
    Igneel.Vector2 TexCoord : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.VertexPNTx: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Vector3 Normal : Public
    Igneel.Vector2 TexCoord : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.VertexPTx: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Vector2 TexCoord : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.VertexPTxH: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector4, Igneel.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector4 Position : Public
    Igneel.Vector2 TexCoord : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.VertexPositionColor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, Igneel.Graphics.Color4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Igneel.Vector3, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Graphics.Color4 Color : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.TriVertexP: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 P1 : Public
    Igneel.Vector3 P2 : Public
    Igneel.Vector3 P3 : Public
    Igneel.Vector3 Normal : Public
    Single TriangleIndex : Public
  Methods:
    ComputeNormal(): PrivateScope, Public, HideBySig
    Transform(Matrix): PrivateScope, Public, HideBySig
Struct Igneel.Graphics.TriVertexNTTx: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 Normal1 : Public
    Igneel.Vector3 Normal2 : Public
    Igneel.Vector3 Normal3 : Public
    Igneel.Vector3 Tangent1 : Public
    Igneel.Vector3 Tangent2 : Public
    Igneel.Vector3 Tangent3 : Public
    Igneel.Vector2 TexCood1 : Public
    Igneel.Vector2 TexCood2 : Public
    Igneel.Vector2 TexCood3 : Public
Struct Igneel.Graphics.TriVertexNTTxColor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 Normal1 : Public
    Igneel.Vector3 Normal2 : Public
    Igneel.Vector3 Normal3 : Public
    Igneel.Vector3 Tangent1 : Public
    Igneel.Vector3 Tangent2 : Public
    Igneel.Vector3 Tangent3 : Public
    Igneel.Vector2 TexCood1 : Public
    Igneel.Vector2 TexCood2 : Public
    Igneel.Vector2 TexCood3 : Public
    Igneel.Vector4 Color : Public
Struct Igneel.Graphics.TerrainVertex: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Igneel.Vector3, Igneel.Vector3, Igneel.Vector2, Igneel.Vector2, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Vector3 Normal : Public
    Igneel.Vector2 TexCoord : Public
    Igneel.Vector2 BlendTexCoord : Public
    Single OccFactor : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Graphics.PointSprite: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Igneel.Vector3 Position : Public
    Igneel.Vector2 TexCoord : Public
    Igneel.Graphics.Color4 Color : Public
    Single Size : Public
    Single Rotation : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Igneel.Windows.NativeMessage: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr Handle : Public
    UInt32 Message : Public
    IntPtr WParameter : Public
    IntPtr LParameter : Public
    UInt32 Time : Public
    System.Drawing.Point Location : Public
